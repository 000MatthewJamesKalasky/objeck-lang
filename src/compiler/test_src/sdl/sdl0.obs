use SDL;

class Test {
	@window : static : Window;
	@screen_surface : static : Surface;
	@x_out : static : Surface;
	
	function : Main(args : String[]) ~ Nil {
		# Start up SDL and create window
		if( <>Init() ) {
			"Failed to initialize!"->ErrorLine();
		}
		else {
			# Load media
			if( <>LoadMedia() ) {
				"Failed to load media!"->PrintLine();
			}
			else {			
				# Main loop flag
				quit := false;
				
				# Event handler
				e := Event->New();

				# While application is running
				while( <>quit )
				{
					# Handle events on queue
					while( Core->PollEvent( e ) <> 0 ) {
						# User requests quit
						if( e->Type() = Flags->SdlQuit() ) {
							quit := true;
						};
					};

					# Apply the image
					@x_out->Blit( Nil, @screen_surface, Nil );
				
					# Update the surface
					@window->UpdateSurface();
				};
			};
		};
		
		Close();
	}
	
	function : Init() ~ Bool {
		# Initialization flag
		success := true;
		
		# Initialize SDL
		if(Core->Init(Flags->SdlInitVideo()) < 0) {
			"SDL could not initialize!"->ErrorLine();
			success := false;
		}
		else {
			# Create window
			@window := Window->New( "SDL Tutorial", Flags->SdlWindowposUndefined(), 
				Flags->SdlWindowposUndefined(), 640, 480, Flags->SdlWindowShown());
			if(<>@window->Ok())	{
				"Window could not be created!"->ErrorLine();
				success := false;
			} 
			else {
				# Get window surface
				@screen_surface := Surface->New(@window);
			};
		};
		
		return success;
	}
	
	function : LoadMedia() ~ Bool {
		# Loading success flag
		success := true;

		# Load splash image
		image := "x.bmp";
		@x_out := Core->LoadBmp( image );
		if( <>@x_out->Ok() ) {
			"Unable to load image {$image}"->PrintLine();
			success := false;
		};
		
		return success;
	}
	
	function : Close() ~ Nil {
		# Deallocate surface
		@x_out->Free();
		@x_out := Nil;

		# Destroy window
		@window->Destroy();
		@window := Nil;

		# Quit SDL subsystems
		Core->Quit();
	}
}
