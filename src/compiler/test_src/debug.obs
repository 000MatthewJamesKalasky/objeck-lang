use Collection;
use TinyDB;
use System.IO.File;
use System.IO;

class Test {
	function : Main(args : String[]) ~ Nil {
		columns := ["id","name", "age"];
		table := Table->New("Person", columns, 0);
		
		values := Compare->New[3];
		values[0] := IntHolder->New(0);
		values[1] := "Randy"; 
		values[2] := IntHolder->New(41);
		row := Row->New(values);
		table->Insert(row);
		
		values := Compare->New[3];
		values[0] := IntHolder->New(1);
		values[1] := "John"; 
		values[2] := IntHolder->New(12);
		row := Row->New(values);
		table->Insert(row);
		
		values := Compare->New[3];
		values[0] := IntHolder->New(2);
		values[1] := "Sally"; 
		values[2] := IntHolder->New(25);
		row := Row->New(values);
		table->Insert(row);
		
		values := Compare->New[3];
		values[0] := IntHolder->New(3);
		values[1] := "Harry"; 
		values[2] := IntHolder->New(55);
		row := Row->New(values);
		table->Insert(row);
		
		count := table->Size();
		"total count={$count}"->PrintLine();

		conds := Vector->New();
		conds->AddBack(Conditional->New(2, Conditional->Qualifier->GREATER, IntHolder->New(20)));
		found := table->Where(conds);
		
		"---"->PrintLine();
		each(i : found) {
			found->Get(i)->As(Row)->ToString()->PrintLine();
		};

		serializer := Serializer->New();
		serializer->Write(row);
		data := serializer->Serialize();
		
		out := FileWriter->New("out.dat");
		out->WriteBuffer(data);
		out->Close();
#~		
		data := FileReader->ReadBinaryFile("out.dat");
#		if(data <> Nil) {
			deserializer := Deserializer->New(data);
			r := deserializer->ReadObject()->As(Row);
			r->ToString()->PrintLine();
#		};
~#
	}
}
