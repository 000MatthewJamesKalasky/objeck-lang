bundle GTK3 {
	class : private : Proxy {
		@lib_proxy : static : DllProxy;

		function : GetDllProxy() ~ DllProxy {
			if(@lib_proxy = Nil) {
				@lib_proxy := DllProxy->New("libobjk_gtk3";
			};

			return @lib_proxy;
		}
	}

	consts AxisUse {
		GDK_AXIS_IGNORE := 0,
		GDK_AXIS_X := 1,
		GDK_AXIS_Y := 2,
		GDK_AXIS_PRESSURE := 3,
		GDK_AXIS_XTILT := 4,
		GDK_AXIS_YTILT := 5,
		GDK_AXIS_WHEEL := 6,
		GDK_AXIS_DISTANCE := 7,
		GDK_AXIS_ROTATION := 8,
		GDK_AXIS_SLIDER := 9,
		GDK_AXIS_LAST := 10	
	}

	consts ByteOrder {
		GDK_LSB_FIRST := 0,
		GDK_MSB_FIRST := 1	
	}

	consts CrossingMode {
		GDK_CROSSING_NORMAL := 0,
		GDK_CROSSING_GRAB := 1,
		GDK_CROSSING_UNGRAB := 2,
		GDK_CROSSING_GTK_GRAB := 3,
		GDK_CROSSING_GTK_UNGRAB := 4,
		GDK_CROSSING_STATE_CHANGED := 5,
		GDK_CROSSING_TOUCH_BEGIN := 6,
		GDK_CROSSING_TOUCH_END := 7,
		GDK_CROSSING_DEVICE_SWITCH := 8	
	}

	consts CursorType {
		GDK_X_CURSOR := 0,
		GDK_ARROW := 2,
		GDK_BASED_ARROW_DOWN := 4,
		GDK_BASED_ARROW_UP := 6,
		GDK_BOAT := 8,
		GDK_BOGOSITY := 10,
		GDK_BOTTOM_LEFT_CORNER := 12,
		GDK_BOTTOM_RIGHT_CORNER := 14,
		GDK_BOTTOM_SIDE := 16,
		GDK_BOTTOM_TEE := 18,
		GDK_BOX_SPIRAL := 20,
		GDK_CENTER_PTR := 22,
		GDK_CIRCLE := 24,
		GDK_CLOCK := 26,
		GDK_COFFEE_MUG := 28,
		GDK_CROSS := 30,
		GDK_CROSS_REVERSE := 32,
		GDK_CROSSHAIR := 34,
		GDK_DIAMOND_CROSS := 36,
		GDK_DOT := 38,
		GDK_DOTBOX := 40,
		GDK_DOUBLE_ARROW := 42,
		GDK_DRAFT_LARGE := 44,
		GDK_DRAFT_SMALL := 46,
		GDK_DRAPED_BOX := 48,
		GDK_EXCHANGE := 50,
		GDK_FLEUR := 52,
		GDK_GOBBLER := 54,
		GDK_GUMBY := 56,
		GDK_HAND1 := 58,
		GDK_HAND2 := 60,
		GDK_HEART := 62,
		GDK_ICON := 64,
		GDK_IRON_CROSS := 66,
		GDK_LEFT_PTR := 68,
		GDK_LEFT_SIDE := 70,
		GDK_LEFT_TEE := 72,
		GDK_LEFTBUTTON := 74,
		GDK_LL_ANGLE := 76,
		GDK_LR_ANGLE := 78,
		GDK_MAN := 80,
		GDK_MIDDLEBUTTON := 82,
		GDK_MOUSE := 84,
		GDK_PENCIL := 86,
		GDK_PIRATE := 88,
		GDK_PLUS := 90,
		GDK_QUESTION_ARROW := 92,
		GDK_RIGHT_PTR := 94,
		GDK_RIGHT_SIDE := 96,
		GDK_RIGHT_TEE := 98,
		GDK_RIGHTBUTTON := 100,
		GDK_RTL_LOGO := 102,
		GDK_SAILBOAT := 104,
		GDK_SB_DOWN_ARROW := 106,
		GDK_SB_H_DOUBLE_ARROW := 108,
		GDK_SB_LEFT_ARROW := 110,
		GDK_SB_RIGHT_ARROW := 112,
		GDK_SB_UP_ARROW := 114,
		GDK_SB_V_DOUBLE_ARROW := 116,
		GDK_SHUTTLE := 118,
		GDK_SIZING := 120,
		GDK_SPIDER := 122,
		GDK_SPRAYCAN := 124,
		GDK_STAR := 126,
		GDK_TARGET := 128,
		GDK_TCROSS := 130,
		GDK_TOP_LEFT_ARROW := 132,
		GDK_TOP_LEFT_CORNER := 134,
		GDK_TOP_RIGHT_CORNER := 136,
		GDK_TOP_SIDE := 138,
		GDK_TOP_TEE := 140,
		GDK_TREK := 142,
		GDK_UL_ANGLE := 144,
		GDK_UMBRELLA := 146,
		GDK_UR_ANGLE := 148,
		GDK_WATCH := 150,
		GDK_XTERM := 152,
		GDK_LAST_CURSOR := 153,
		GDK_BLANK_CURSOR := -2,
		GDK_CURSOR_IS_PIXMAP := -1	
	}

	consts DevicePadFeature {
		GDK_DEVICE_PAD_FEATURE_BUTTON := 0,
		GDK_DEVICE_PAD_FEATURE_RING := 1,
		GDK_DEVICE_PAD_FEATURE_STRIP := 2	
	}

	consts DeviceToolType {
		GDK_DEVICE_TOOL_TYPE_UNKNOWN := 0,
		GDK_DEVICE_TOOL_TYPE_PEN := 1,
		GDK_DEVICE_TOOL_TYPE_ERASER := 2,
		GDK_DEVICE_TOOL_TYPE_BRUSH := 3,
		GDK_DEVICE_TOOL_TYPE_PENCIL := 4,
		GDK_DEVICE_TOOL_TYPE_AIRBRUSH := 5,
		GDK_DEVICE_TOOL_TYPE_MOUSE := 6,
		GDK_DEVICE_TOOL_TYPE_LENS := 7	
	}

	consts DeviceType {
		GDK_DEVICE_TYPE_MASTER := 0,
		GDK_DEVICE_TYPE_SLAVE := 1,
		GDK_DEVICE_TYPE_FLOATING := 2	
	}

	consts DragCancelReason {
		GDK_DRAG_CANCEL_NO_TARGET := 0,
		GDK_DRAG_CANCEL_USER_CANCELLED := 1,
		GDK_DRAG_CANCEL_ERROR := 2	
	}

	consts DragProtocol {
		GDK_DRAG_PROTO_NONE := 0,
		GDK_DRAG_PROTO_MOTIF := 1,
		GDK_DRAG_PROTO_XDND := 2,
		GDK_DRAG_PROTO_ROOTWIN := 3,
		GDK_DRAG_PROTO_WIN32_DROPFILES := 4,
		GDK_DRAG_PROTO_OLE2 := 5,
		GDK_DRAG_PROTO_LOCAL := 6,
		GDK_DRAG_PROTO_WAYLAND := 7	
	}

	consts EventType {
		GDK_NOTHING := -1,
		GDK_DELETE := 0,
		GDK_DESTROY := 1,
		GDK_EXPOSE := 2,
		GDK_MOTION_NOTIFY := 3,
		GDK_BUTTON_PRESS := 4,
		GDK_2BUTTON_PRESS := 5,
		GDK_DOUBLE_BUTTON_PRESS := 5,
		GDK_3BUTTON_PRESS := 6,
		GDK_TRIPLE_BUTTON_PRESS := 6,
		GDK_BUTTON_RELEASE := 7,
		GDK_KEY_PRESS := 8,
		GDK_KEY_RELEASE := 9,
		GDK_ENTER_NOTIFY := 10,
		GDK_LEAVE_NOTIFY := 11,
		GDK_FOCUS_CHANGE := 12,
		GDK_CONFIGURE := 13,
		GDK_MAP := 14,
		GDK_UNMAP := 15,
		GDK_PROPERTY_NOTIFY := 16,
		GDK_SELECTION_CLEAR := 17,
		GDK_SELECTION_REQUEST := 18,
		GDK_SELECTION_NOTIFY := 19,
		GDK_PROXIMITY_IN := 20,
		GDK_PROXIMITY_OUT := 21,
		GDK_DRAG_ENTER := 22,
		GDK_DRAG_LEAVE := 23,
		GDK_DRAG_MOTION := 24,
		GDK_DRAG_STATUS := 25,
		GDK_DROP_START := 26,
		GDK_DROP_FINISHED := 27,
		GDK_CLIENT_EVENT := 28,
		GDK_VISIBILITY_NOTIFY := 29,
		GDK_SCROLL := 31,
		GDK_WINDOW_STATE := 32,
		GDK_SETTING := 33,
		GDK_OWNER_CHANGE := 34,
		GDK_GRAB_BROKEN := 35,
		GDK_DAMAGE := 36,
		GDK_TOUCH_BEGIN := 37,
		GDK_TOUCH_UPDATE := 38,
		GDK_TOUCH_END := 39,
		GDK_TOUCH_CANCEL := 40,
		GDK_TOUCHPAD_SWIPE := 41,
		GDK_TOUCHPAD_PINCH := 42,
		GDK_PAD_BUTTON_PRESS := 43,
		GDK_PAD_BUTTON_RELEASE := 44,
		GDK_PAD_RING := 45,
		GDK_PAD_STRIP := 46,
		GDK_PAD_GROUP_MODE := 47,
		GDK_EVENT_LAST := 48	
	}

	consts FilterReturn {
		GDK_FILTER_CONTINUE := 0,
		GDK_FILTER_TRANSLATE := 1,
		GDK_FILTER_REMOVE := 2	
	}

	consts FullscreenMode {
		GDK_FULLSCREEN_ON_CURRENT_MONITOR := 0,
		GDK_FULLSCREEN_ON_ALL_MONITORS := 1	
	}

	consts GLError {
		GDK_GL_ERROR_NOT_AVAILABLE := 0,
		GDK_GL_ERROR_UNSUPPORTED_FORMAT := 1,
		GDK_GL_ERROR_UNSUPPORTED_PROFILE := 2	
	}

	consts GrabOwnership {
		GDK_OWNERSHIP_NONE := 0,
		GDK_OWNERSHIP_WINDOW := 1,
		GDK_OWNERSHIP_APPLICATION := 2	
	}

	consts GrabStatus {
		GDK_GRAB_SUCCESS := 0,
		GDK_GRAB_ALREADY_GRABBED := 1,
		GDK_GRAB_INVALID_TIME := 2,
		GDK_GRAB_NOT_VIEWABLE := 3,
		GDK_GRAB_FROZEN := 4,
		GDK_GRAB_FAILED := 5	
	}

	consts Gravity {
		GDK_GRAVITY_NORTH_WEST := 1,
		GDK_GRAVITY_NORTH := 2,
		GDK_GRAVITY_NORTH_EAST := 3,
		GDK_GRAVITY_WEST := 4,
		GDK_GRAVITY_CENTER := 5,
		GDK_GRAVITY_EAST := 6,
		GDK_GRAVITY_SOUTH_WEST := 7,
		GDK_GRAVITY_SOUTH := 8,
		GDK_GRAVITY_SOUTH_EAST := 9,
		GDK_GRAVITY_STATIC := 10	
	}

	consts InputMode {
		GDK_MODE_DISABLED := 0,
		GDK_MODE_SCREEN := 1,
		GDK_MODE_WINDOW := 2	
	}

	consts InputSource {
		GDK_SOURCE_MOUSE := 0,
		GDK_SOURCE_PEN := 1,
		GDK_SOURCE_ERASER := 2,
		GDK_SOURCE_CURSOR := 3,
		GDK_SOURCE_KEYBOARD := 4,
		GDK_SOURCE_TOUCHSCREEN := 5,
		GDK_SOURCE_TOUCHPAD := 6,
		GDK_SOURCE_TRACKPOINT := 7,
		GDK_SOURCE_TABLET_PAD := 8	
	}

	consts ModifierIntent {
		GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR := 0,
		GDK_MODIFIER_INTENT_CONTEXT_MENU := 1,
		GDK_MODIFIER_INTENT_EXTEND_SELECTION := 2,
		GDK_MODIFIER_INTENT_MODIFY_SELECTION := 3,
		GDK_MODIFIER_INTENT_NO_TEXT_INPUT := 4,
		GDK_MODIFIER_INTENT_SHIFT_GROUP := 5,
		GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK := 6	
	}

	consts NotifyType {
		GDK_NOTIFY_ANCESTOR := 0,
		GDK_NOTIFY_VIRTUAL := 1,
		GDK_NOTIFY_INFERIOR := 2,
		GDK_NOTIFY_NONLINEAR := 3,
		GDK_NOTIFY_NONLINEAR_VIRTUAL := 4,
		GDK_NOTIFY_UNKNOWN := 5	
	}

	consts OwnerChange {
		GDK_OWNER_CHANGE_NEW_OWNER := 0,
		GDK_OWNER_CHANGE_DESTROY := 1,
		GDK_OWNER_CHANGE_CLOSE := 2	
	}

	consts PropMode {
		GDK_PROP_MODE_REPLACE := 0,
		GDK_PROP_MODE_PREPEND := 1,
		GDK_PROP_MODE_APPEND := 2	
	}

	consts PropertyState {
		GDK_PROPERTY_NEW_VALUE := 0,
		GDK_PROPERTY_DELETE := 1	
	}

	consts ScrollDirection {
		GDK_SCROLL_UP := 0,
		GDK_SCROLL_DOWN := 1,
		GDK_SCROLL_LEFT := 2,
		GDK_SCROLL_RIGHT := 3,
		GDK_SCROLL_SMOOTH := 4	
	}

	consts SettingAction {
		GDK_SETTING_ACTION_NEW := 0,
		GDK_SETTING_ACTION_CHANGED := 1,
		GDK_SETTING_ACTION_DELETED := 2	
	}

	consts Status {
		GDK_OK := 0,
		GDK_ERROR := -1,
		GDK_ERROR_PARAM := -2,
		GDK_ERROR_FILE := -3,
		GDK_ERROR_MEM := -4	
	}

	consts SubpixelLayout {
		GDK_SUBPIXEL_LAYOUT_UNKNOWN := 0,
		GDK_SUBPIXEL_LAYOUT_NONE := 1,
		GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB := 2,
		GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR := 3,
		GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB := 4,
		GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR := 5	
	}

	consts TouchpadGesturePhase {
		GDK_TOUCHPAD_GESTURE_PHASE_BEGIN := 0,
		GDK_TOUCHPAD_GESTURE_PHASE_UPDATE := 1,
		GDK_TOUCHPAD_GESTURE_PHASE_END := 2,
		GDK_TOUCHPAD_GESTURE_PHASE_CANCEL := 3	
	}

	consts VisibilityState {
		GDK_VISIBILITY_UNOBSCURED := 0,
		GDK_VISIBILITY_PARTIAL := 1,
		GDK_VISIBILITY_FULLY_OBSCURED := 2	
	}

	consts VisualType {
		GDK_VISUAL_STATIC_GRAY := 0,
		GDK_VISUAL_GRAYSCALE := 1,
		GDK_VISUAL_STATIC_COLOR := 2,
		GDK_VISUAL_PSEUDO_COLOR := 3,
		GDK_VISUAL_TRUE_COLOR := 4,
		GDK_VISUAL_DIRECT_COLOR := 5	
	}

	consts WindowEdge {
		GDK_WINDOW_EDGE_NORTH_WEST := 0,
		GDK_WINDOW_EDGE_NORTH := 1,
		GDK_WINDOW_EDGE_NORTH_EAST := 2,
		GDK_WINDOW_EDGE_WEST := 3,
		GDK_WINDOW_EDGE_EAST := 4,
		GDK_WINDOW_EDGE_SOUTH_WEST := 5,
		GDK_WINDOW_EDGE_SOUTH := 6,
		GDK_WINDOW_EDGE_SOUTH_EAST := 7	
	}

	consts WindowType {
		GDK_WINDOW_ROOT := 0,
		GDK_WINDOW_TOPLEVEL := 1,
		GDK_WINDOW_CHILD := 2,
		GDK_WINDOW_TEMP := 3,
		GDK_WINDOW_FOREIGN := 4,
		GDK_WINDOW_OFFSCREEN := 5,
		GDK_WINDOW_SUBSURFACE := 6	
	}

	consts WindowTypeHint {
		GDK_WINDOW_TYPE_HINT_NORMAL := 0,
		GDK_WINDOW_TYPE_HINT_DIALOG := 1,
		GDK_WINDOW_TYPE_HINT_MENU := 2,
		GDK_WINDOW_TYPE_HINT_TOOLBAR := 3,
		GDK_WINDOW_TYPE_HINT_SPLASHSCREEN := 4,
		GDK_WINDOW_TYPE_HINT_UTILITY := 5,
		GDK_WINDOW_TYPE_HINT_DOCK := 6,
		GDK_WINDOW_TYPE_HINT_DESKTOP := 7,
		GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU := 8,
		GDK_WINDOW_TYPE_HINT_POPUP_MENU := 9,
		GDK_WINDOW_TYPE_HINT_TOOLTIP := 10,
		GDK_WINDOW_TYPE_HINT_NOTIFICATION := 11,
		GDK_WINDOW_TYPE_HINT_COMBO := 12,
		GDK_WINDOW_TYPE_HINT_DND := 13	
	}

	consts WindowWindowClass {
		GDK_INPUT_OUTPUT := 0,
		GDK_INPUT_ONLY := 1	
	}

	consts AnchorHints {
		GDK_ANCHOR_FLIP_X := 1,
		GDK_ANCHOR_FLIP_Y := 2,
		GDK_ANCHOR_SLIDE_X := 4,
		GDK_ANCHOR_SLIDE_Y := 8,
		GDK_ANCHOR_RESIZE_X := 16,
		GDK_ANCHOR_RESIZE_Y := 32,
		GDK_ANCHOR_FLIP := 3,
		GDK_ANCHOR_SLIDE := 12,
		GDK_ANCHOR_RESIZE := 48	
	}

	consts AxisFlags {
		GDK_AXIS_FLAG_X := 2,
		GDK_AXIS_FLAG_Y := 4,
		GDK_AXIS_FLAG_PRESSURE := 8,
		GDK_AXIS_FLAG_XTILT := 16,
		GDK_AXIS_FLAG_YTILT := 32,
		GDK_AXIS_FLAG_WHEEL := 64,
		GDK_AXIS_FLAG_DISTANCE := 128,
		GDK_AXIS_FLAG_ROTATION := 256,
		GDK_AXIS_FLAG_SLIDER := 512	
	}

	consts DragAction {
		GDK_ACTION_DEFAULT := 1,
		GDK_ACTION_COPY := 2,
		GDK_ACTION_MOVE := 4,
		GDK_ACTION_LINK := 8,
		GDK_ACTION_PRIVATE := 16,
		GDK_ACTION_ASK := 32	
	}

	consts EventMask {
		GDK_EXPOSURE_MASK := 2,
		GDK_POINTER_MOTION_MASK := 4,
		GDK_POINTER_MOTION_HINT_MASK := 8,
		GDK_BUTTON_MOTION_MASK := 16,
		GDK_BUTTON1_MOTION_MASK := 32,
		GDK_BUTTON2_MOTION_MASK := 64,
		GDK_BUTTON3_MOTION_MASK := 128,
		GDK_BUTTON_PRESS_MASK := 256,
		GDK_BUTTON_RELEASE_MASK := 512,
		GDK_KEY_PRESS_MASK := 1024,
		GDK_KEY_RELEASE_MASK := 2048,
		GDK_ENTER_NOTIFY_MASK := 4096,
		GDK_LEAVE_NOTIFY_MASK := 8192,
		GDK_FOCUS_CHANGE_MASK := 16384,
		GDK_STRUCTURE_MASK := 32768,
		GDK_PROPERTY_CHANGE_MASK := 65536,
		GDK_VISIBILITY_NOTIFY_MASK := 131072,
		GDK_PROXIMITY_IN_MASK := 262144,
		GDK_PROXIMITY_OUT_MASK := 524288,
		GDK_SUBSTRUCTURE_MASK := 1048576,
		GDK_SCROLL_MASK := 2097152,
		GDK_TOUCH_MASK := 4194304,
		GDK_SMOOTH_SCROLL_MASK := 8388608,
		GDK_TOUCHPAD_GESTURE_MASK := 16777216,
		GDK_TABLET_PAD_MASK := 33554432,
		GDK_ALL_EVENTS_MASK := 67108862	
	}

	consts FrameClockPhase {
		GDK_FRAME_CLOCK_PHASE_NONE := 0,
		GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS := 1,
		GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT := 2,
		GDK_FRAME_CLOCK_PHASE_UPDATE := 4,
		GDK_FRAME_CLOCK_PHASE_LAYOUT := 8,
		GDK_FRAME_CLOCK_PHASE_PAINT := 16,
		GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS := 32,
		GDK_FRAME_CLOCK_PHASE_AFTER_PAINT := 64	
	}

	consts ModifierType {
		GDK_SHIFT_MASK := 1,
		GDK_LOCK_MASK := 2,
		GDK_CONTROL_MASK := 4,
		GDK_MOD1_MASK := 8,
		GDK_MOD2_MASK := 16,
		GDK_MOD3_MASK := 32,
		GDK_MOD4_MASK := 64,
		GDK_MOD5_MASK := 128,
		GDK_BUTTON1_MASK := 256,
		GDK_BUTTON2_MASK := 512,
		GDK_BUTTON3_MASK := 1024,
		GDK_BUTTON4_MASK := 2048,
		GDK_BUTTON5_MASK := 4096,
		GDK_MODIFIER_RESERVED_13_MASK := 8192,
		GDK_MODIFIER_RESERVED_14_MASK := 16384,
		GDK_MODIFIER_RESERVED_15_MASK := 32768,
		GDK_MODIFIER_RESERVED_16_MASK := 65536,
		GDK_MODIFIER_RESERVED_17_MASK := 131072,
		GDK_MODIFIER_RESERVED_18_MASK := 262144,
		GDK_MODIFIER_RESERVED_19_MASK := 524288,
		GDK_MODIFIER_RESERVED_20_MASK := 1048576,
		GDK_MODIFIER_RESERVED_21_MASK := 2097152,
		GDK_MODIFIER_RESERVED_22_MASK := 4194304,
		GDK_MODIFIER_RESERVED_23_MASK := 8388608,
		GDK_MODIFIER_RESERVED_24_MASK := 16777216,
		GDK_MODIFIER_RESERVED_25_MASK := 33554432,
		GDK_SUPER_MASK := 67108864,
		GDK_HYPER_MASK := 134217728,
		GDK_META_MASK := 268435456,
		GDK_MODIFIER_RESERVED_29_MASK := 536870912,
		GDK_RELEASE_MASK := 1073741824,
		GDK_MODIFIER_MASK := 1543512063	
	}

	consts SeatCapabilities {
		GDK_SEAT_CAPABILITY_NONE := 0,
		GDK_SEAT_CAPABILITY_POINTER := 1,
		GDK_SEAT_CAPABILITY_TOUCH := 2,
		GDK_SEAT_CAPABILITY_TABLET_STYLUS := 4,
		GDK_SEAT_CAPABILITY_KEYBOARD := 8,
		GDK_SEAT_CAPABILITY_ALL_POINTING := 7,
		GDK_SEAT_CAPABILITY_ALL := 15	
	}

	consts WMDecoration {
		GDK_DECOR_ALL := 1,
		GDK_DECOR_BORDER := 2,
		GDK_DECOR_RESIZEH := 4,
		GDK_DECOR_TITLE := 8,
		GDK_DECOR_MENU := 16,
		GDK_DECOR_MINIMIZE := 32,
		GDK_DECOR_MAXIMIZE := 64	
	}

	consts WMFunction {
		GDK_FUNC_ALL := 1,
		GDK_FUNC_RESIZE := 2,
		GDK_FUNC_MOVE := 4,
		GDK_FUNC_MINIMIZE := 8,
		GDK_FUNC_MAXIMIZE := 16,
		GDK_FUNC_CLOSE := 32	
	}

	consts WindowAttributesType {
		GDK_WA_TITLE := 2,
		GDK_WA_X := 4,
		GDK_WA_Y := 8,
		GDK_WA_CURSOR := 16,
		GDK_WA_VISUAL := 32,
		GDK_WA_WMCLASS := 64,
		GDK_WA_NOREDIR := 128,
		GDK_WA_TYPE_HINT := 256	
	}

	consts WindowHints {
		GDK_HINT_POS := 1,
		GDK_HINT_MIN_SIZE := 2,
		GDK_HINT_MAX_SIZE := 4,
		GDK_HINT_BASE_SIZE := 8,
		GDK_HINT_ASPECT := 16,
		GDK_HINT_RESIZE_INC := 32,
		GDK_HINT_WIN_GRAVITY := 64,
		GDK_HINT_USER_POS := 128,
		GDK_HINT_USER_SIZE := 256	
	}

	consts WindowState {
		GDK_WINDOW_STATE_WITHDRAWN := 1,
		GDK_WINDOW_STATE_ICONIFIED := 2,
		GDK_WINDOW_STATE_MAXIMIZED := 4,
		GDK_WINDOW_STATE_STICKY := 8,
		GDK_WINDOW_STATE_FULLSCREEN := 16,
		GDK_WINDOW_STATE_ABOVE := 32,
		GDK_WINDOW_STATE_BELOW := 64,
		GDK_WINDOW_STATE_FOCUSED := 128,
		GDK_WINDOW_STATE_TILED := 256,
		GDK_WINDOW_STATE_TOP_TILED := 512,
		GDK_WINDOW_STATE_TOP_RESIZABLE := 1024,
		GDK_WINDOW_STATE_RIGHT_TILED := 2048,
		GDK_WINDOW_STATE_RIGHT_RESIZABLE := 4096,
		GDK_WINDOW_STATE_BOTTOM_TILED := 8192,
		GDK_WINDOW_STATE_BOTTOM_RESIZABLE := 16384,
		GDK_WINDOW_STATE_LEFT_TILED := 32768,
		GDK_WINDOW_STATE_LEFT_RESIZABLE := 65536	
	}

	#
	# Window
	#
	class Window {
		@gobject : Int;

		New(gobject : Int) {
			@gobject := gobject;
		}

		method : public : AddFilter(function : FilterFunc, data : Int) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := function;
			array_args[3] := IntRef->New(data);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_add_filter", array_args);
		}

		method : public : Beep() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_beep", array_args);
		}

		method : public : BeginMoveDrag(button : Int, root_x : Int, root_y : Int, timestamp : Int) ~ Nil {
			array_args := Base->New[6];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(button);
			array_args[3] := IntRef->New(root_x);
			array_args[4] := IntRef->New(root_y);
			array_args[5] := IntRef->New(timestamp);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_begin_move_drag", array_args);
		}

		method : public : BeginMoveDragForDevice(device : Device, button : Int, root_x : Int, root_y : Int, timestamp : Int) ~ Nil {
			array_args := Base->New[7];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := device;
			array_args[3] := IntRef->New(button);
			array_args[4] := IntRef->New(root_x);
			array_args[5] := IntRef->New(root_y);
			array_args[6] := IntRef->New(timestamp);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_begin_move_drag_for_device", array_args);
		}

		method : public : BeginPaintRect(rectangle : Rectangle) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := rectangle;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_begin_paint_rect", array_args);
		}

		method : public : BeginResizeDrag(edge : WindowEdge, button : Int, root_x : Int, root_y : Int, timestamp : Int) ~ Nil {
			array_args := Base->New[7];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := edge;
			array_args[3] := IntRef->New(button);
			array_args[4] := IntRef->New(root_x);
			array_args[5] := IntRef->New(root_y);
			array_args[6] := IntRef->New(timestamp);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_begin_resize_drag", array_args);
		}

		method : public : BeginResizeDragForDevice(edge : WindowEdge, device : Device, button : Int, root_x : Int, root_y : Int, timestamp : Int) ~ Nil {
			array_args := Base->New[8];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := edge;
			array_args[3] := device;
			array_args[4] := IntRef->New(button);
			array_args[5] := IntRef->New(root_x);
			array_args[6] := IntRef->New(root_y);
			array_args[7] := IntRef->New(timestamp);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_begin_resize_drag_for_device", array_args);
		}

		method : public : ConfigureFinished() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_configure_finished", array_args);
		}

		method : public : CoordsFromParent(parent_x : Float, parent_y : Float, x : Float, y : Float) ~ Nil {
			array_args := Base->New[6];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := FloatRef->New(parent_x);
			array_args[3] := FloatRef->New(parent_y);
			array_args[4] := FloatRef->New(x);
			array_args[5] := FloatRef->New(y);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_coords_from_parent", array_args);
		}

		method : public : CoordsToParent(x : Float, y : Float, parent_x : Float, parent_y : Float) ~ Nil {
			array_args := Base->New[6];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := FloatRef->New(x);
			array_args[3] := FloatRef->New(y);
			array_args[4] := FloatRef->New(parent_x);
			array_args[5] := FloatRef->New(parent_y);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_coords_to_parent", array_args);
		}

		method : public : CreateGlContext() ~ GLContext {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_create_gl_context", array_args);
	
			value := array_args[0]->As(IntRef);
			return GLContext->New(value);
		}

		method : public : Deiconify() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_deiconify", array_args);
		}

		method : public : Destroy() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_destroy", array_args);
		}

		method : public : DestroyNotify() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_destroy_notify", array_args);
		}

		method : public : EnableSynchronizedConfigure() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_enable_synchronized_configure", array_args);
		}

		method : public : EndDrawFrame(context : DrawingContext) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := context;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_end_draw_frame", array_args);
		}

		method : public : EndPaint() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_end_paint", array_args);
		}

		method : public : EnsureNative() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_ensure_native", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : Flush() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_flush", array_args);
		}

		method : public : Focus(timestamp : Int) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(timestamp);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_focus", array_args);
		}

		method : public : FreezeToplevelUpdatesLibgtkOnly() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_freeze_toplevel_updates_libgtk_only", array_args);
		}

		method : public : FreezeUpdates() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_freeze_updates", array_args);
		}

		method : public : Fullscreen() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_fullscreen", array_args);
		}

		method : public : FullscreenOnMonitor(monitor : Int) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(monitor);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_fullscreen_on_monitor", array_args);
		}

		method : public : GeometryChanged() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_geometry_changed", array_args);
		}

		method : public : GetAcceptFocus() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_accept_focus", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : GetComposited() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_composited", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : GetCursor() ~ Cursor {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_cursor", array_args);
	
			value := array_args[0]->As(IntRef);
			return Cursor->New(value);
		}

		method : public : GetDecorations(decorations : WMDecoration) ~ Bool {
			array_args := Base->New[3];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := decorations;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_decorations", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : GetDeviceCursor(device : Device) ~ Cursor {
			array_args := Base->New[3];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := device;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_device_cursor", array_args);
	
			value := array_args[0]->As(IntRef);
			return Cursor->New(value);
		}

		method : public : GetDeviceEvents(device : Device) ~ EventMask {
			array_args := Base->New[3];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := device;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_device_events", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->As(EventMask);
		}

		method : public : GetDevicePosition(device : Device, x : Int, y : Int, mask : ModifierType) ~ Window {
			array_args := Base->New[6];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := device;
			array_args[3] := IntRef->New(x);
			array_args[4] := IntRef->New(y);
			array_args[5] := mask;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_device_position", array_args);
	
			value := array_args[0]->As(IntRef);
			return Window->New(value);
		}

		method : public : GetDevicePositionDouble(device : Device, x : Float, y : Float, mask : ModifierType) ~ Window {
			array_args := Base->New[6];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := device;
			array_args[3] := FloatRef->New(x);
			array_args[4] := FloatRef->New(y);
			array_args[5] := mask;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_device_position_double", array_args);
	
			value := array_args[0]->As(IntRef);
			return Window->New(value);
		}

		method : public : GetDisplay() ~ Display {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_display", array_args);
	
			value := array_args[0]->As(IntRef);
			return Display->New(value);
		}

		method : public : GetDragProtocol(target : Window) ~ DragProtocol {
			array_args := Base->New[3];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := target;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_drag_protocol", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->As(DragProtocol);
		}

		method : public : GetEffectiveParent() ~ Window {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_effective_parent", array_args);
	
			value := array_args[0]->As(IntRef);
			return Window->New(value);
		}

		method : public : GetEffectiveToplevel() ~ Window {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_effective_toplevel", array_args);
	
			value := array_args[0]->As(IntRef);
			return Window->New(value);
		}

		method : public : GetEventCompression() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_event_compression", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : GetEvents() ~ EventMask {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_events", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->As(EventMask);
		}

		method : public : GetFocusOnMap() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_focus_on_map", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : GetFrameClock() ~ FrameClock {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_frame_clock", array_args);
	
			value := array_args[0]->As(IntRef);
			return FrameClock->New(value);
		}

		method : public : GetFrameExtents(rect : Rectangle) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := rect;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_frame_extents", array_args);
		}

		method : public : GetFullscreenMode() ~ FullscreenMode {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_fullscreen_mode", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->As(FullscreenMode);
		}

		method : public : GetGeometry(x : Int, y : Int, width : Int, height : Int) ~ Nil {
			array_args := Base->New[6];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(x);
			array_args[3] := IntRef->New(y);
			array_args[4] := IntRef->New(width);
			array_args[5] := IntRef->New(height);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_geometry", array_args);
		}

		method : public : GetGroup() ~ Window {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_group", array_args);
	
			value := array_args[0]->As(IntRef);
			return Window->New(value);
		}

		method : public : GetHeight() ~ int {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_height", array_args);
	
			value := array_args[0]->As(IntRef);
			return int->New(value);
		}

		method : public : GetModalHint() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_modal_hint", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : GetOrigin(x : Int, y : Int) ~ Int {
			array_args := Base->New[4];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(x);
			array_args[3] := IntRef->New(y);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_origin", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get();
		}

		method : public : GetParent() ~ Window {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_parent", array_args);
	
			value := array_args[0]->As(IntRef);
			return Window->New(value);
		}

		method : public : GetPassThrough() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_pass_through", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : GetPointer(x : Int, y : Int, mask : ModifierType) ~ Window {
			array_args := Base->New[5];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(x);
			array_args[3] := IntRef->New(y);
			array_args[4] := mask;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_pointer", array_args);
	
			value := array_args[0]->As(IntRef);
			return Window->New(value);
		}

		method : public : GetPosition(x : Int, y : Int) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(x);
			array_args[3] := IntRef->New(y);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_position", array_args);
		}

		method : public : GetRootCoords(x : Int, y : Int, root_x : Int, root_y : Int) ~ Nil {
			array_args := Base->New[6];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(x);
			array_args[3] := IntRef->New(y);
			array_args[4] := IntRef->New(root_x);
			array_args[5] := IntRef->New(root_y);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_root_coords", array_args);
		}

		method : public : GetRootOrigin(x : Int, y : Int) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(x);
			array_args[3] := IntRef->New(y);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_root_origin", array_args);
		}

		method : public : GetScaleFactor() ~ Int {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_scale_factor", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get();
		}

		method : public : GetScreen() ~ Screen {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_screen", array_args);
	
			value := array_args[0]->As(IntRef);
			return Screen->New(value);
		}

		method : public : GetSourceEvents(source : InputSource) ~ EventMask {
			array_args := Base->New[3];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := source;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_source_events", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->As(EventMask);
		}

		method : public : GetState() ~ WindowState {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_state", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->As(WindowState);
		}

		method : public : GetSupportMultidevice() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_support_multidevice", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : GetToplevel() ~ Window {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_toplevel", array_args);
	
			value := array_args[0]->As(IntRef);
			return Window->New(value);
		}

		method : public : GetTypeHint() ~ WindowTypeHint {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_type_hint", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->As(WindowTypeHint);
		}

		method : public : GetUserData(data : Int) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(data);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_user_data", array_args);
		}

		method : public : GetVisual() ~ Visual {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_visual", array_args);
	
			value := array_args[0]->As(IntRef);
			return Visual->New(value);
		}

		method : public : GetWidth() ~ int {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_width", array_args);
	
			value := array_args[0]->As(IntRef);
			return int->New(value);
		}

		method : public : GetWindowType() ~ WindowType {
			array_args := Base->New[2];
	
			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_get_window_type", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->As(WindowType);
		}

		method : public : HasNative() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_has_native", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : Hide() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_hide", array_args);
		}

		method : public : Iconify() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_iconify", array_args);
		}

		method : public : InvalidateRect(rect : Rectangle, invalidate_children : Bool) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := rect;
			array_args[3] := IntRef->New(invalidate_children = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_invalidate_rect", array_args);
		}

		method : public : IsDestroyed() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_is_destroyed", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : IsInputOnly() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_is_input_only", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : IsShaped() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_is_shaped", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : IsViewable() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_is_viewable", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : IsVisible() ~ Bool {
			array_args := Base->New[2];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_is_visible", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : Lower() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_lower", array_args);
		}

		method : public : Maximize() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_maximize", array_args);
		}

		method : public : MergeChildInputShapes() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_merge_child_input_shapes", array_args);
		}

		method : public : MergeChildShapes() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_merge_child_shapes", array_args);
		}

		method : public : Move(x : Int, y : Int) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(x);
			array_args[3] := IntRef->New(y);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_move", array_args);
		}

		method : public : MoveResize(x : Int, y : Int, width : Int, height : Int) ~ Nil {
			array_args := Base->New[6];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(x);
			array_args[3] := IntRef->New(y);
			array_args[4] := IntRef->New(width);
			array_args[5] := IntRef->New(height);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_move_resize", array_args);
		}

		method : public : MoveToRect(rect : Rectangle, rect_anchor : Gravity, window_anchor : Gravity, anchor_hints : AnchorHints, rect_anchor_dx : Int, rect_anchor_dy : Int) ~ Nil {
			array_args := Base->New[8];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := rect;
			array_args[3] := rect_anchor;
			array_args[4] := window_anchor;
			array_args[5] := anchor_hints;
			array_args[6] := IntRef->New(rect_anchor_dx);
			array_args[7] := IntRef->New(rect_anchor_dy);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_move_to_rect", array_args);
		}

		method : public : ProcessUpdates(update_children : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(update_children = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_process_updates", array_args);
		}

		method : public : Raise() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_raise", array_args);
		}

		method : public : RegisterDnd() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_register_dnd", array_args);
		}

		method : public : RemoveFilter(function : FilterFunc, data : Int) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := function;
			array_args[3] := IntRef->New(data);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_remove_filter", array_args);
		}

		method : public : Reparent(new_parent : Window, x : Int, y : Int) ~ Nil {
			array_args := Base->New[5];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := new_parent;
			array_args[3] := IntRef->New(x);
			array_args[4] := IntRef->New(y);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_reparent", array_args);
		}

		method : public : Resize(width : Int, height : Int) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(width);
			array_args[3] := IntRef->New(height);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_resize", array_args);
		}

		method : public : Restack(sibling : Window, above : Bool) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := sibling;
			array_args[3] := IntRef->New(above = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_restack", array_args);
		}

		method : public : Scroll(dx : Int, dy : Int) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(dx);
			array_args[3] := IntRef->New(dy);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_scroll", array_args);
		}

		method : public : SetAcceptFocus(accept_focus : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(accept_focus = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_accept_focus", array_args);
		}

		method : public : SetBackground(color : Color) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := color;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_background", array_args);
		}

		method : public : SetBackgroundRgba(rgba : RGBA) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := rgba;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_background_rgba", array_args);
		}

		method : public : SetChildInputShapes() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_child_input_shapes", array_args);
		}

		method : public : SetChildShapes() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_child_shapes", array_args);
		}

		method : public : SetComposited(composited : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(composited = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_composited", array_args);
		}

		method : public : SetCursor(cursor : Cursor) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := cursor;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_cursor", array_args);
		}

		method : public : SetDecorations(decorations : WMDecoration) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := decorations;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_decorations", array_args);
		}

		method : public : SetDeviceCursor(device : Device, cursor : Cursor) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := device;
			array_args[3] := cursor;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_device_cursor", array_args);
		}

		method : public : SetDeviceEvents(device : Device, event_mask : EventMask) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := device;
			array_args[3] := event_mask;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_device_events", array_args);
		}

		method : public : SetEventCompression(event_compression : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(event_compression = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_event_compression", array_args);
		}

		method : public : SetEvents(event_mask : EventMask) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := event_mask;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_events", array_args);
		}

		method : public : SetFocusOnMap(focus_on_map : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(focus_on_map = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_focus_on_map", array_args);
		}

		method : public : SetFullscreenMode(mode : FullscreenMode) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := mode;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_fullscreen_mode", array_args);
		}

		method : public : SetFunctions(functions : WMFunction) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := functions;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_functions", array_args);
		}

		method : public : SetGeometryHints(geometry : Geometry, geom_mask : WindowHints) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := geometry;
			array_args[3] := geom_mask;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_geometry_hints", array_args);
		}

		method : public : SetGroup(leader : Window) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := leader;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_group", array_args);
		}

		method : public : SetIconName(name : String) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_icon_name", array_args);
		}

		method : public : SetInvalidateHandler(handler : WindowInvalidateHandlerFunc) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := handler;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_invalidate_handler", array_args);
		}

		method : public : SetKeepAbove(setting : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(setting = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_keep_above", array_args);
		}

		method : public : SetKeepBelow(setting : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(setting = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_keep_below", array_args);
		}

		method : public : SetModalHint(modal : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(modal = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_modal_hint", array_args);
		}

		method : public : SetOpacity(opacity : Float) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := FloatRef->New(opacity);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_opacity", array_args);
		}

		method : public : SetOverrideRedirect(override_redirect : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(override_redirect = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_override_redirect", array_args);
		}

		method : public : SetPassThrough(pass_through : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(pass_through = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_pass_through", array_args);
		}

		method : public : SetRole(role : String) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_role", array_args);
		}

		method : public : SetShadowWidth(left : Int, right : Int, top : Int, bottom : Int) ~ Nil {
			array_args := Base->New[6];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(left);
			array_args[3] := IntRef->New(right);
			array_args[4] := IntRef->New(top);
			array_args[5] := IntRef->New(bottom);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_shadow_width", array_args);
		}

		method : public : SetSkipPagerHint(skips_pager : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(skips_pager = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_skip_pager_hint", array_args);
		}

		method : public : SetSkipTaskbarHint(skips_taskbar : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(skips_taskbar = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_skip_taskbar_hint", array_args);
		}

		method : public : SetSourceEvents(source : InputSource, event_mask : EventMask) ~ Nil {
			array_args := Base->New[4];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := source;
			array_args[3] := event_mask;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_source_events", array_args);
		}

		method : public : SetStartupId(startup_id : String) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_startup_id", array_args);
		}

		method : public : SetStaticGravities(use_static : Bool) ~ Bool {
			array_args := Base->New[3];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(use_static = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_static_gravities", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : SetSupportMultidevice(support_multidevice : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(support_multidevice = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_support_multidevice", array_args);
		}

		method : public : SetTitle(title : String) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_title", array_args);
		}

		method : public : SetTransientFor(parent : Window) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := parent;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_transient_for", array_args);
		}

		method : public : SetTypeHint(hint : WindowTypeHint) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := hint;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_type_hint", array_args);
		}

		method : public : SetUrgencyHint(urgent : Bool) ~ Nil {
			array_args := Base->New[3];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := IntRef->New(urgent = 0 ? 0 : 1);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_set_urgency_hint", array_args);
		}

		method : public : Show() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_show", array_args);
		}

		method : public : ShowUnraised() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_show_unraised", array_args);
		}

		method : public : ShowWindowMenu(event : Event) ~ Bool {
			array_args := Base->New[3];
	
			array_args[0] := IntRef->New();
			array_args[1] := IntRef->New(@gobject);
			array_args[2] := event;
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_show_window_menu", array_args);
	
			value := array_args[0]->As(IntRef);
			return value->Get() = 0 ? false : true;
		}

		method : public : Stick() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_stick", array_args);
		}

		method : public : ThawToplevelUpdatesLibgtkOnly() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_thaw_toplevel_updates_libgtk_only", array_args);
		}

		method : public : ThawUpdates() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_thaw_updates", array_args);
		}

		method : public : Unfullscreen() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_unfullscreen", array_args);
		}

		method : public : Unmaximize() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_unmaximize", array_args);
		}

		method : public : Unstick() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_unstick", array_args);
		}

		method : public : Withdraw() ~ Nil {
			array_args := Base->New[2];

			array_args[0] := Nil;
			array_args[1] := IntRef->New(@gobject);
	
			Proxy->GetDllProxy()->CallFunction("gtk3_gdk_window_withdraw", array_args);
		}
	}
}