bundle System.Math {
	#~
	Ancillary mathematical routines
	~#
	class Routine {
		#~
		Calculates the factorial of the value
		@param n number
		@return factorial of the value
		~#
		function : native : Factorial(n : Int) ~ Int {
			result := 1;
			
			for(i := 1; i <= n; i += 1;) {
				result *= i;
			};

			return result;
		}

		#~
		Calculates the double factorial of the value
		@param n number
		@return double factorial of the value
		~#
		function : native : DoubleFactorial(n : Int) ~ Int {
			value := 1;

			for(i := n; i >= 0; i -= 2;) {
				if(i = 0 | i = 1) {
					return value;
				}
				else {
					value *= i;
				};
			};

			return value;
		}

		#~
		Calculates the factorial value
		@param n number
		@return factorial value
		~#
		function : Factorial(n : Float) ~ Float {
			return Float->Gamma(n + 1.0);
		}

		#~
		Calculates the double factorial of the value
		@param n number
		@return double factorial of the value
		~#
		function : native : DoubleFactorial(n : Float) ~ Float {
			value := 1.0;

			for(i := n; i >= 0.0; i -= 2.0;) {
				if(i = 0.0 | i = 1.0) {
					return value;
				}
				else {
					value *= i;
				};
			};

			return value;
		}
	}
}