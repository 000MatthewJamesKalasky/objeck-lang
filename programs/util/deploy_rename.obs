class Test {
	function : Main(args : String[]) ~ Nil {
		if(args->Size() = 2 ) {
			path := args[0];
			if(<>path->EndsWith(System.IO.Filesystem.Directory->GetSlash())) {
				path += System.IO.Filesystem.Directory->GetSlash();
			};
			version := args[1];

			if(version->Count('.') = 2 & System.IO.Filesystem.Directory->Exists(path)) {
				files := System.IO.Filesystem.Directory->List(path);

				count := 0;
				each(i : files) {
					org_filename := files[i];
					
					search := "_0.0.0.";
					search_index := org_filename->Find(search);
					if(<>search_index->IsNeg()) {
						filename_start := org_filename->SubString(search_index);
						end_index := search_index + search->Size();
						filename_end := org_filename->SubString(end_index, org_filename->Size() - end_index);
						new_filename := filename_start + '_' + version + '.' + filename_end;

						if(System.IO.Filesystem.File->Rename(path + org_filename, path + new_filename)) {
							"Renamed: '{$org_filename}' to '{$new_filename}'"->PrintLine();
							count += 1;
						}
						else {
							">>> Error: Unable to rename: '{$org_filename}' to '{$new_filename}' <<<"->PrintLine();
						};
					};
				};
				"---\n{$count} qualifying file renamed"->PrintLine();
			}
			else {
				">>> Error: Invalid path='{$path}' or version='{$version}' <<<"->ErrorLine();
			};
		}
		else {
			">>> Error: Missing parameters <<<"->ErrorLine();
		};
	}
}