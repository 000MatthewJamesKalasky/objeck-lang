use Collection, API.OpenAI, System.IO.Filesystem, Data.JSON, Data.CSV;

class Test {
	function : Main(args : String[]) ~ Nil {
		token := GetApiKey();
		if(token <> Nil & args->Size() > 0) {
			command := args[0];

			if(command->Equals("create")) {
				if(token->StartsWith("sk-")) {
					token := token->SubString((3), token->Size() - 3);
				};

				image := Image->Create("Create an image of two old steel gears with a transparent background", token);
				if(image <> Nil) {
					urls := image->GetUrls();
					each(url in urls) {
						url->ToString()->PrintLine();
					};
				};
			}
			else if(command->Equals("update")) {
				if(token->StartsWith("sk-")) {
					token := token->SubString((3), token->Size() - 3);
				};

				image := Image->Create("Create an image of two old steel gears with a transparent background", token);
				if(image <> Nil) {
					urls := image->GetUrls();
					each(url in urls) {
						url->ToString()->PrintLine();
					};
				};
			}
			else {
				">>> Invalid command or parameters for '{$command}' <<<"->ErrorLine();
			};
		}
	}

	function : GetApiKey() ~ String {
		token := FileReader->ReadFile("openai_api_key.dat");
		if(token <> Nil) {
			return token->Trim();
		};

		return Nil;
	}
}