#~
Credit: https://github.com/gameprogcpp/code/tree/master/Chapter02
// ----------------------------------------------------------------
// From Game Programming in C++ by Sanjay Madhav
// Copyright (C) 2017 Sanjay Madhav. All rights reserved.
// 
// Released under the BSD License
// See LICENSE in root directory for full details.
// ----------------------------------------------------------------
~#

use Collection;
use Game.Framework;

class Ship from Actor {
	@right_speed : Float;
	@down_speed : Float;

	New(game : Game) {
		Parent(game);

		# Create an animated sprite component
		asc := AnimSpriteComponent->New(@self);

		anims := Vector->New();
		anims->AddBack(game->GetTexture("Assets/Ship01.png"));
		anims->AddBack(game->GetTexture("Assets/Ship02.png"));
		anims->AddBack(game->GetTexture("Assets/Ship03.png"));
		anims->AddBack(game->GetTexture("Assets/Ship04.png"));

		asc->SetAnimTextures(anims);
		game->AddSprite(asc);
	}

	method : public : UpdateActor(delta_time : Float) ~ Nil {
		@parent->UpdateActor(delta_time);
				
		# Update position based on speeds and delta time
		pos := GetPosition();
		pos->AddX(@right_speed * delta_time);
		pos->AddY(@down_speed * delta_time);

		# Restrict position to left half of screen
		if(pos->GetX() < 25.0) {
			pos->SetX(25.0);
		}
		else if(pos->GetX() > 500.0) {
			pos->SetX(500.0);
		};

		if(pos->GetY() < 25.0) {
			pos->SetY(25.0);
		}
		else if(pos->GetY() > 743.0) {
			pos->SetY(743.0);
		};

		SetPosition(pos);
	}

	method : public : ProcessKeyboard(state : Byte[]) ~ Nil {
		@right_speed := 0.0;
		@down_speed := 0.0;

		# right/left
		if(state[Scancode->SDL_SCANCODE_D] <> 0) {
			@right_speed += 250.0;
		}
		else if(state[Scancode->SDL_SCANCODE_A] <> 0) {
			@right_speed -= 250.0;
		}
		# up/down
		else if(state[Scancode->SDL_SCANCODE_S] <> 0) {
			@down_speed += 300.0;
		}
		else if(state[Scancode->SDL_SCANCODE_W] <> 0) {
			@down_speed -= 300.0;
		};
	}

	method : public : GetRightSpeed() ~ Float { return @right_speed; }
	method : public : GetDownSpeed() ~ Float { return @down_speed; }
}