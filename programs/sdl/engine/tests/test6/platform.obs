use Game.SDL2;
use Game.Framework;
use Collection;

class Platform {
	@pos : Position;
	@sprite : ImageSprite;
	@render_rect : Rect;

	New(x : Int, y : Int, sprite : ImageSprite, render_rect : Rect) {
		@pos := Position->New(x, y, Game->BLOCK_WIDTH, Game->BLOCK_HEIGHT);
		@sprite := sprite;
		@render_rect := render_rect;
	}

	method : public : AddX(x : Int)  ~ Nil {
		@pos->AddX(x);
	}

	method : public : GetLeft()  ~ Int {
		return @pos->GetLeft();
	}

	method : public : GetRight()  ~ Int {
		return @pos->GetRight();
	}

	method : public : GetTop()  ~ Int {
		return @pos->GetTop();
	}

	method : public : GetBottom()  ~ Int {
		return @pos->GetBottom();
	}

	method : public : Draw()  ~ Nil {
		@sprite->SetPostion(@pos);
		@sprite->Render(@render_rect);
	}

	method : public : Collides(sprite : ImageSprite) ~ Bool {
		return @pos->Overlaps(sprite->GetPosition());
	}
}

#~
class MovingPlatform from Platform {
	@change_x : Int;
    @change_y : Int;
    @boundary_top : Int;
    @boundary_bottom : Int;
    @boundary_left : Int;
    @boundary_right : Int;
    @player : Player;
    @level : Level;

	New(x : Int, y : Int, rect : ImageSprite, player : Player, level : Level) {
		Parent(x, y, rect);
		@player := player;
		@level := level;

		@boundary_top := 75;
    	@boundary_bottom := 550;
    	@change_y := 1;
	}

	method : public : GetChangeLeft() ~ Int {
		return @change_x;
	}

	method : public : SetLevel(level : Level)  ~ Nil {
		@level := level;
	}

	method : public : native : Update()  ~ Nil {
		@rect->AddX(@change_x);

		if(Collides(@player->GetRect())) {
			if(@change_x < 0) {
                @player->GetRect()->SetRight(@rect->GetLeft());
            }
            else {
            	@player->GetRect()->SetLeft(@rect->GetRight());
 			};
		};

		@rect->AddY(@change_y);
		if(Collides(@player->GetRect())) { 
			if(@change_y < 0) {
                @player->GetRect()->SetBottom(@rect->GetTop());
			}
            else {
				@player->GetRect()->SetTop(@rect->GetBottom());
            };
		};

		if(@rect->GetBottom() > @boundary_bottom | @rect->GetTop() < @boundary_top) {
			@change_y *= -1;
		};

		cur_pos := @rect->GetLeft() - @level->GetShift();
        if(cur_pos < @boundary_left | cur_pos > @boundary_right) {
			@change_x *= -1;
        };
	}
}
~#