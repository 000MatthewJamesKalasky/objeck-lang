use System.API;
use Collection;

bundle Default {
	class FuncRef {
		@func : (Int) ~ Bool;

		New(func : (Int) ~ Bool) {
			@func := func;
		}
		
		method : public : Get() ~ (Int) ~ Bool {
			return @func;
		}
	}	

	class DllTest {
		function : Filter(i : Int) ~ Bool {
			"Hello"->PrintLine();
			return true;
		}

		function : Main(args : String[]) ~ Nil {
			dll_proxy := DllProxy->New("lib/linux64/test_dll"); 
#			dll_proxy := DllProxy->New("lib/osx/test/test_dll"); 

			dll_args := Base->New[4];
			dll_args[0] := IntRef->New(0);
			dll_args[1] := IntRef->New(13);
			dll_args[2] := FloatRef->New(3.33);
			dll_args[3] := FuncRef->New(Filter(Int) ~ Bool);
			dll_proxy->CallFunction("foo", dll_args);

			int_holder := dll_args[0]->As(IntRef);
			int_holder->Get()->PrintLine();

			float_holder := dll_args[2]->As(FloatRef);
			float_holder->Get()->PrintLine();

			ff := Float->New[3];
			ff[0] := 2.5;
			ff[1] := 31.45;
			ff[2] := 2.5e+4;
			dll_args := Base->New[1];
			dll_args[0] := FloatArrayRef->New(ff);
			dll_proxy->CallFunction("bar", dll_args);
			ff[0]->PrintLine();
			ff[1]->PrintLine();
			ff[2]->PrintLine();

			dll_proxy->Unload();
		}
	}
}
