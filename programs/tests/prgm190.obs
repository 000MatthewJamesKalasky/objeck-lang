use Collection.Generic;

class Test {
    function : Main(args : String[]) ~ Nil {
        encoding := "------WebKitFormBoundaryv6DIeo7UWlahIYi8\r\n";
        encoding += "Content-Disposition: form-data; name=\"fname\"\r\n\r\n";
        encoding += "Randy\"John\"&\\\r\n";
        encoding += "------WebKitFormBoundaryv6DIeo7UWlahIYi8\r\n";
        encoding += "Content-Disposition: form-data; name=\"lname\"\r\n\r\n";
        encoding += "Hollines /www/http/ @\r\n";
        encoding += "------WebKitFormBoundaryv6DIeo7UWlahIYi8--\r\n";

        lines := encoding->Lines();
        each(i : lines) {
            line := lines[i];
            "|{$line}|"->PrintLine();
        };

        ParseMultipartEncoding(encoding);
    }

    function : ParseMultipartEncoding(encoding : String) ~ Map<String, String> {
        return Nil;
    }

    function : ParseUrlEncoding(encoding : String) ~ Map<String, String> {
        decodings := Map->New()<String, String>;

        pairs :=  encoding->Split('&');
        if(pairs <> Nil) {
            each(i : pairs) {
                key_value := pairs[i]->Split('=');
                if(key_value <> Nil & key_value->Size() = 2) {
                    key := Web.HTTP.Url->Decode(key_value[0])->ReplaceAll('+', ' ');
                    value := Web.HTTP.Url->Decode(key_value[1])->ReplaceAll('+', ' ');
                    decodings->Insert(key, value);
                };
            };
        };

        return decodings;
    }
}