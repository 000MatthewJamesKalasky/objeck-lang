class Heap<H : Compare> {
    function : Main(args : String[]) ~ Nil {
        heap := Collection.Heap->New(Collection.Heap->Order->MIN)<IntRef>;
        heap->Insert(IntRef->New(3));
        heap->Insert(IntRef->New(1));
        heap->Insert(IntRef->New(9));
        heap->Insert(IntRef->New(8));
        heap->Insert(IntRef->New(6));
        heap->Insert(IntRef->New(2));

        heap->Pop()->As(IntRef)->PrintLine();
        heap->Pop()->As(IntRef)->PrintLine();

        "---"->PrintLine();

        values := heap->ToArray();
        each(ref := values) {
            value := ref->As(IntRef);
            value->Get()->PrintLine();
        };

        "---"->PrintLine();

        heap->Size()->PrintLine();
    }
}