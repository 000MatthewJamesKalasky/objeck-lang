class Test {
	function : Main(args : String[]) ~ Nil {
		time_str := Web.HTTP.HttpClient->QuickGet(Web.HTTP.Url->New("http://worldclockapi.com/api/json/utc/now"))->ToString();
		if(time_str <> Nil) {
			parser := Data.JSON.JsonParser->New(time_str);
			if(parser->Parse()) {
				root := parser->GetRoot();
				cur_time_str := root->Get("currentDateTime")->GetString();
				if(cur_time_str <> Nil) {
					cur_time := ParseTime(cur_time_str)->ToString();
					if(cur_time <> Nil) {
						cur_time->PrintLine();
					};
				};
			};
		};
	}

	function : ParseTime(str : String) ~ System.Time.Date {
		parts := str->Split('T');
		if(parts->Size() = 2 & parts[1]->EndsWith('Z')) {
			date := parts[0];
			date_parts := date->Split('-');
			
			year_str, month_str, day_str : String;
			if(date_parts->Size() = 3) {
				year_str := date_parts[0];
				month_str := date_parts[1];
				day_str := date_parts[2];
			}
			else {
				return Nil;
			};

			time := parts[1];
			time->Pop();
			time_parts := time->Split(':');
			if(time_parts->Size() = 2) {
				hours := time_parts[0];
				minutes := time_parts[1];

				return System.Time.DateUtility->Parse(
					"{$month_str}/{$day_str}/{$year_str} {$hours}:{$minutes}", 
					"MM/dd/yyyy hh:ss", 
					false);
			}
			else {
				return Nil;
			};
		};

		return Nil;
	}
}