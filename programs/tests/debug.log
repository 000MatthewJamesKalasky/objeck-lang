
---------- Scanning/Parsing ---------
---------- Source: 'prgm206.obs' ---------
   1: bundle: ''
   1:   [Class: name='Test']
   2:     (Method/Function/New: name='Test:Main')
   2:       Declaration Parameters
   2:         Declaration
   2:           Data Type
   2:             Adding variable: 'Test:Main:args'
   2:       Data Type
   2:       Statement List
  13:         Statement
  13:           Variable
  13:           Assignment
  13:             Expression
  13:               Boolean logic
  13:                 Boolean math
  13:                   Term
  13:                     Factor
  13:                       Simple expression
  13:                         Method call
  13:                           Calling Parameters
  13:                           Data Type
  13:                           Data Type
  14:         Statement
  14:           Method call
  14:             Calling Parameters
  14:               Expression
  14:                 Boolean logic
  14:                   Boolean math
  14:                     Term
  14:                       Factor
  14:                         Simple expression
  14:               Expression
  14:                 Boolean logic
  14:                   Boolean math
  14:                     Term
  14:                       Factor
  14:                         Simple expression
  15:         Statement
  15:           Method call
  15:             Calling Parameters
  15:               Expression
  15:                 Boolean logic
  15:                   Boolean math
  15:                     Term
  15:                       Factor
  15:                         Simple expression
  15:               Expression
  15:                 Boolean logic
  15:                   Boolean math
  15:                     Term
  15:                       Factor
  15:                         Simple expression
  16:         Statement
  16:           Method call
  16:             Calling Parameters
  16:               Expression
  16:                 Boolean logic
  16:                   Boolean math
  16:                     Term
  16:                       Factor
  16:                         Simple expression
  16:               Expression
  16:                 Boolean logic
  16:                   Boolean math
  16:                     Term
  16:                       Factor
  16:                         Simple expression
  17:         Statement
  17:           Method call
  17:             Calling Parameters
  17:               Expression
  17:                 Boolean logic
  17:                   Boolean math
  17:                     Term
  17:                       Factor
  17:                         Simple expression
  17:               Expression
  17:                 Boolean logic
  17:                   Boolean math
  17:                     Term
  17:                       Factor
  17:                         Simple expression
  18:         Statement
  18:           Method call
  18:             Calling Parameters
  18:               Expression
  18:                 Boolean logic
  18:                   Boolean math
  18:                     Term
  18:                       Factor
  18:                         Simple expression
  18:               Expression
  18:                 Boolean logic
  18:                   Boolean math
  18:                     Term
  18:                       Factor
  18:                         Simple expression
  19:         Statement
  19:           Method call
  19:             Calling Parameters
  19:               Expression
  19:                 Boolean logic
  19:                   Boolean math
  19:                     Term
  19:                       Factor
  19:                         Simple expression
  19:                             Calling Parameters
  19:                               Expression
  19:                                 Boolean logic
  19:                                   Boolean math
  19:                                     Term
  19:                                       Factor
  19:                                         Simple expression
  19:                                           Variable
  19:                               Expression
  19:                                 Boolean logic
  19:                                   Boolean math
  19:                                     Term
  19:                                       Factor
  19:                                         Simple expression
  19:                                           Variable
  19:                               Adding variable: 'Test:#{L0}#:k'
  19:                               Adding variable: 'Test:#{L0}#:v'
  19:                             Expression
  19:                               Boolean logic
  19:                                 Boolean math
  19:                                   Term
  19:                                     Factor
  19:                                       Simple expression
  19:                                         Method call
  19:                                           Method call
  19:                                             Calling Parameters

--------- Contextual Analysis ---------
--------- Linking Libraries ---------
=== Loading file: 'C:\Users\objec\Documents\Code\objeck-lang\core\release\deploy64\lib\lang.obl' ===
--- file in: compressed=27715, uncompressed=188017 ---
  -1: char std::string: id=0; value='true'
  -1: char std::string: id=1; value='false'
  -1: char std::string: id=2; value=''
  -1: char std::string: id=3; value='['
  -1: char std::string: id=4; value=', '
  -1: char std::string: id=5; value=']
'
  -1: char std::string: id=6; value='int:string:format'
  -1: char std::string: id=7; value='dec'
  -1: char std::string: id=8; value='oct'
  -1: char std::string: id=9; value='hex'
  -1: char std::string: id=10; value='float:string:format'
  -1: char std::string: id=11; value='fixed'
  -1: char std::string: id=12; value='scientific'
  -1: char std::string: id=13; value='float:string:precision'
  -1: char std::string: id=14; value='.'
  -1: char std::string: id=15; value='rue'
  -1: char std::string: id=16; value='RUE'
  -1: char std::string: id=17; value='locale'
  -1: char std::string: id=18; value='tmp_dir'
  -1: char std::string: id=19; value='user_dir'
  -1: char std::string: id=20; value='install_dir'
  -1: char std::string: id=21; value='Sunday'
  -1: char std::string: id=22; value='Monday'
  -1: char std::string: id=23; value='Tuesday'
  -1: char std::string: id=24; value='Wednesday'
  -1: char std::string: id=25; value='Thursday'
  -1: char std::string: id=26; value='Friday'
  -1: char std::string: id=27; value='Saturday'
  -1: char std::string: id=28; value='January'
  -1: char std::string: id=29; value='February'
  -1: char std::string: id=30; value='March'
  -1: char std::string: id=31; value='April'
  -1: char std::string: id=32; value='May'
  -1: char std::string: id=33; value='June'
  -1: char std::string: id=34; value='July'
  -1: char std::string: id=35; value='August'
  -1: char std::string: id=36; value='September'
  -1: char std::string: id=37; value='October'
  -1: char std::string: id=38; value='November'
  -1: char std::string: id=39; value='December'
  -1: char std::string: id=40; value=' '
  -1: char std::string: id=41; value=':'
  -1: char std::string: id=42; value=' AM'
  -1: char std::string: id=43; value=' PM'
  -1: char std::string: id=44; value='
'
  -1: char std::string: id=45; value='\'
  -1: char std::string: id=46; value='/'
  -1: char std::string: id=47; value='objk-info-'
  -1: char std::string: id=48; value='.log'
  -1: char std::string: id=49; value='info-log'
  -1: char std::string: id=50; value='objk-warn-'
  -1: char std::string: id=51; value='warn-log'
  -1: char std::string: id=52; value='/objk-err-'
  -1: char std::string: id=53; value='err-log'
  -1: char std::string: id=54; value=']: '
  -1: bundle name='System'
  -1: bundle name='System.API'
  -1: bundle name='System.Time'
  -1: bundle name='System.Concurrency'
  -1: bundle name='System.Matrix'
  -1: bundle name='System.IO'
  -1: bundle name='System.IO.Filesystem'
  -1: bundle name='System.IO.Net'
  -1: bundle name='System.Introspection'
   0:   [enum: name='System.Number#Format']
   0:   [enum: name='ClassID']
   0:   [enum: name='System.Runtime#Signal']
   0:   [enum: name='System.Introspection.DataType#TypeId']
   0:   [class: name='System.$Bool'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.$Bool:Print:l,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Bool:Size:l,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Bool:PrintLine:l,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c,
   0:     (method: name=System.$Bool:Error:l,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Bool:ErrorLine:l,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c,
   0:     (method: name=System.$Bool:Size:l*,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Bool:Size:l**,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Bool:Size:l***,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Bool:ToString:l,; id=8; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:   [class: name='System.Number'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.Number:IntToString:i,i,c*,; id=0; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.Number:FloatToString:f,c*,; id=1; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:   [class: name='System.$Byte'; parent='System.Number'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.$Byte:CompressZlib:b*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:UncompressZlib:b*,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:CompressGzip:b*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:UncompressGzip:b*,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:CompressBr:b*,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:UncompressBr:b*,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:CRC32:b*,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:Min:b,b,; id=7; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:Max:b,b,; id=8; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:Compare:b,b,; id=9; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Byte:ToFloat:b,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:ToChar:b,; id=11; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:ToInt:b,; id=12; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:Size:b,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:Abs:b,; id=14; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Byte:IsNeg:b,; id=15; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Byte:NotNeg:b,; id=16; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Byte:Print:b,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:PrintLine:b,; id=18; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c,
   0:     (method: name=System.$Byte:Error:b,; id=19; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:ErrorLine:b,; id=20; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c,
   0:     (method: name=System.$Byte:Size:b*,; id=21; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:Clear:b*,; id=22; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:ToUnicode:b*,; id=23; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:Sort:b*,; id=24; num_params: 1; mem_size=24; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:b*,i,b*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Sort:b*,i,i,
   0:     (method: name=System.$Byte:Sort:b*,i,i,; id=25; num_params: 3; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Sort:b*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Sort:b*,i,i,
   0:     (method: name=System.$Byte:Size:b**,; id=26; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:Size:b***,; id=27; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Byte:ToBinaryString:b,; id=28; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Reverse:
   0:     (method: name=System.$Byte:ToHexString:b,; id=29; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:IntToString:i,i,c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.$Byte:ToHexString:b*,; id=30; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:IntToString:i,i,c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.$Byte:ToString:b,; id=31; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:IntToString:i,i,c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.$Byte:ToString:b*,; id=32; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:b*,
   0:     (method: name=System.$Byte:FindAll:b*,b*,; id=33; num_params: 2; mem_size=72; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Find:b*,i,b*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:i*,i,i*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i*,
   0:     (method: name=System.$Byte:Find:b*,b,; id=34; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Find:b*,i,b,
   0:     (method: name=System.$Byte:Find:b*,i,b,; id=35; num_params: 3; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:     (method: name=System.$Byte:Find:b*,b*,; id=36; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Find:b*,i,b*,
   0:     (method: name=System.$Byte:Find:b*,i,b*,; id=37; num_params: 3; mem_size=72; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Find:b*,i,b,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Find:b*,i,b,
   0:   [class: name='System.$Char'; parent='System.Number'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.$Char:ToLower:c,; id=0; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:Size:c,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:ToUpper:c,; id=2; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:ToFloat:c,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:ToByte:b,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:ToInt:c,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:IsLower:c,; id=6; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:IsUpper:c,; id=7; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:Compare:c,c,; id=8; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:IsDigit:c,; id=9; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:IsChar:c,; id=10; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:Min:c,c,; id=11; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:Max:c,c,; id=12; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Char:Print:c,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:PrintLine:c,; id=14; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c,
   0:     (method: name=System.$Char:Sort:c*,; id=15; num_params: 1; mem_size=24; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Sort:c*,i,i,
   0:     (method: name=System.$Char:Sort:c*,i,i,; id=16; num_params: 3; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Sort:c*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Sort:c*,i,i,
   0:     (method: name=System.$Char:Print:c*,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:PrintLine:c*,; id=18; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c,
   0:     (method: name=System.$Char:ToString:c*,; id=19; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:     (method: name=System.$Char:Error:c,; id=20; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:ErrorLine:c,; id=21; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c,
   0:     (method: name=System.$Char:Error:c*,; id=22; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:ErrorLine:c*,; id=23; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c,
   0:     (method: name=System.$Char:Size:c*,; id=24; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:Clear:c*,; id=25; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:ToBytes:c*,; id=26; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:Size:c**,; id=27; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:Size:c***,; id=28; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Char:ToString:c,; id=29; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:     (method: name=System.$Char:FindAll:c*,c*,; id=30; num_params: 2; mem_size=72; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Find:c*,i,c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:i*,i,i*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i*,
   0:     (method: name=System.$Char:Find:c*,c,; id=31; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Find:c*,i,c,
   0:     (method: name=System.$Char:Find:c*,i,c,; id=32; num_params: 3; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:     (method: name=System.$Char:Find:c*,c*,; id=33; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Find:c*,i,c*,
   0:     (method: name=System.$Char:Find:c*,i,c*,; id=34; num_params: 3; mem_size=72; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Find:c*,i,c,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Find:c*,i,c,
   0:   [class: name='System.$Int'; parent='System.Number'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.$Int:MaxSize:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:MinSize:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:Factorial:i,; id=2; num_params: 1; mem_size=24; is_native=1; is_debug=0]
   0:     (method: name=System.$Int:DoubleFactorial:i,; id=3; num_params: 1; mem_size=24; is_native=1; is_debug=0]
   0:     (method: name=System.$Int:Random:i,i,; id=4; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Random:
   0:     (method: name=System.$Int:Random:i,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Random:
   0:     (method: name=System.$Int:Min:i,i,; id=6; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Int:Compare:i,i,; id=7; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Int:Max:i,i,; id=8; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Int:Abs:i,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:IsNeg:i,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:NotNeg:i,; id=11; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:Size:i,; id=12; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:ToFloat:i,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:ToChar:i,; id=14; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:ToByte:i,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:Print:i,; id=16; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:PrintLine:i,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c,
   0:     (method: name=System.$Int:Error:i,; id=18; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:ErrorLine:i,; id=19; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c,
   0:     (method: name=System.$Int:Size:i*,; id=20; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:Clear:i*,; id=21; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:Size:i**,; id=22; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:Size:i***,; id=23; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Int:ToBinaryString:i,; id=24; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Reverse:
   0:     (method: name=System.$Int:ToHexString:i,; id=25; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:IntToString:i,i,c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.$Int:ToHexString:i*,; id=26; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i*,
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:IntToString:i,i,c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.$Int:Sort:i*,; id=27; num_params: 1; mem_size=24; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:i*,i,i*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Sort:i*,i,i,
   0:     (method: name=System.$Int:Sort:i*,i,i,; id=28; num_params: 3; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Sort:i*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Sort:i*,i,i,
   0:     (method: name=System.$Int:ToString:i,; id=29; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:IntToString:i,i,c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.$Int:ToCommaString:i,; id=30; num_params: 1; mem_size=48; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:IntToString:i,i,c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Reverse:
   0:     (method: name=System.$Int:ToString:i*,; id=31; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i*,
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:IntToString:i,i,c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:   [class: name='System.$Float'; parent='System.Number'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.$Float:Pi:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Size:f,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:E:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Gamma:f,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Factorial:f,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Gamma:f,
   0:     (method: name=System.$Float:DoubleFactorial:f,; id=5; num_params: 1; mem_size=24; is_native=1; is_debug=0]
   0:     (method: name=System.$Float:ToRadians:f,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ToDegrees:f,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ToInt:f,; id=8; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ToByte:f,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ToChar:f,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Min:f,f,; id=11; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Float:Max:f,f,; id=12; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Float:Compare:f,f,; id=13; num_params: 2; mem_size=16; is_native=1; is_debug=0]
   0:     (method: name=System.$Float:Abs:f,; id=14; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.$Float:IsNeg:f,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:NotNeg:f,; id=16; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Floor:f,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Ceiling:f,; id=18; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Sin:f,; id=19; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Cos:f,; id=20; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Tan:f,; id=21; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ArcSin:f,; id=22; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ArcCos:f,; id=23; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ArcTan:f,; id=24; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ArcTan2:f,f,; id=25; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Mod:f,f,; id=26; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Log:f,; id=27; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:SquareRoot:f,; id=28; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Random:; id=29; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Power:f,f,; id=30; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Print:f,; id=31; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:PrintLine:f,; id=32; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c,
   0:     (method: name=System.$Float:Error:f,; id=33; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ErrorLine:f,; id=34; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c,
   0:     (method: name=System.$Float:Size:f*,; id=35; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Clear:f*,; id=36; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Size:f**,; id=37; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:Size:f***,; id=38; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$Float:ToString:f,; id=39; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:FloatToString:f,c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.$Float:ToString:f*,; id=40; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f*,
   0:       LIB_MTHD_CALL: class=System.Number, method=System.Number:FloatToString:f,c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:     (method: name=System.$Float:ToString:f**,; id=41; num_params: 1; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:f,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:     (method: name=System.$Float:Sort:f*,; id=42; num_params: 1; mem_size=24; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:f*,i,f*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Sort:f*,i,i,
   0:     (method: name=System.$Float:Sort:f*,i,i,; id=43; num_params: 3; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Sort:f*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Sort:f*,i,i,
   0:   [class: name='System.$BaseArray'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.$BaseArray:Size:o.System.Base*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$BaseArray:Size:o.System.Base**,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.$BaseArray:Size:o.System.Base***,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.BoolHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.BoolHolder:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.BoolHolder:New:l,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.BoolHolder:Get:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.BoolHolder:Set:l,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.BoolHolder:Compare:o.System.Compare,; id=4; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_OBJ_INST_CAST: class=System.BoolHolder
   0:       LIB_MTHD_CALL: class=System.BoolHolder, method=System.BoolHolder:Get:
   0:     (method: name=System.BoolHolder:Clone:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.BoolHolder
   0:       LIB_MTHD_CALL: class=System.BoolHolder, method=System.BoolHolder:New:l,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=System.BoolHolder:HashID:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.BoolHolder:Print:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Bool, method=System.$Bool:Print:l,
   0:     (method: name=System.BoolHolder:PrintLine:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Bool, method=System.$Bool:PrintLine:l,
   0:     (method: name=System.BoolHolder:ToString:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Bool, method=System.$Bool:ToString:l,
   0:   [class: name='System.ByteHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.ByteHolder:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.ByteHolder:New:b,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.ByteHolder:Get:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.ByteHolder:Set:b,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.ByteHolder:Compare:o.System.Compare,; id=4; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_OBJ_INST_CAST: class=System.ByteHolder
   0:       LIB_MTHD_CALL: class=System.ByteHolder, method=System.ByteHolder:Get:
   0:       LIB_MTHD_CALL: class=System.ByteHolder, method=System.ByteHolder:Get:
   0:     (method: name=System.ByteHolder:Clone:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.ByteHolder
   0:       LIB_MTHD_CALL: class=System.ByteHolder, method=System.ByteHolder:New:b,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=System.ByteHolder:HashID:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.ByteHolder:Print:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Print:b,
   0:     (method: name=System.ByteHolder:PrintLine:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:PrintLine:b,
   0:     (method: name=System.ByteHolder:ToString:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:ToString:b,
   0:   [class: name='System.CharHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.CharHolder:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.CharHolder:New:c,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.CharHolder:Get:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.CharHolder:Set:c,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.CharHolder:Compare:o.System.Compare,; id=4; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_OBJ_INST_CAST: class=System.CharHolder
   0:       LIB_MTHD_CALL: class=System.CharHolder, method=System.CharHolder:Get:
   0:       LIB_MTHD_CALL: class=System.CharHolder, method=System.CharHolder:Get:
   0:     (method: name=System.CharHolder:Clone:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.CharHolder
   0:       LIB_MTHD_CALL: class=System.CharHolder, method=System.CharHolder:New:c,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=System.CharHolder:HashID:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.CharHolder:Print:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c,
   0:     (method: name=System.CharHolder:PrintLine:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:PrintLine:c,
   0:     (method: name=System.CharHolder:ToString:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:ToString:c,
   0:   [class: name='System.IntHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.IntHolder:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IntHolder:New:i,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IntHolder:Get:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Set:i,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Inc:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Add:i,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Dec:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Sub:i,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Mul:i,; id=8; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Div:i,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Compare:o.System.Compare,; id=10; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_OBJ_INST_CAST: class=System.IntHolder
   0:       LIB_MTHD_CALL: class=System.IntHolder, method=System.IntHolder:Get:
   0:       LIB_MTHD_CALL: class=System.IntHolder, method=System.IntHolder:Get:
   0:     (method: name=System.IntHolder:Clone:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.IntHolder
   0:       LIB_MTHD_CALL: class=System.IntHolder, method=System.IntHolder:New:i,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=System.IntHolder:HashID:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IntHolder:Print:; id=13; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Print:i,
   0:     (method: name=System.IntHolder:PrintLine:; id=14; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:PrintLine:i,
   0:     (method: name=System.IntHolder:ToString:; id=15; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:ToString:i,
   0:   [class: name='System.FloatHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.FloatHolder:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.FloatHolder:New:f,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.FloatHolder:Get:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.FloatHolder:Set:f,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.FloatHolder:Add:f,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.FloatHolder:Sub:f,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.FloatHolder:Mul:f,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.FloatHolder:Div:f,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.FloatHolder:Compare:o.System.Compare,; id=8; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_OBJ_INST_CAST: class=System.FloatHolder
   0:       LIB_MTHD_CALL: class=System.FloatHolder, method=System.FloatHolder:Get:
   0:       LIB_MTHD_CALL: class=System.FloatHolder, method=System.FloatHolder:Get:
   0:     (method: name=System.FloatHolder:Clone:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.FloatHolder
   0:       LIB_MTHD_CALL: class=System.FloatHolder, method=System.FloatHolder:New:f,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=System.FloatHolder:HashID:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.FloatHolder:Print:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Print:f,
   0:     (method: name=System.FloatHolder:PrintLine:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:PrintLine:f,
   0:     (method: name=System.FloatHolder:ToString:; id=13; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:ToString:f,
   0:   [class: name='System.ByteArrayHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.ByteArrayHolder:New:b*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.ByteArrayHolder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.ByteArrayHolder:Set:b*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.CharArrayHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.CharArrayHolder:New:c*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.CharArrayHolder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.CharArrayHolder:Set:c*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.IntArrayHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.IntArrayHolder:New:i*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IntArrayHolder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IntArrayHolder:Set:i*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.BoolArrayHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.BoolArrayHolder:New:l*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.BoolArrayHolder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.BoolArrayHolder:Set:l*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.FloatArrayHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.FloatArrayHolder:New:f*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.FloatArrayHolder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.FloatArrayHolder:Set:f*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.BaseArrayHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.BaseArrayHolder:New:o.System.Base*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.BaseArrayHolder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.BaseArrayHolder:Set:o.System.Base*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.StringArrayHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.StringArrayHolder:New:o.System.String*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.StringArrayHolder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.StringArrayHolder:Set:o.System.String*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.FuncHolder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.FuncHolder:New:m.()~o.R,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.FuncHolder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.FuncHolder:Set:m.()~o.R,; id=2; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:   [class: name='System.Func2Holder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.Func2Holder:New:m.(o.X,)~o.R,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Func2Holder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Func2Holder:Set:m.(o.X,)~o.R,; id=2; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.Func2Holder:Apply:o.X,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.Func3Holder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.Func3Holder:New:m.(o.X,o.Y,)~o.R,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Func3Holder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Func3Holder:Set:m.(o.X,o.Y,)~o.R,; id=2; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:   [class: name='System.Func4Holder'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.Func4Holder:New:m.(o.X,o.Y,o.Z,)~o.R,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Func4Holder:Get:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Func4Holder:Set:m.(o.X,o.Y,o.Z,)~o.R,; id=2; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:   [class: name='System.Base'; parent=''; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.Base:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Base:GetClass:; id=1; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Base:GetClassID:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Base:GetInstanceID:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.Stringify'; parent='System.Base'; interface=1'; is_public=1; virtual=1; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.Stringify:ToString:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.Compare'; parent='System.Base'; interface=1'; is_public=1; virtual=1; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.Compare:Compare:o.System.Compare,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Compare:HashID:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.Clone'; parent='System.Base'; interface=1'; is_public=1; virtual=1; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.Clone:Clone:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.BasicCompare'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.BasicCompare:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.BasicCompare:Compare:o.System.Compare,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetInstanceID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetInstanceID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetInstanceID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetInstanceID:
   0:     (method: name=System.BasicCompare:HashID:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetInstanceID:
   0:   [class: name='System.String'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=24; is_debug=0]
   0:     (method: name=System.String:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.String:New:o.System.String,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.String:New:c*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.String:New:c*,l,; id=3; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.String:New:c*,i,i,; id=4; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,i,i,
   0:     (method: name=System.String:New:b*,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:ToUnicode:b*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.String:New:b*,i,i,; id=6; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:ToUnicode:b*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,i,i,
   0:     (method: name=System.String:ToString:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.String:SetIntFormat:o.System.Number#Format,; id=8; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:     (method: name=System.String:SetFloatFormat:o.System.Number#Format,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:     (method: name=System.String:SetFloatPrecision:i,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:ToString:i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:     (method: name=System.String:ToCharArray:; id=11; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:ToByteArray:; id=12; num_params: 0; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:     (method: name=System.String:Append:l,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.String:Append:i,; id=14; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:ToString:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.String:Append:f,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:ToString:f,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.String:Append:o.System.String,; id=16; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c*,
   0:     (method: name=System.String:Append:c*,; id=17; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:     (method: name=System.String:Append:c*,i,i,; id=18; num_params: 3; mem_size=48; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:Append:b*,; id=19; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:     (method: name=System.String:Append:b*,i,i,; id=20; num_params: 3; mem_size=48; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:Append:c,; id=21; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:Append:b,; id=22; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:Find:c,; id=23; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,c,
   0:     (method: name=System.String:Has:c,; id=24; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,c,
   0:     (method: name=System.String:Has:i,c,; id=25; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,c,
   0:     (method: name=System.String:Has:o.System.String,; id=26; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,o.System.String,
   0:     (method: name=System.String:Has:i,o.System.String,; id=27; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,o.System.String,
   0:     (method: name=System.String:Find:i,c,; id=28; num_params: 2; mem_size=24; is_native=1; is_debug=0]
   0:     (method: name=System.String:IsFloat:; id=29; num_params: 0; mem_size=48; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Count:c,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Split:o.System.String,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:IsInt:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:IsInt:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:IsInt:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:IsInt:
   0:     (method: name=System.String:IsInt:o.System.String,; id=30; num_params: 1; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:     (method: name=System.String:IsInt:; id=31; num_params: 0; mem_size=48; is_native=1; is_debug=0]
   0:     (method: name=System.String:Count:c,; id=32; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Count:i,c,
   0:     (method: name=System.String:Count:i,c,; id=33; num_params: 2; mem_size=32; is_native=1; is_debug=0]
   0:     (method: name=System.String:FindLast:c,; id=34; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:FindLast:i,c,
   0:     (method: name=System.String:FindLast:i,c,; id=35; num_params: 2; mem_size=24; is_native=1; is_debug=0]
   0:     (method: name=System.String:Find:o.System.String,; id=36; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,o.System.String,
   0:     (method: name=System.String:FindAll:o.System.String,; id=37; num_params: 1; mem_size=64; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,o.System.String,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:i*,i,i*,i,i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i*,
   0:     (method: name=System.String:Find:i,o.System.String,; id=38; num_params: 2; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:i,c,
   0:     (method: name=System.String:ReplaceAll:o.System.String,o.System.String,; id=39; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Replace:o.System.String,o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Replace:o.System.String,o.System.String,
   0:     (method: name=System.String:RemoveAll:o.System.String,; id=40; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ReplaceAll:o.System.String,o.System.String,
   0:     (method: name=System.String:RemoveAll:c,; id=41; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:     (method: name=System.String:ReplaceAll:c,c,; id=42; num_params: 2; mem_size=40; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:     (method: name=System.String:Replace:o.System.String,o.System.String,; id=43; num_params: 2; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Find:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:SubString:i,i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:SubString:i,i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:     (method: name=System.String:Remove:o.System.String,; id=44; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Replace:o.System.String,o.System.String,
   0:     (method: name=System.String:Remove:c,; id=45; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:     (method: name=System.String:Delete:i,; id=46; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Delete:i,i,
   0:     (method: name=System.String:Delete:i,i,; id=47; num_params: 2; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:Capacity:; id=48; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.String:Compress:; id=49; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:Insert:i,c,; id=50; num_params: 2; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:Insert:i,o.System.String,; id=51; num_params: 2; mem_size=72; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:     (method: name=System.String:IsEmpty:; id=52; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.String:Clear:; id=53; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.String:Size:; id=54; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.String:Get:i,; id=55; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.String:First:; id=56; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.String:Last:; id=57; num_params: 0; mem_size=0; is_native=1; is_debug=0]
   0:     (method: name=System.String:Set:c,i,; id=58; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.String:Pop:; id=59; num_params: 0; mem_size=8; is_native=1; is_debug=0]
   0:     (method: name=System.String:ToInt:; id=60; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToInt:i,
   0:     (method: name=System.String:ToInt:i,; id=61; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.String:ToFloat:; id=62; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.String:ToBool:; id=63; num_params: 0; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:     (method: name=System.String:StartsWith:c,; id=64; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:     (method: name=System.String:EndsWith:c,; id=65; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:     (method: name=System.String:StartsWith:o.System.String,; id=66; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:     (method: name=System.String:EndsWith:o.System.String,; id=67; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:     (method: name=System.String:Reverse:; id=68; num_params: 0; mem_size=24; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.String:Trim:; id=69; num_params: 0; mem_size=24; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,i,i,
   0:     (method: name=System.String:Lines:; id=70; num_params: 0; mem_size=80; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:SubString:i,i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:SubString:i,i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:     (method: name=System.String:Split:o.System.String,; id=71; num_params: 1; mem_size=72; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:SubString:i,i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:SubString:i,i,
   0:     (method: name=System.String:Split:c,; id=72; num_params: 1; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,i,i,
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,i,i,
   0:     (method: name=System.String:ToUpper:; id=73; num_params: 0; mem_size=24; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.String:ToLower:; id=74; num_params: 0; mem_size=24; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.String:SubString:i,; id=75; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:SubString:i,i,
   0:     (method: name=System.String:SubString:i,i,; id=76; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:c*,i,c*,i,i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,l,
   0:     (method: name=System.String:Equals:o.System.String,; id=77; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Compare:o.System.Compare,
   0:     (method: name=System.String:HashID:; id=78; num_params: 0; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Size:i,
   0:     (method: name=System.String:Compare:o.System.Compare,; id=79; num_params: 1; mem_size=40; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_OBJ_INST_CAST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Get:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Size:
   0:     (method: name=System.String:Clone:; id=80; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=System.String:Copy:; id=81; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:     (method: name=System.String:Print:; id=82; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c*,
   0:     (method: name=System.String:PrintLine:; id=83; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:PrintLine:c*,
   0:     (method: name=System.String:Error:; id=84; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c*,
   0:     (method: name=System.String:ErrorLine:; id=85; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:ErrorLine:c*,
   0:   [class: name='System.Runtime'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.Runtime:SetLocale:o.System.String,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:SetProperty:o.System.String,o.System.String,
   0:     (method: name=System.Runtime:SetSignal:o.System.Runtime#Signal,m.(i,)~n,; id=1; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:RaiseSignal:o.System.Runtime#Signal,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:Exit:i,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:Command:o.System.String,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:CommandOutput:o.System.String,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:Assert:l,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:GetPlatform:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:GetVersion:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:GetTempDir:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:GetProperty:o.System.String,
   0:     (method: name=System.Runtime:GetUserDir:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:GetProperty:o.System.String,
   0:     (method: name=System.Runtime:GetInstallDir:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:GetProperty:o.System.String,
   0:     (method: name=System.Runtime:GetProperty:o.System.String,; id=12; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:HasProperty:o.System.String,; id=13; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:GetProperty:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:IsEmpty:
   0:     (method: name=System.Runtime:SetProperty:o.System.String,o.System.String,; id=14; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:GetTime:l,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:New:l,
   0:     (method: name=System.Runtime:Copy:b*,i,b*,i,i,; id=16; num_params: 5; mem_size=40; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:Copy:c*,i,c*,i,i,; id=17; num_params: 5; mem_size=40; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:Copy:i*,i,i*,i,i,; id=18; num_params: 5; mem_size=40; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,; id=19; num_params: 5; mem_size=40; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:Copy:o.System.Compare*,i,o.System.Compare*,i,i,; id=20; num_params: 5; mem_size=40; is_native=0; is_debug=0]
   0:     (method: name=System.Runtime:Copy:f*,i,f*,i,i,; id=21; num_params: 5; mem_size=40; is_native=0; is_debug=0]
   0:   [class: name='System.API.DllProxy'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.API.DllProxy:New:o.System.String,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.API.DllProxy:IsLoaded:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.API.DllProxy:Unload:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.API.DllProxy:CallFunction:o.System.String,o.System.Base*,; id=3; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:   [class: name='System.Time.Date'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=72; is_debug=0]
   0:     (method: name=System.Time.Date:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Time.Date:New:l,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Time.Date:New:i,i,i,l,; id=2; num_params: 4; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Time.Date:Compare:o.System.Compare,; id=3; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetClassID:
   0:       LIB_OBJ_INST_CAST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetYear:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetYear:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetMonth:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetMonth:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetDay:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetDay:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetHours:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetHours:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetMinutes:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetMinutes:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetSeconds:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetSeconds:
   0:     (method: name=System.Time.Date:Clone:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:New:i,i,i,i,i,i,l,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=System.Time.Date:HashID:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:ToString:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:HashID:
   0:     (method: name=System.Time.Date:New:i,i,i,i,i,i,l,; id=6; num_params: 7; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Time.Date:GetDay:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:GetWeekDayName:; id=8; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:     (method: name=System.Time.Date:GetWeekDay:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:GetMonth:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:GetMonthName:; id=11; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:     (method: name=System.Time.Date:GetYear:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:GetHours:; id=13; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:GetMinutes:; id=14; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:GetSeconds:; id=15; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:AddDays:i,; id=16; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:AddHours:i,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:AddMinutes:i,; id=18; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:AddSeconds:i,; id=19; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Date:ToString:; id=20; num_params: 0; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetWeekDayName:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:GetMonthName:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:     (method: name=System.Time.Date:ToShortString:; id=21; num_params: 0; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:i,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:   [class: name='System.Time.Timer'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=System.Time.Timer:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Time.Timer:Start:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Timer:End:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Time.Timer:GetElapsedTime:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.Concurrency.Thread'; parent='System.Base'; interface=0'; is_public=1; virtual=1; class_mem_size=0; instance_mem_size=24; is_debug=0]
   0:     (method: name=System.Concurrency.Thread:New:o.System.String,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Concurrency.Thread:Execute:o.System.Base,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Concurrency.Thread:Sleep:i,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Concurrency.Thread:Join:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Concurrency.Thread:GetName:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Concurrency.Thread:GetExecuteID:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Concurrency.Thread:Run:o.System.Base,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.Concurrency.ThreadMutex'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=72; is_debug=0]
   0:     (method: name=System.Concurrency.ThreadMutex:New:o.System.String,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.Concurrency.ThreadMutex:GetName:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.Matrix.Matrix2D'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.Matrix.Matrix2D:Add:f,f**,; id=0; num_params: 2; mem_size=64; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Add:f**,f,; id=1; num_params: 2; mem_size=64; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Add:f**,f**,; id=2; num_params: 2; mem_size=88; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Subtract:f,f**,; id=3; num_params: 2; mem_size=64; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Subtract:f**,f,; id=4; num_params: 2; mem_size=64; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Subtract:f**,f**,; id=5; num_params: 2; mem_size=88; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Multiple:f,f**,; id=6; num_params: 2; mem_size=64; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Multiple:f**,f,; id=7; num_params: 2; mem_size=64; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Multiple:f**,f**,; id=8; num_params: 2; mem_size=88; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Divide:f**,f,; id=9; num_params: 2; mem_size=64; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Divide:f,f**,; id=10; num_params: 2; mem_size=64; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Divide:f**,f**,; id=11; num_params: 2; mem_size=88; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Transpose:f**,; id=12; num_params: 1; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Dot:f**,f**,; id=13; num_params: 2; mem_size=104; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Sigmoid:f,; id=14; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:E:
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Power:f,f,
   0:     (method: name=System.Matrix.Matrix2D:Sigmoid:f**,; id=15; num_params: 1; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.Matrix.Matrix2D, method=System.Matrix.Matrix2D:Sigmoid:f,
   0:     (method: name=System.Matrix.Matrix2D:DotSigmoid:f**,f**,; id=16; num_params: 2; mem_size=104; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.Matrix.Matrix2D, method=System.Matrix.Matrix2D:Sigmoid:f,
   0:     (method: name=System.Matrix.Matrix2D:Random:i,i,; id=17; num_params: 2; mem_size=40; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Random:
   0:     (method: name=System.Matrix.Matrix2D:RandomNormal:f,f,i,i,; id=18; num_params: 4; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Matrix.Matrix2D, method=System.Matrix.Matrix2D:RandomNormal:f,f,
   0:     (method: name=System.Matrix.Matrix2D:RandomNormal:f,f,; id=19; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Random:
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Pi:
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Cos:f,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Random:
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Log:f,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:SquareRoot:f,
   0:     (method: name=System.Matrix.Matrix2D:Split:f**,i,i,l,; id=20; num_params: 4; mem_size=96; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:     (method: name=System.Matrix.Matrix2D:Concatenate:f**,f**,l,; id=21; num_params: 3; mem_size=160; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Size:f**,
   0:   [class: name='System.IO.InputStream'; parent='System.Base'; interface=1'; is_public=1; virtual=1; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.IO.InputStream:ReadByte:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.InputStream:ReadBuffer:i,i,b*,; id=1; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.InputStream:ReadBuffer:i,i,c*,; id=2; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.InputStream:ReadLine:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.InputStream:Close:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.IO.OutputStream'; parent='System.Base'; interface=1'; is_public=1; virtual=1; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.IO.OutputStream:WriteByte:i,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.OutputStream:WriteBuffer:i,i,b*,; id=1; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.OutputStream:WriteBuffer:i,i,c*,; id=2; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.OutputStream:WriteString:o.System.String,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.OutputStream:Close:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Standard'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.IO.Standard:ReadBuffer:i,i,b*,; id=0; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Standard:ReadBuffer:i,i,c*,; id=1; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Standard:WriteBuffer:b*,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.IO.Standard, method=System.IO.Standard:WriteBuffer:i,i,b*,
   0:     (method: name=System.IO.Standard:WriteBuffer:i,i,b*,; id=3; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Standard:WriteBuffer:c*,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.IO.Standard, method=System.IO.Standard:WriteBuffer:i,i,c*,
   0:     (method: name=System.IO.Standard:WriteBuffer:i,i,c*,; id=5; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Standard:WriteErrorBuffer:i,i,b*,; id=6; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Standard:WriteErrorBuffer:i,i,c*,; id=7; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Standard:ReadLine:; id=8; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ReadString:
   0:     (method: name=System.IO.Standard:Print:l,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Print:l,
   0:     (method: name=System.IO.Standard:PrintLine:l,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:PrintLine:l,
   0:     (method: name=System.IO.Standard:Print:b,; id=11; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Print:b,
   0:     (method: name=System.IO.Standard:PrintLine:b,; id=12; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:PrintLine:b,
   0:     (method: name=System.IO.Standard:Print:c,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Print:c,
   0:     (method: name=System.IO.Standard:PrintLine:c,; id=14; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:PrintLine:c,
   0:     (method: name=System.IO.Standard:Print:i,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Print:i,
   0:     (method: name=System.IO.Standard:PrintLine:i,; id=16; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:PrintLine:i,
   0:     (method: name=System.IO.Standard:Print:f,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Print:f,
   0:     (method: name=System.IO.Standard:PrintLine:f,; id=18; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:PrintLine:f,
   0:     (method: name=System.IO.Standard:Print:c*,; id=19; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Print:c*,
   0:     (method: name=System.IO.Standard:PrintLine:c*,; id=20; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:PrintLine:c*,
   0:     (method: name=System.IO.Standard:Print:o.System.String,; id=21; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Print:o.System.String,
   0:     (method: name=System.IO.Standard:PrintLine:o.System.String,; id=22; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:PrintLine:o.System.String,
   0:     (method: name=System.IO.Standard:PrintLine:; id=23; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:PrintLine:
   0:     (method: name=System.IO.Standard:Flush:; id=24; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Flush:
   0:     (method: name=System.IO.Standard:FlushError:; id=25; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:FlushError:
   0:     (method: name=System.IO.Standard:Error:l,; id=26; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Error:l,
   0:     (method: name=System.IO.Standard:ErrorLine:l,; id=27; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ErrorLine:l,
   0:     (method: name=System.IO.Standard:Error:b,; id=28; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Error:b,
   0:     (method: name=System.IO.Standard:ErrorLine:b,; id=29; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ErrorLine:b,
   0:     (method: name=System.IO.Standard:Error:c,; id=30; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Error:c,
   0:     (method: name=System.IO.Standard:ErrorLine:c,; id=31; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ErrorLine:c,
   0:     (method: name=System.IO.Standard:Error:i,; id=32; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Error:i,
   0:     (method: name=System.IO.Standard:ErrorLine:i,; id=33; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ErrorLine:i,
   0:     (method: name=System.IO.Standard:Error:f,; id=34; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Error:f,
   0:     (method: name=System.IO.Standard:ErrorLine:f,; id=35; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ErrorLine:f,
   0:     (method: name=System.IO.Standard:Error:c*,; id=36; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Error:c*,
   0:     (method: name=System.IO.Standard:ErrorLine:c*,; id=37; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ErrorLine:c*,
   0:     (method: name=System.IO.Standard:Error:o.System.String,; id=38; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Error:o.System.String,
   0:     (method: name=System.IO.Standard:ErrorLine:o.System.String,; id=39; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ErrorLine:o.System.String,
   0:     (method: name=System.IO.Standard:ErrorLine:; id=40; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ErrorLine:
   0:     (method: name=System.IO.Standard:SetIntFormat:o.System.Number#Format,; id=41; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:SetIntFormat:o.System.Number#Format,
   0:     (method: name=System.IO.Standard:SetFloatFormat:o.System.Number#Format,; id=42; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:SetFloatFormat:o.System.Number#Format,
   0:     (method: name=System.IO.Standard:SetFloatPrecision:i,; id=43; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:SetFloatPrecision:i,
   0:     (method: name=System.IO.Standard:SetWidth:i,; id=44; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:SetWidth:i,
   0:     (method: name=System.IO.Standard:SetFill:c,; id=45; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:Instance:
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:SetFill:i,
   0:   [class: name='System.IO.ConsoleIO'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=8; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IO.ConsoleIO:Instance:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.IO.ConsoleIO
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:New:
   0:     (method: name=System.IO.ConsoleIO:ReadString:; id=2; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.ConsoleIO, method=System.IO.ConsoleIO:ReadString:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:     (method: name=System.IO.ConsoleIO:SetIntFormat:o.System.Number#Format,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:SetFloatFormat:o.System.Number#Format,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:SetFloatPrecision:i,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:SetWidth:i,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:SetFill:i,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:Print:l,; id=8; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Bool, method=System.$Bool:Print:l,
   0:     (method: name=System.IO.ConsoleIO:PrintLine:l,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Bool, method=System.$Bool:PrintLine:l,
   0:     (method: name=System.IO.ConsoleIO:ReadString:c*,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:Print:b,; id=11; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Print:b,
   0:     (method: name=System.IO.ConsoleIO:PrintLine:b,; id=12; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:PrintLine:b,
   0:     (method: name=System.IO.ConsoleIO:Print:c,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c,
   0:     (method: name=System.IO.ConsoleIO:PrintLine:c,; id=14; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:PrintLine:c,
   0:     (method: name=System.IO.ConsoleIO:Print:i,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Print:i,
   0:     (method: name=System.IO.ConsoleIO:PrintLine:i,; id=16; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:PrintLine:i,
   0:     (method: name=System.IO.ConsoleIO:Print:f,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Print:f,
   0:     (method: name=System.IO.ConsoleIO:PrintLine:f,; id=18; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:PrintLine:f,
   0:     (method: name=System.IO.ConsoleIO:Print:c*,; id=19; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Print:c*,
   0:     (method: name=System.IO.ConsoleIO:PrintLine:c*,; id=20; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:PrintLine:c*,
   0:     (method: name=System.IO.ConsoleIO:Print:o.System.String,; id=21; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Print:
   0:     (method: name=System.IO.ConsoleIO:PrintLine:o.System.String,; id=22; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:PrintLine:
   0:     (method: name=System.IO.ConsoleIO:PrintLine:; id=23; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Print:
   0:     (method: name=System.IO.ConsoleIO:Flush:; id=24; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:FlushError:; id=25; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.ConsoleIO:Error:l,; id=26; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Bool, method=System.$Bool:Error:l,
   0:     (method: name=System.IO.ConsoleIO:ErrorLine:l,; id=27; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Bool, method=System.$Bool:ErrorLine:l,
   0:     (method: name=System.IO.ConsoleIO:Error:b,; id=28; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Error:b,
   0:     (method: name=System.IO.ConsoleIO:ErrorLine:b,; id=29; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:ErrorLine:b,
   0:     (method: name=System.IO.ConsoleIO:Error:c,; id=30; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c,
   0:     (method: name=System.IO.ConsoleIO:ErrorLine:c,; id=31; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:ErrorLine:c,
   0:     (method: name=System.IO.ConsoleIO:Error:i,; id=32; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Error:i,
   0:     (method: name=System.IO.ConsoleIO:ErrorLine:i,; id=33; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:ErrorLine:i,
   0:     (method: name=System.IO.ConsoleIO:Error:f,; id=34; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:Error:f,
   0:     (method: name=System.IO.ConsoleIO:ErrorLine:f,; id=35; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Float, method=System.$Float:ErrorLine:f,
   0:     (method: name=System.IO.ConsoleIO:Error:c*,; id=36; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Error:c*,
   0:     (method: name=System.IO.ConsoleIO:ErrorLine:c*,; id=37; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:ErrorLine:c*,
   0:     (method: name=System.IO.ConsoleIO:Error:o.System.String,; id=38; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Error:
   0:     (method: name=System.IO.ConsoleIO:ErrorLine:o.System.String,; id=39; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ErrorLine:
   0:     (method: name=System.IO.ConsoleIO:ErrorLine:; id=40; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ErrorLine:
   0:     (method: name=System.IO.ConsoleIO:ErrorFlush:; id=41; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Serializer'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.IO.Serializer:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IO.Serializer:Write:l,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:c,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:i,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:f,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:o.System.Base,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:l*,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:o.System.Base*,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:b*,; id=8; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:c*,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:i*,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Write:f*,; id=11; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Serializer:Serialize:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:CompressZlib:b*,
   0:   [class: name='System.IO.Deserializer'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.IO.Deserializer:New:b*,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:UncompressZlib:b*,
   0:     (method: name=System.IO.Deserializer:ReadBool:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadChar:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadInt:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadFloat:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadObject:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadObjectArray:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadBoolArray:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadByteArray:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadCharArray:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadIntArray:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Deserializer:ReadFloatArray:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Filesystem.File'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:New:o.System.String,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IO.Filesystem.File:GetName:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:IsOpen:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Seek:i,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Rewind:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:IsEOF:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:GetFullName:o.System.String,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:GetFullName:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:GetFullName:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:GetTempName:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Size:o.System.String,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Size:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Size:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:CreateTime:o.System.String,; id=11; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:CreateTime:o.System.String,l,
   0:     (method: name=System.IO.Filesystem.File:CreateTime:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:CreateTime:o.System.String,l,
   0:     (method: name=System.IO.Filesystem.File:CreateTime:o.System.String,l,; id=13; num_params: 2; mem_size=64; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:New:i,i,i,i,i,i,l,
   0:     (method: name=System.IO.Filesystem.File:CreateTime:l,; id=14; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:CreateTime:o.System.String,l,
   0:     (method: name=System.IO.Filesystem.File:ModifiedTime:o.System.String,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:ModifiedTime:o.System.String,l,
   0:     (method: name=System.IO.Filesystem.File:ModifiedTime:o.System.String,l,; id=16; num_params: 2; mem_size=64; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:New:i,i,i,i,i,i,l,
   0:     (method: name=System.IO.Filesystem.File:AccessedTime:o.System.String,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:AccessedTime:o.System.String,l,
   0:     (method: name=System.IO.Filesystem.File:AccessedTime:; id=18; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:AccessedTime:o.System.String,l,
   0:     (method: name=System.IO.Filesystem.File:AccessedTime:o.System.String,l,; id=19; num_params: 2; mem_size=64; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:New:i,i,i,i,i,i,l,
   0:     (method: name=System.IO.Filesystem.File:AccessedTime:l,; id=20; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:AccessedTime:o.System.String,l,
   0:     (method: name=System.IO.Filesystem.File:Delete:o.System.String,; id=21; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Delete:; id=22; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Delete:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:Owner:o.System.String,; id=23; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Owner:; id=24; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Owner:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:Group:o.System.String,; id=25; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Group:; id=26; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Group:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:IsReadWrite:o.System.String,; id=27; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:IsReadWrite:; id=28; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:IsReadWrite:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:IsReadOnly:o.System.String,; id=29; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:IsReadOnly:; id=30; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:IsReadOnly:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:IsWriteOnly:o.System.String,; id=31; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:IsWriteOnly:; id=32; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:IsWriteOnly:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:Exists:o.System.String,; id=33; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Exists:; id=34; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Exists:o.System.String,
   0:     (method: name=System.IO.Filesystem.File:Rename:o.System.String,o.System.String,; id=35; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.File:Copy:o.System.String,o.System.String,; id=36; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Copy:o.System.String,o.System.String,l,
   0:     (method: name=System.IO.Filesystem.File:Copy:o.System.String,o.System.String,l,; id=37; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Filesystem.FileReader'; parent='System.IO.Filesystem.File'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileReader:New:o.System.String,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:New:o.System.String,
   0:     (method: name=System.IO.Filesystem.FileReader:Close:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileReader:ReadByte:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileReader:ReadBuffer:i,i,c*,; id=3; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileReader:ReadBuffer:i,i,b*,; id=4; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileReader:ReadLine:; id=5; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:IsEOF:
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileReader, method=System.IO.Filesystem.FileReader:ReadString:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:     (method: name=System.IO.Filesystem.FileReader:ReadString:c*,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileReader:ReadFile:o.System.String,; id=7; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Size:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.FileReader
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileReader, method=System.IO.Filesystem.FileReader:New:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:IsOpen:
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileReader, method=System.IO.Filesystem.FileReader:ReadBuffer:i,i,c*,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileReader, method=System.IO.Filesystem.FileReader:Close:
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:     (method: name=System.IO.Filesystem.FileReader:ReadBinaryFile:o.System.String,; id=8; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Size:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.FileReader
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileReader, method=System.IO.Filesystem.FileReader:New:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:IsOpen:
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileReader, method=System.IO.Filesystem.FileReader:ReadBuffer:i,i,b*,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileReader, method=System.IO.Filesystem.FileReader:Close:
   0:   [class: name='System.IO.Filesystem.FileWriter'; parent='System.IO.Filesystem.File'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileWriter:New:o.System.String,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:New:o.System.String,
   0:     (method: name=System.IO.Filesystem.FileWriter:New:o.System.String,l,; id=1; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:New:o.System.String,
   0:     (method: name=System.IO.Filesystem.FileWriter:Temp:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:GetTempName:
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.FileWriter
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:New:o.System.String,
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteFile:o.System.String,o.System.String,; id=3; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.FileWriter
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:New:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:IsOpen:
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:WriteString:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:Close:
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteFile:o.System.String,b*,; id=4; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.FileWriter
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:New:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:IsOpen:
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:WriteBuffer:b*,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:Close:
   0:     (method: name=System.IO.Filesystem.FileWriter:Close:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileWriter:Flush:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteByte:i,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteBuffer:b*,; id=8; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:WriteBuffer:i,i,b*,
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteBuffer:i,i,b*,; id=9; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteBuffer:c*,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:WriteBuffer:i,i,c*,
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteBuffer:i,i,c*,; id=11; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteString:o.System.String,; id=12; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:WriteString:c*,
   0:     (method: name=System.IO.Filesystem.FileWriter:WriteString:c*,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Filesystem.Logger'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=8; instance_mem_size=56; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Logger:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:GetTempDir:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ReplaceAll:o.System.String,o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:EndsWith:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Logger, method=System.IO.Filesystem.Logger:RandomPrefix:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.Concurrency.ThreadMutex
   0:       LIB_MTHD_CALL: class=System.Concurrency.ThreadMutex, method=System.Concurrency.ThreadMutex:New:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:EndsWith:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Logger, method=System.IO.Filesystem.Logger:RandomPrefix:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.Concurrency.ThreadMutex
   0:       LIB_MTHD_CALL: class=System.Concurrency.ThreadMutex, method=System.Concurrency.ThreadMutex:New:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Logger, method=System.IO.Filesystem.Logger:RandomPrefix:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.Concurrency.ThreadMutex
   0:       LIB_MTHD_CALL: class=System.Concurrency.ThreadMutex, method=System.Concurrency.ThreadMutex:New:o.System.String,
   0:     (method: name=System.IO.Filesystem.Logger:RandomPrefix:; id=1; num_params: 0; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Random:i,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Random:i,i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Random:i,i,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:     (method: name=System.IO.Filesystem.Logger:Instance:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.Logger
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Logger, method=System.IO.Filesystem.Logger:New:
   0:     (method: name=System.IO.Filesystem.Logger:Info:o.System.String,; id=3; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.FileWriter
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:New:o.System.String,l,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:New:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:ToShortString:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:WriteString:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:Close:
   0:     (method: name=System.IO.Filesystem.Logger:Warn:o.System.String,; id=4; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.FileWriter
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:New:o.System.String,l,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:New:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:ToShortString:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:WriteString:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:Close:
   0:     (method: name=System.IO.Filesystem.Logger:Error:o.System.String,; id=5; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.IO.Filesystem.FileWriter
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:New:o.System.String,l,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_NEW_OBJ_INST: class=System.Time.Date
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:New:
   0:       LIB_MTHD_CALL: class=System.Time.Date, method=System.Time.Date:ToShortString:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:WriteString:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.FileWriter, method=System.IO.Filesystem.FileWriter:Close:
   0:     (method: name=System.IO.Filesystem.Logger:ClearInfo:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Delete:o.System.String,
   0:     (method: name=System.IO.Filesystem.Logger:ClearWarn:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Delete:o.System.String,
   0:     (method: name=System.IO.Filesystem.Logger:ClearError:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Delete:o.System.String,
   0:     (method: name=System.IO.Filesystem.Logger:GetDirectory:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Logger:GetWarnFile:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Logger:GetInfoFile:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Logger:GetErrorFile:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Filesystem.Directory'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Directory:Rename:o.System.String,o.System.String,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Directory, method=System.IO.Filesystem.Directory:Exists:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.File, method=System.IO.Filesystem.File:Rename:o.System.String,o.System.String,
   0:     (method: name=System.IO.Filesystem.Directory:Copy:o.System.String,o.System.String,; id=1; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Directory, method=System.IO.Filesystem.Directory:Copy:o.System.String,o.System.String,l,
   0:     (method: name=System.IO.Filesystem.Directory:Copy:o.System.String,o.System.String,l,; id=2; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Directory:Create:o.System.String,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Directory:GetTemp:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:GetProperty:o.System.String,
   0:     (method: name=System.IO.Filesystem.Directory:GetUser:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:GetProperty:o.System.String,
   0:     (method: name=System.IO.Filesystem.Directory:GetInstall:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:GetProperty:o.System.String,
   0:     (method: name=System.IO.Filesystem.Directory:GetSlash:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Directory:CreatePath:o.System.String,; id=8; num_params: 1; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Split:o.System.String,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Split:o.System.String,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Has:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:IsEmpty:
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Directory, method=System.IO.Filesystem.Directory:Exists:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Directory, method=System.IO.Filesystem.Directory:Create:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:o.System.String,
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:Append:c,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Directory, method=System.IO.Filesystem.Directory:Exists:o.System.String,
   0:       LIB_MTHD_CALL: class=System.IO.Filesystem.Directory, method=System.IO.Filesystem.Directory:Create:o.System.String,
   0:     (method: name=System.IO.Filesystem.Directory:Exists:o.System.String,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Filesystem.Directory:List:o.System.String,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Net.TCPSocket'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=24; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:New:o.System.String,i,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IO.Net.TCPSocket:GetAddress:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:GetPort:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:IsOpen:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:WriteByte:i,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:WriteBuffer:b*,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSocket, method=System.IO.Net.TCPSocket:WriteBuffer:i,i,b*,
   0:     (method: name=System.IO.Net.TCPSocket:WriteBuffer:i,i,b*,; id=6; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:WriteBuffer:c*,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSocket, method=System.IO.Net.TCPSocket:WriteBuffer:i,i,c*,
   0:     (method: name=System.IO.Net.TCPSocket:WriteBuffer:i,i,c*,; id=8; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:ReadByte:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:ReadBuffer:i,i,b*,; id=10; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:ReadBuffer:i,i,c*,; id=11; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:WriteString:o.System.String,; id=12; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSocket, method=System.IO.Net.TCPSocket:WriteString:c*,
   0:     (method: name=System.IO.Net.TCPSocket:WriteString:c*,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:ReadLine:; id=14; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSocket, method=System.IO.Net.TCPSocket:IsOpen:
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSocket, method=System.IO.Net.TCPSocket:ReadString:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:     (method: name=System.IO.Net.TCPSocket:ReadString:c*,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:HostName:; id=16; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:     (method: name=System.IO.Net.TCPSocket:Resolve:o.System.String,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:Flush:; id=18; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:Close:; id=19; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocket:GetLastError:; id=20; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Net.TCPSecureSocket'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=48; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:New:o.System.String,i,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IO.Net.TCPSecureSocket:GetAddress:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:GetIssuer:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:GetSubject:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:GetPort:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:IsOpen:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:WriteByte:i,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:WriteBuffer:b*,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Byte, method=System.$Byte:Size:b*,
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSecureSocket, method=System.IO.Net.TCPSecureSocket:WriteBuffer:i,i,b*,
   0:     (method: name=System.IO.Net.TCPSecureSocket:WriteBuffer:i,i,b*,; id=8; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:WriteBuffer:c*,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$Char, method=System.$Char:Size:c*,
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSecureSocket, method=System.IO.Net.TCPSecureSocket:WriteBuffer:i,i,c*,
   0:     (method: name=System.IO.Net.TCPSecureSocket:WriteBuffer:i,i,c*,; id=10; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:ReadByte:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:ReadBuffer:i,i,b*,; id=12; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:ReadBuffer:i,i,c*,; id=13; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:WriteString:o.System.String,; id=14; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:ToCharArray:
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSecureSocket, method=System.IO.Net.TCPSecureSocket:WriteString:c*,
   0:     (method: name=System.IO.Net.TCPSecureSocket:WriteString:c*,; id=15; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:ReadLine:; id=16; num_params: 0; mem_size=8; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSecureSocket, method=System.IO.Net.TCPSecureSocket:IsOpen:
   0:       LIB_MTHD_CALL: class=System.IO.Net.TCPSecureSocket, method=System.IO.Net.TCPSecureSocket:ReadString:c*,
   0:       LIB_NEW_OBJ_INST: class=System.String
   0:       LIB_MTHD_CALL: class=System.String, method=System.String:New:c*,
   0:     (method: name=System.IO.Net.TCPSecureSocket:ReadString:c*,; id=17; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:Flush:; id=18; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:GetLastError:; id=19; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocket:Close:; id=20; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Net.TCPSocketServer'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocketServer:New:i,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IO.Net.TCPSocketServer:Listen:i,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocketServer:Accept:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocketServer:Close:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSocketServer:GetLastError:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.IO.Net.TCPSecureSocketServer'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=56; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocketServer:New:o.System.String,o.System.String,o.System.String,i,; id=0; num_params: 4; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:     (method: name=System.IO.Net.TCPSecureSocketServer:Listen:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocketServer:Accept:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocketServer:GetIssuer:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocketServer:GetSubject:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocketServer:GetLastError:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.IO.Net.TCPSecureSocketServer:Close:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.Introspection.Class'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=System.Introspection.Class:Instance:o.System.String,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.Class:IsLoaded:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.Class:GetName:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.Class:GetMethods:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.Class:GetMethodNumber:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:   [class: name='System.Introspection.Method'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=40; is_debug=0]
   0:     (method: name=System.Introspection.Method:GetClass:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.Method:GetName:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.Method:GetParameters:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.Method:GetReturn:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='System.Introspection.DataType'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=24; is_debug=0]
   0:     (method: name=System.Introspection.DataType:GetType:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.DataType:GetDimension:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=System.Introspection.DataType:GetClassName:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
=== Loading file: 'C:\Users\objec\Documents\Code\objeck-lang\core\release\deploy64\lib\gen_collect.obl' ===
--- file in: compressed=11951, uncompressed=103432 ---
  -1: bundle name='Collection.Generic'
   0:   [enum: name='Collection.Generic.Cache#Type']
   0:   [enum: name='Collection.Generic.Hash#Capacity']
   0:   [class: name='Collection.Generic.Cache'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=32; is_debug=0]
   0:     (method: name=Collection.Generic.Cache:New:o.Collection.Generic.Cache#Type,i,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Map
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:New:
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareList
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:New:
   0:     (method: name=Collection.Generic.Cache:Insert:o.K,o.S,; id=1; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Find:o.H,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Remove:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:AddFront:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Cache, method=Collection.Generic.Cache:Remove:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:AddFront:o.H,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,
   0:     (method: name=Collection.Generic.Cache:Remove:o.K,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Has:o.K,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Find:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Remove:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,
   0:     (method: name=Collection.Generic.Cache:Remove:; id=3; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:IsEmpty:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Back:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:RemoveBack:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Front:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:RemoveFront:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,
   0:     (method: name=Collection.Generic.Cache:GetKeys:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeys:
   0:     (method: name=Collection.Generic.Cache:GetValues:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetValues:
   0:     (method: name=Collection.Generic.Cache:GetKeyValues:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeyValues:
   0:     (method: name=Collection.Generic.Cache:Find:o.K,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,
   0:     (method: name=Collection.Generic.Cache:Has:o.K,; id=8; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,
   0:     (method: name=Collection.Generic.Cache:Size:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Size:
   0:     (method: name=Collection.Generic.Cache:IsEmpty:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:IsEmpty:
   0:     (method: name=Collection.Generic.Cache:Empty:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Empty:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Empty:
   0:   [class: name='Collection.Generic.Pair'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=Collection.Generic.Pair:New:o.F,o.S,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.Pair:Compare:o.System.Compare,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:     (method: name=Collection.Generic.Pair:HashID:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:GetInstanceID:
   0:     (method: name=Collection.Generic.Pair:GetFirst:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.Pair:SetFirst:o.F,; id=4; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.Pair:GetSecond:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Pair:SetSecond:o.S,; id=6; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='Collection.Generic.Hash'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=32; is_debug=0]
   0:     (method: name=Collection.Generic.Hash:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Hash:New:o.Collection.Generic.Hash#Capacity,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Hash:Insert:o.K,o.V,; id=2; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Hash, method=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Hash, method=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Hash, method=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:HashID:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Abs:i,
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareList
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:New:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.HashPair
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:New:o.System.Compare,o.V,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:AddBack:o.H,
   0:     (method: name=Collection.Generic.Hash:Find:o.K,; id=3; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:HashID:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Abs:i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:More:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Get:
   0:       LIB_OBJ_INST_CAST: class=Collection.Generic.HashPair
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:Compare:o.System.Compare,
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Next:
   0:     (method: name=Collection.Generic.Hash:Capacity:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,l,; id=5; num_params: 2; mem_size=56; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:More:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Get:
   0:       LIB_OBJ_INST_CAST: class=Collection.Generic.HashPair
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:GetKey:
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:HashID:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Abs:i,
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareList
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:New:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Next:
   0:     (method: name=Collection.Generic.Hash:Has:o.K,; id=6; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Hash, method=Collection.Generic.Hash:Find:o.K,
   0:     (method: name=Collection.Generic.Hash:Remove:o.K,; id=7; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:HashID:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Abs:i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:More:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Get:
   0:       LIB_OBJ_INST_CAST: class=Collection.Generic.HashPair
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:Compare:o.System.Compare,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Remove:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Hash, method=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Hash, method=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Hash, method=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Next:
   0:     (method: name=Collection.Generic.Hash:GetKeys:; id=8; num_params: 0; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:More:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Get:
   0:       LIB_OBJ_INST_CAST: class=Collection.Generic.HashPair
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Next:
   0:     (method: name=Collection.Generic.Hash:GetValues:; id=9; num_params: 0; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:More:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Get:
   0:       LIB_OBJ_INST_CAST: class=Collection.Generic.HashPair
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Next:
   0:     (method: name=Collection.Generic.Hash:GetKeyValues:; id=10; num_params: 0; mem_size=48; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:More:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Get:
   0:       LIB_OBJ_INST_CAST: class=Collection.Generic.HashPair
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Pair
   0:       LIB_MTHD_CALL: class=Collection.Generic.Pair, method=Collection.Generic.Pair:New:o.F,o.S,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Next:
   0:     (method: name=Collection.Generic.Hash:Empty:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Hash:IsEmpty:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Hash:Size:; id=13; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,; id=14; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Hash, method=Collection.Generic.Hash:Resize:o.Collection.Generic.Hash#Capacity,l,
   0:   [class: name='Collection.Generic.HashPair'; parent='System.Base'; interface=0'; is_public=0; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=Collection.Generic.HashPair:New:o.System.Compare,o.V,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.HashPair:Compare:o.System.Compare,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:     (method: name=Collection.Generic.HashPair:Clone:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.HashPair
   0:       LIB_MTHD_CALL: class=Collection.Generic.HashPair, method=Collection.Generic.HashPair:New:o.System.Compare,o.V,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.HashPair:HashID:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:HashID:
   0:     (method: name=Collection.Generic.HashPair:GetKey:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.HashPair:Get:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='Collection.Generic.Stack'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=Collection.Generic.Stack:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:     (method: name=Collection.Generic.Stack:Push:o.H,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:     (method: name=Collection.Generic.Stack:Pop:; id=2; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:RemoveBack:
   0:     (method: name=Collection.Generic.Stack:Top:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:     (method: name=Collection.Generic.Stack:Empty:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Empty:
   0:     (method: name=Collection.Generic.Stack:IsEmpty:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:     (method: name=Collection.Generic.Stack:Size:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:   [class: name='Collection.Generic.Queue'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=Collection.Generic.Queue:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.List
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:New:
   0:     (method: name=Collection.Generic.Queue:Add:o.H,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:AddBack:o.H,
   0:     (method: name=Collection.Generic.Queue:Remove:; id=2; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Front:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:RemoveFront:
   0:     (method: name=Collection.Generic.Queue:Head:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Front:
   0:     (method: name=Collection.Generic.Queue:Empty:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Empty:
   0:     (method: name=Collection.Generic.Queue:IsEmpty:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:IsEmpty:
   0:     (method: name=Collection.Generic.Queue:Size:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Size:
   0:   [class: name='Collection.Generic.CompareForwardIterator'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=Collection.Generic.CompareForwardIterator:New:o.Collection.Generic.CompareListNode|H,o.Collection.Generic.CompareList|H,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareForwardIterator:Next:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:     (method: name=Collection.Generic.CompareForwardIterator:More:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareForwardIterator:Remove:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Remove:o.Collection.Generic.CompareListNode|H,
   0:     (method: name=Collection.Generic.CompareForwardIterator:Get:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:   [class: name='Collection.Generic.CompareBackwardIterator'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=Collection.Generic.CompareBackwardIterator:New:o.Collection.Generic.CompareListNode|H,o.Collection.Generic.CompareList|H,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareBackwardIterator:Next:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:     (method: name=Collection.Generic.CompareBackwardIterator:More:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareBackwardIterator:Remove:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Remove:o.Collection.Generic.CompareListNode|H,
   0:     (method: name=Collection.Generic.CompareBackwardIterator:Get:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:   [class: name='Collection.Generic.CompareList'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=32; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:ForwardIterator:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareForwardIterator
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareForwardIterator, method=Collection.Generic.CompareForwardIterator:New:o.Collection.Generic.CompareListNode|H,o.Collection.Generic.CompareList|H,
   0:     (method: name=Collection.Generic.CompareList:BackwardIterator:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareBackwardIterator
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareBackwardIterator, method=Collection.Generic.CompareBackwardIterator:New:o.Collection.Generic.CompareListNode|H,o.Collection.Generic.CompareList|H,
   0:     (method: name=Collection.Generic.CompareList:AddBack:o.H,; id=3; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareListNode
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:New:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetPrevious:o.Collection.Generic.CompareListNode|H,
   0:     (method: name=Collection.Generic.CompareList:RemoveBack:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Forward:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Remove:
   0:     (method: name=Collection.Generic.CompareList:AddFront:o.H,; id=5; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareListNode
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:New:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetPrevious:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,
   0:     (method: name=Collection.Generic.CompareList:RemoveFront:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Remove:
   0:     (method: name=Collection.Generic.CompareList:Rewind:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:Forward:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:Next:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:     (method: name=Collection.Generic.CompareList:Previous:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:     (method: name=Collection.Generic.CompareList:Get:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareList:Map:m.(o.H,)~o.H,; id=12; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareList
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:     (method: name=Collection.Generic.CompareList:Filter:m.(o.H,)~l,; id=13; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareList
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:     (method: name=Collection.Generic.CompareList:Rest:; id=14; num_params: 0; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareList
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:Rewind:
   0:     (method: name=Collection.Generic.CompareList:Has:o.H,; id=15; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:     (method: name=Collection.Generic.CompareList:Find:o.H,; id=16; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:     (method: name=Collection.Generic.CompareList:Insert:o.H,; id=17; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareListNode
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:New:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetPrevious:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetPrevious:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetPrevious:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetPrevious:o.Collection.Generic.CompareListNode|H,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareList, method=Collection.Generic.CompareList:AddBack:o.H,
   0:     (method: name=Collection.Generic.CompareList:Remove:; id=18; num_params: 0; mem_size=0; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:     (method: name=Collection.Generic.CompareList:Remove:o.Collection.Generic.CompareListNode|H,; id=19; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:GetNext:
   0:     (method: name=Collection.Generic.CompareList:IsFront:; id=20; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:IsBack:; id=21; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:More:; id=22; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:Front:; id=23; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareList:Back:; id=24; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareListNode, method=Collection.Generic.CompareListNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareList:Empty:; id=25; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:IsEmpty:; id=26; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareList:Size:; id=27; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='Collection.Generic.CompareListNode'; parent='System.Base'; interface=0'; is_public=0; virtual=0; class_mem_size=0; instance_mem_size=24; is_debug=0]
   0:     (method: name=Collection.Generic.CompareListNode:New:o.H,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareListNode:Set:o.H,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareListNode:Get:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareListNode:SetNext:o.Collection.Generic.CompareListNode|H,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareListNode:GetNext:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareListNode:SetPrevious:o.Collection.Generic.CompareListNode|H,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareListNode:GetPrevious:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='Collection.Generic.ForwardIterator'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=Collection.Generic.ForwardIterator:New:o.Collection.Generic.ListNode|H,o.Collection.Generic.List|H,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.ForwardIterator:Next:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:     (method: name=Collection.Generic.ForwardIterator:More:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.ForwardIterator:Remove:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Remove:o.Collection.Generic.ListNode|H,
   0:     (method: name=Collection.Generic.ForwardIterator:Get:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:   [class: name='Collection.Generic.BackwardIterator'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=Collection.Generic.BackwardIterator:New:o.Collection.Generic.ListNode|H,o.Collection.Generic.List|H,; id=0; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.BackwardIterator:Next:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetPrevious:
   0:     (method: name=Collection.Generic.BackwardIterator:More:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.BackwardIterator:Remove:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Remove:o.Collection.Generic.ListNode|H,
   0:     (method: name=Collection.Generic.BackwardIterator:Get:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:   [class: name='Collection.Generic.List'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=32; is_debug=0]
   0:     (method: name=Collection.Generic.List:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.List:ForwardIterator:; id=1; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.ForwardIterator
   0:       LIB_MTHD_CALL: class=Collection.Generic.ForwardIterator, method=Collection.Generic.ForwardIterator:New:o.Collection.Generic.ListNode|H,o.Collection.Generic.List|H,
   0:     (method: name=Collection.Generic.List:BackwardIterator:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.BackwardIterator
   0:       LIB_MTHD_CALL: class=Collection.Generic.BackwardIterator, method=Collection.Generic.BackwardIterator:New:o.Collection.Generic.ListNode|H,o.Collection.Generic.List|H,
   0:     (method: name=Collection.Generic.List:AddBack:o.H,; id=3; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.ListNode
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:New:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetPrevious:o.Collection.Generic.ListNode|H,
   0:     (method: name=Collection.Generic.List:Map:m.(o.H,)~o.H,; id=4; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.List
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Rewind:
   0:     (method: name=Collection.Generic.List:Each:m.(o.H,)~n,; id=5; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:     (method: name=Collection.Generic.List:Limit:i,; id=6; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.List
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Rewind:
   0:     (method: name=Collection.Generic.List:Filter:m.(o.H,)~l,; id=7; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.List
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Rewind:
   0:     (method: name=Collection.Generic.List:Rest:; id=8; num_params: 0; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.List
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Rewind:
   0:     (method: name=Collection.Generic.List:RemoveBack:; id=9; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Forward:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Remove:
   0:     (method: name=Collection.Generic.List:AddFront:o.H,; id=10; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.ListNode
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:New:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetPrevious:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,
   0:     (method: name=Collection.Generic.List:RemoveFront:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Rewind:
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:Remove:
   0:     (method: name=Collection.Generic.List:Rewind:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.List:Forward:; id=13; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.List:Next:; id=14; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:     (method: name=Collection.Generic.List:Previous:; id=15; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetPrevious:
   0:     (method: name=Collection.Generic.List:Get:; id=16; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:     (method: name=Collection.Generic.List:Insert:o.H,; id=17; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.ListNode
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:New:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetPrevious:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetPrevious:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetPrevious:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetPrevious:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.List, method=Collection.Generic.List:AddBack:o.H,
   0:     (method: name=Collection.Generic.List:Remove:; id=18; num_params: 0; mem_size=0; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:     (method: name=Collection.Generic.List:Remove:o.Collection.Generic.ListNode|H,; id=19; num_params: 1; mem_size=8; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetPrevious:
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:GetNext:
   0:     (method: name=Collection.Generic.List:IsFront:; id=20; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.List:IsBack:; id=21; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.List:More:; id=22; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.List:Front:; id=23; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:     (method: name=Collection.Generic.List:Back:; id=24; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.ListNode, method=Collection.Generic.ListNode:Get:
   0:     (method: name=Collection.Generic.List:Empty:; id=25; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.List:IsEmpty:; id=26; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.List:Size:; id=27; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='Collection.Generic.ListNode'; parent='System.Base'; interface=0'; is_public=0; virtual=0; class_mem_size=0; instance_mem_size=24; is_debug=0]
   0:     (method: name=Collection.Generic.ListNode:New:o.H,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.ListNode:Set:o.H,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.ListNode:Get:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.ListNode:SetNext:o.Collection.Generic.ListNode|H,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.ListNode:GetNext:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.ListNode:SetPrevious:o.Collection.Generic.ListNode|H,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.ListNode:GetPrevious:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:   [class: name='Collection.Generic.Vector'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:New:o.H*,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.Vector:New:o.Collection.Generic.Vector|H,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:ToArray:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:     (method: name=Collection.Generic.Vector:Expand:; id=3; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.Vector:Compress:; id=4; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.Vector:Map:m.(o.H,)~o.H,; id=5; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:o.H*,
   0:     (method: name=Collection.Generic.Vector:Each:m.(o.H,)~n,; id=6; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:Limit:i,; id=7; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:o.H*,
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:     (method: name=Collection.Generic.Vector:Swap:i,i,; id=8; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:AddBack:o.Collection.Generic.Vector|H,; id=9; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:ToArray:
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.Vector:AddBack:o.H,; id=10; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Expand:
   0:     (method: name=Collection.Generic.Vector:RemoveBack:; id=11; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:Remove:i,; id=12; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.Vector:Get:i,; id=13; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:Set:o.H,i,; id=14; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:Empty:; id=15; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:Size:; id=16; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:IsEmpty:; id=17; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Vector:ToArray:; id=18; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:   [class: name='Collection.Generic.CompareVector'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=16; is_debug=0]
   0:     (method: name=Collection.Generic.CompareVector:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareVector:New:o.H*,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.CompareVector:New:o.Collection.Generic.Vector|H,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:ToArray:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:     (method: name=Collection.Generic.CompareVector:Expand:; id=3; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.CompareVector:Compress:; id=4; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.CompareVector:Map:m.(o.H,)~o.H,; id=5; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareVector
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:New:o.H*,
   0:     (method: name=Collection.Generic.CompareVector:Limit:i,; id=6; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareVector
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:New:o.H*,
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareVector
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:New:
   0:     (method: name=Collection.Generic.CompareVector:Each:m.(o.H,)~n,; id=7; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareVector:AddBack:o.Collection.Generic.Vector|H,; id=8; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:ToArray:
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:     (method: name=Collection.Generic.CompareVector:AddBack:o.H,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:Expand:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareVector:RemoveBack:; id=10; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareVector:Remove:i,; id=11; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.$BaseArray, method=System.$BaseArray:Size:o.System.Base*,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareVector:Get:i,; id=12; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareVector:Set:o.H,i,; id=13; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareVector:Empty:; id=14; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareVector:Size:; id=15; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareVector:IsEmpty:; id=16; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.CompareVector:Sort:; id=17; num_params: 0; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,
   0:     (method: name=Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,; id=18; num_params: 4; mem_size=40; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:Merge:i,i,i,o.H*,o.H*,
   0:     (method: name=Collection.Generic.CompareVector:Merge:i,i,i,o.H*,o.H*,; id=19; num_params: 5; mem_size=72; is_native=1; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.CompareVector:Find:o.H,; id=20; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:     (method: name=Collection.Generic.CompareVector:BinarySearch:o.H,; id=21; num_params: 1; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:     (method: name=Collection.Generic.CompareVector:Has:o.H,; id=22; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:     (method: name=Collection.Generic.CompareVector:Filter:m.(o.H,)~l,; id=23; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.CompareVector
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:New:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:AddBack:o.H,
   0:     (method: name=Collection.Generic.CompareVector:ToArray:; id=24; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Runtime, method=System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,
   0:   [class: name='Collection.Generic.Map'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=24; is_debug=0]
   0:     (method: name=Collection.Generic.Map:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,; id=1; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,
   0:     (method: name=Collection.Generic.Map:Size:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Map:IsEmpty:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Map:Empty:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,; id=5; num_params: 1; mem_size=16; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetLevel:i,
   0:     (method: name=Collection.Generic.Map:Zip:o.Collection.Generic.CompareVector|K,o.Collection.Generic.Vector|V,; id=6; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:Size:
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Map
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:Get:i,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,
   0:     (method: name=Collection.Generic.Map:Find:o.K,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,
   0:     (method: name=Collection.Generic.Map:Has:o.K,; id=8; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,
   0:     (method: name=Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,; id=9; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:Get:
   0:     (method: name=Collection.Generic.Map:Each:m.(o.K,o.V,)~n,; id=10; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,
   0:     (method: name=Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,; id=11; num_params: 3; mem_size=40; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Clone
   0:       LIB_MTHD_CALL: class=System.Clone, method=System.Clone:Clone:
   0:       LIB_OBJ_INST_CAST: class=System.Clone
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,
   0:     (method: name=Collection.Generic.Map:GetKeys:; id=12; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,
   0:     (method: name=Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,; id=13; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,
   0:     (method: name=Collection.Generic.Map:GetKeyValues:; id=14; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,
   0:     (method: name=Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,; id=15; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:Get:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Pair
   0:       LIB_MTHD_CALL: class=Collection.Generic.Pair, method=Collection.Generic.Pair:New:o.F,o.S,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,
   0:     (method: name=Collection.Generic.Map:GetValues:; id=16; num_params: 0; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,
   0:     (method: name=Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,; id=17; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:Get:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,
   0:     (method: name=Collection.Generic.Map:Insert:o.K,o.V,; id=18; num_params: 2; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,
   0:     (method: name=Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,; id=19; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.TreeNode
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:New:o.K,o.V,i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,
   0:     (method: name=Collection.Generic.Map:Remove:o.K,; id=20; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,
   0:     (method: name=Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,; id=21; num_params: 2; mem_size=32; is_native=1; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=System.Compare, method=System.Compare:Compare:o.System.Compare,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Successor:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Predecessor:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetKey:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:DecreaseLevel:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,
   0:     (method: name=Collection.Generic.Map:Predecessor:o.Collection.Generic.TreeNode|K|V,; id=22; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:     (method: name=Collection.Generic.Map:Successor:o.Collection.Generic.TreeNode|K|V,; id=23; num_params: 1; mem_size=16; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:     (method: name=Collection.Generic.Map:DecreaseLevel:o.Collection.Generic.TreeNode|K|V,; id=24; num_params: 1; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLeft:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=System.$Int, method=System.$Int:Min:i,i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetLevel:i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetLevel:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:GetRight:
   0:       LIB_MTHD_CALL: class=Collection.Generic.TreeNode, method=Collection.Generic.TreeNode:SetLevel:i,
   0:     (method: name=Collection.Generic.Map:Filter:m.(o.K,)~l,; id=25; num_params: 2; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Map
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeys:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,
   0:   [class: name='Collection.Generic.TreeNode'; parent='System.Base'; interface=0'; is_public=0; virtual=0; class_mem_size=0; instance_mem_size=40; is_debug=0]
   0:     (method: name=Collection.Generic.TreeNode:New:o.K,o.V,i,; id=0; num_params: 3; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.TreeNode:SetKey:o.K,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.TreeNode:GetKey:; id=2; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:     (method: name=Collection.Generic.TreeNode:Get:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.TreeNode:GetLevel:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.TreeNode:SetLevel:i,; id=5; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.TreeNode:GetLeft:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.TreeNode:GetRight:; id=8; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,; id=9; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:   [class: name='Collection.Generic.Set'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=Collection.Generic.Set:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Map
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:New:
   0:     (method: name=Collection.Generic.Set:Insert:o.K,; id=1; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_NEW_OBJ_INST: class=System.Base
   0:       LIB_MTHD_CALL: class=System.Base, method=System.Base:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,
   0:     (method: name=Collection.Generic.Set:Remove:o.K,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,
   0:     (method: name=Collection.Generic.Set:Has:o.K,; id=3; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,
   0:     (method: name=Collection.Generic.Set:GetKeys:; id=4; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeys:
   0:     (method: name=Collection.Generic.Set:Empty:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Empty:
   0:     (method: name=Collection.Generic.Set:IsEmpty:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:IsEmpty:
   0:     (method: name=Collection.Generic.Set:Size:; id=7; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Size:
   0:   [class: name='Collection.Generic.MultiMap'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=Collection.Generic.MultiMap:New:; id=0; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Map
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:New:
   0:     (method: name=Collection.Generic.MultiMap:Insert:o.K,o.V,; id=1; num_params: 2; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:Find:o.K,
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Insert:o.K,o.V,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:     (method: name=Collection.Generic.MultiMap:Find:o.K,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,
   0:     (method: name=Collection.Generic.MultiMap:GetKeys:; id=3; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeys:
   0:     (method: name=Collection.Generic.MultiMap:GetValues:; id=4; num_params: 0; mem_size=48; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.Vector
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetKeys:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Find:o.K,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:AddBack:o.H,
   0:     (method: name=Collection.Generic.MultiMap:IsEmpty:; id=5; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Size:
   0:     (method: name=Collection.Generic.MultiMap:Empty:; id=6; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Empty:
   0:     (method: name=Collection.Generic.MultiMap:Has:o.K,; id=7; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:Find:o.K,
   0:     (method: name=Collection.Generic.MultiMap:Filter:m.(o.K,)~l,; id=8; num_params: 2; mem_size=64; is_native=0; is_debug=0]
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.MultiMap
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:GetKeys:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:Find:o.K,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:Insert:o.K,o.V,
   0:     (method: name=Collection.Generic.MultiMap:Zip:o.Collection.Generic.CompareVector|K,o.Collection.Generic.Vector|V,; id=9; num_params: 2; mem_size=32; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:Size:
   0:       LIB_NEW_OBJ_INST: class=Collection.Generic.MultiMap
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:New:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.CompareVector, method=Collection.Generic.CompareVector:Get:i,
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:Insert:o.K,o.V,
   0:     (method: name=Collection.Generic.MultiMap:Each:m.(o.K,o.V,)~n,; id=10; num_params: 2; mem_size=56; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:GetKeys:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:       LIB_OBJ_INST_CAST: class=System.Clone
   0:       LIB_MTHD_CALL: class=System.Clone, method=System.Clone:Clone:
   0:       LIB_OBJ_INST_CAST: class=System.Clone
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.MultiMap, method=Collection.Generic.MultiMap:Find:o.K,
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Get:i,
   0:     (method: name=Collection.Generic.MultiMap:Remove:o.K,; id=11; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_OBJ_INST_CAST: class=System.Compare
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Remove:o.K,
   0:     (method: name=Collection.Generic.MultiMap:Size:; id=12; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:Size:
   0:     (method: name=Collection.Generic.MultiMap:TotalSize:; id=13; num_params: 0; mem_size=0; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=Collection.Generic.Map, method=Collection.Generic.Map:GetValues:
   0:       LIB_MTHD_CALL: class=Collection.Generic.Vector, method=Collection.Generic.Vector:Size:
   0:   [class: name='Collection.Generic.Func2Composer'; parent='System.Base'; interface=0'; is_public=1; virtual=0; class_mem_size=0; instance_mem_size=8; is_debug=0]
   0:     (method: name=Collection.Generic.Func2Composer:New:o.System.Func2Holder|X|R,; id=0; num_params: 1; mem_size=8; is_native=0; is_debug=0]
   0:     (method: name=Collection.Generic.Func2Composer:Apply:o.X,; id=1; num_params: 1; mem_size=24; is_native=0; is_debug=0]
   0:       LIB_MTHD_CALL: class=System.Func2Holder, method=System.Func2Holder:Get:
   0:     (method: name=Collection.Generic.Func2Composer:Compose:o.System.Func2Holder|Base|X,; id=2; num_params: 1; mem_size=8; is_native=0; is_debug=0]
--------- End Linking ---------
   1: [class: name='Test'; id=0; virtual=false]
   1: [class: name='Test]
   2:   (method: name='Test:Main; parsed='Test:Main:o.String*')
  13:     assignment
  13:       method/function call: class=Collection.Generic.Map; method=New; call_type=-5999
Checking library encoded name: |Collection.Generic.Map:New|
  14:     method/function call: class=map; method=Insert; call_type=-5997
Checking library encoded name: |Collection.Generic.Map:Insert|
  14:       integer literal
  14:         character std::string literal
  14:     method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  14:       integer literal
  14:       method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  14:         integer literal
  15:     method/function call: class=map; method=Insert; call_type=-5997
Checking library encoded name: |Collection.Generic.Map:Insert|
  15:       integer literal
  15:         character std::string literal
  15:     method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  15:       integer literal
  15:       method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  15:         integer literal
  16:     method/function call: class=map; method=Insert; call_type=-5997
Checking library encoded name: |Collection.Generic.Map:Insert|
  16:       integer literal
  16:         character std::string literal
  16:     method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  16:       integer literal
  16:       method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  16:         integer literal
  17:     method/function call: class=map; method=Insert; call_type=-5997
Checking library encoded name: |Collection.Generic.Map:Insert|
  17:       integer literal
  17:         character std::string literal
  17:     method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  17:       integer literal
  17:       method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  17:         integer literal
  18:     method/function call: class=map; method=Insert; call_type=-5997
Checking library encoded name: |Collection.Generic.Map:Insert|
  18:       integer literal
  18:         character std::string literal
  18:     method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  18:       integer literal
  18:       method/function call: class=System.IntHolder; method=New; call_type=-5999
Checking library encoded name: |System.IntHolder:New|
  18:         integer literal
  19:     method/function call: class=map; method=Each; call_type=-5997
Checking library encoded name: |Collection.Generic.Map:Each|
  19:   (method: name='Test:#{L0}#; parsed='Test:#{L0}#:vv')
  19:     return
  19:         character std::string literal
  19:           variable=|Test:#{L0}#:k|
  19:           variable=|Test:#{L0}#:v|
Checking library encoded name: |System.String:PrintLine|
Checking library encoded name: |System.String:PrintLine|
  19:   method/function call: class=Test; method=#{L0}#; call_type=-5997
---------- Intermediate ---------
Class variables (class): name=Test
Class variables (instance): name=Test
Method variables (local): name=Test:Main
	1: OBJ_ARY_PARM: name=Test:Main:args
	2: OBJ_PARM: name=Test:Main:map
Method variables (local): name=Test:#{L0}#
	0: OBJ_PARM: name=Test:#{L0}#:k
	1: OBJ_PARM: name=Test:#{L0}#:v
	2: OBJ_PARM: name=Test:#{L0}#:#_var_concat_#

--------- Optimizing Code ---------
Optimizing method, pass 1: name='Collection.Generic.Pair:Compare:o.System.Compare,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Pair:GetFirst:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Pair:GetSecond:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Pair:HashID:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Pair:New:o.F,o.S,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Pair:SetFirst:o.F,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Pair:SetSecond:o.S,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='Collection.Generic.Pair:Compare:o.System.Compare,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Pair:GetFirst:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Pair:GetSecond:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Pair:HashID:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Pair:New:o.F,o.S,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Pair:SetFirst:o.F,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Pair:SetSecond:o.S,'
  Method inlining...
Optimizing method, pass 1: name='Collection.Generic.Vector:AddBack:o.Collection.Generic.Vector|H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:AddBack:o.H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Compress:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Each:m.(o.H,)~n,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Empty:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Expand:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Get:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:IsEmpty:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Limit:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Map:m.(o.H,)~o.H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:New:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:New:o.Collection.Generic.Vector|H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:New:o.H*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Remove:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:RemoveBack:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Set:o.H,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Size:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:Swap:i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Vector:ToArray:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='Collection.Generic.Vector:AddBack:o.Collection.Generic.Vector|H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:AddBack:o.H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Compress:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Each:m.(o.H,)~n,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Empty:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Expand:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Get:i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:IsEmpty:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Limit:i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Map:m.(o.H,)~o.H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:New:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:New:o.Collection.Generic.Vector|H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:New:o.H*,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Remove:i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:RemoveBack:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Set:o.H,i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Size:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:Swap:i,i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Vector:ToArray:'
  Method inlining...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:AddBack:o.Collection.Generic.Vector|H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:AddBack:o.H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:BinarySearch:o.H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Compress:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Each:m.(o.H,)~n,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Empty:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Expand:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Filter:m.(o.H,)~l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Find:o.H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Get:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Has:o.H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:IsEmpty:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Limit:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Map:m.(o.H,)~o.H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Merge:i,i,i,o.H*,o.H*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:New:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:New:o.Collection.Generic.Vector|H,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:New:o.H*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Remove:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:RemoveBack:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Set:o.H,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Size:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:Sort:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.CompareVector:ToArray:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:AddBack:o.Collection.Generic.Vector|H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:AddBack:o.H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:BinarySearch:o.H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Compress:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Each:m.(o.H,)~n,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Empty:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Expand:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Filter:m.(o.H,)~l,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Find:o.H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Get:i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Has:o.H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:IsEmpty:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Limit:i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Map:m.(o.H,)~o.H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Merge:i,i,i,o.H*,o.H*,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:New:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:New:o.Collection.Generic.Vector|H,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:New:o.H*,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Remove:i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:RemoveBack:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Set:o.H,i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Size:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:Sort:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.CompareVector:ToArray:'
  Method inlining...
Optimizing method, pass 1: name='Collection.Generic.Map:DecreaseLevel:o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Each:m.(o.K,o.V,)~n,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Empty:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Filter:m.(o.K,)~l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Find:o.K,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:GetKeyValues:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:GetKeys:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:GetValues:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Has:o.K,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Insert:o.K,o.V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:IsEmpty:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:New:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Predecessor:o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Remove:o.K,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Size:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Successor:o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.Map:Zip:o.Collection.Generic.CompareVector|K,o.Collection.Generic.Vector|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='Collection.Generic.Map:DecreaseLevel:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Each:m.(o.K,o.V,)~n,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Empty:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Filter:m.(o.K,)~l,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Find:o.K,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:GetKeyValues:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:GetKeys:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:GetValues:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Has:o.K,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Insert:o.K,o.V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:IsEmpty:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:New:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Predecessor:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Remove:o.K,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Size:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Successor:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.Map:Zip:o.Collection.Generic.CompareVector|K,o.Collection.Generic.Vector|V,'
  Method inlining...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:Get:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:GetKey:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:GetLeft:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:GetLevel:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:GetRight:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:New:o.K,o.V,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:SetKey:o.K,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:SetLevel:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:Get:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:GetKey:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:GetLeft:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:GetLevel:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:GetRight:'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:New:o.K,o.V,i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:SetKey:o.K,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:SetLevel:i,'
  Method inlining...
Optimizing method, pass 2: name='Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing method, pass 1: name='System.Number:FloatToString:f,c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Number:IntToString:i,i,c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Number:FloatToString:f,c*,'
  Method inlining...
Optimizing method, pass 2: name='System.Number:IntToString:i,i,c*,'
  Method inlining...
Optimizing method, pass 1: name='System.$Byte:Abs:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:CRC32:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Clear:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Compare:b,b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:CompressBr:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:CompressGzip:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:CompressZlib:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Error:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ErrorLine:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Find:b*,b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Find:b*,b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Find:b*,i,b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Find:b*,i,b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:FindAll:b*,b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:IsNeg:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Max:b,b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Min:b,b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:NotNeg:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Print:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:PrintLine:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Size:b***,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Size:b**,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Size:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Size:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Sort:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:Sort:b*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToBinaryString:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToChar:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToFloat:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToHexString:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToHexString:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToInt:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToString:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToString:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:ToUnicode:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:UncompressBr:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:UncompressGzip:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Byte:UncompressZlib:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.$Byte:Abs:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:CRC32:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Clear:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Compare:b,b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:CompressBr:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:CompressGzip:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:CompressZlib:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Error:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ErrorLine:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Find:b*,b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Find:b*,b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Find:b*,i,b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Find:b*,i,b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:FindAll:b*,b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:IsNeg:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Max:b,b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Min:b,b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:NotNeg:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Print:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:PrintLine:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Size:b***,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Size:b**,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Size:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Size:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Sort:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:Sort:b*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToBinaryString:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToChar:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToFloat:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToHexString:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToHexString:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToInt:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToString:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToString:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:ToUnicode:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:UncompressBr:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:UncompressGzip:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Byte:UncompressZlib:b*,'
  Method inlining...
Optimizing method, pass 1: name='System.$Char:Clear:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Compare:c,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Error:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Error:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ErrorLine:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ErrorLine:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Find:c*,c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Find:c*,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Find:c*,i,c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Find:c*,i,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:FindAll:c*,c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:IsChar:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:IsDigit:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:IsLower:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:IsUpper:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Max:c,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Min:c,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Print:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Print:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:PrintLine:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:PrintLine:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Size:c***,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Size:c**,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Size:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Size:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Sort:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:Sort:c*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ToByte:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ToBytes:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ToFloat:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ToInt:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ToLower:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ToString:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ToString:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Char:ToUpper:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.$Char:Clear:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Compare:c,c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Error:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Error:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ErrorLine:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ErrorLine:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Find:c*,c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Find:c*,c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Find:c*,i,c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Find:c*,i,c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:FindAll:c*,c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:IsChar:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:IsDigit:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:IsLower:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:IsUpper:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Max:c,c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Min:c,c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Print:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Print:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:PrintLine:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:PrintLine:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Size:c***,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Size:c**,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Size:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Size:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Sort:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:Sort:c*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ToByte:b,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ToBytes:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ToFloat:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ToInt:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ToLower:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ToString:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ToString:c,'
  Method inlining...
Optimizing method, pass 2: name='System.$Char:ToUpper:c,'
  Method inlining...
Optimizing method, pass 1: name='System.$Int:Abs:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Clear:i*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Compare:i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:DoubleFactorial:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Error:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ErrorLine:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Factorial:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:IsNeg:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Max:i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:MaxSize:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Min:i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:MinSize:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:NotNeg:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Print:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:PrintLine:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Random:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Random:i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Size:i***,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Size:i**,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Size:i*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Size:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Sort:i*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:Sort:i*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToBinaryString:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToByte:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToChar:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToCommaString:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToFloat:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToHexString:i*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToHexString:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToString:i*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Int:ToString:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.$Int:Abs:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Clear:i*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Compare:i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:DoubleFactorial:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Error:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ErrorLine:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Factorial:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:IsNeg:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Max:i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:MaxSize:'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Min:i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:MinSize:'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:NotNeg:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Print:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:PrintLine:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Random:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Random:i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Size:i***,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Size:i**,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Size:i*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Size:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Sort:i*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:Sort:i*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToBinaryString:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToByte:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToChar:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToCommaString:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToFloat:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToHexString:i*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToHexString:i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToString:i*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Int:ToString:i,'
  Method inlining...
Optimizing method, pass 1: name='System.$Float:Abs:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ArcCos:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ArcSin:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ArcTan2:f,f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ArcTan:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Ceiling:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Clear:f*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Compare:f,f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Cos:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:DoubleFactorial:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:E:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Error:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ErrorLine:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Factorial:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Floor:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Gamma:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:IsNeg:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Log:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Max:f,f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Min:f,f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Mod:f,f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:NotNeg:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Pi:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Power:f,f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Print:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:PrintLine:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Random:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Sin:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Size:f***,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Size:f**,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Size:f*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Size:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Sort:f*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Sort:f*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:SquareRoot:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:Tan:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ToByte:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ToChar:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ToDegrees:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ToInt:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ToRadians:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ToString:f**,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ToString:f*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$Float:ToString:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.$Float:Abs:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ArcCos:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ArcSin:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ArcTan2:f,f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ArcTan:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Ceiling:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Clear:f*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Compare:f,f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Cos:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:DoubleFactorial:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:E:'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Error:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ErrorLine:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Factorial:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Floor:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Gamma:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:IsNeg:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Log:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Max:f,f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Min:f,f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Mod:f,f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:NotNeg:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Pi:'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Power:f,f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Print:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:PrintLine:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Random:'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Sin:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Size:f***,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Size:f**,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Size:f*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Size:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Sort:f*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Sort:f*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:SquareRoot:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:Tan:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ToByte:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ToChar:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ToDegrees:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ToInt:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ToRadians:f,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ToString:f**,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ToString:f*,'
  Method inlining...
Optimizing method, pass 2: name='System.$Float:ToString:f,'
  Method inlining...
Optimizing method, pass 1: name='System.$BaseArray:Size:o.System.Base***,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$BaseArray:Size:o.System.Base**,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.$BaseArray:Size:o.System.Base*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.$BaseArray:Size:o.System.Base***,'
  Method inlining...
Optimizing method, pass 2: name='System.$BaseArray:Size:o.System.Base**,'
  Method inlining...
Optimizing method, pass 2: name='System.$BaseArray:Size:o.System.Base*,'
  Method inlining...
Optimizing method, pass 1: name='System.IntHolder:Add:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Clone:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Compare:o.System.Compare,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Dec:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Div:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Get:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:HashID:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Inc:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Mul:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:New:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:New:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Print:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:PrintLine:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Set:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:Sub:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.IntHolder:ToString:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.IntHolder:Add:i,'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Clone:'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Compare:o.System.Compare,'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Dec:'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Div:i,'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Get:'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:HashID:'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Inc:'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Mul:i,'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:New:'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:New:i,'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Print:'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:PrintLine:'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Set:i,'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:Sub:i,'
  Method inlining...
Optimizing method, pass 2: name='System.IntHolder:ToString:'
  Method inlining...
Optimizing method, pass 1: name='System.Base:GetClass:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Base:GetClassID:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Base:GetInstanceID:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Base:New:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Base:GetClass:'
  Method inlining...
Optimizing method, pass 2: name='System.Base:GetClassID:'
  Method inlining...
Optimizing method, pass 2: name='System.Base:GetInstanceID:'
  Method inlining...
Optimizing method, pass 2: name='System.Base:New:'
  Method inlining...
Optimizing method, pass 1: name='System.Compare:Compare:o.System.Compare,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Compare:HashID:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Compare:Compare:o.System.Compare,'
  Method inlining...
Optimizing method, pass 2: name='System.Compare:HashID:'
  Method inlining...
Optimizing method, pass 1: name='System.Clone:Clone:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Clone:Clone:'
  Method inlining...
Optimizing method, pass 1: name='System.String:Append:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:b*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:b,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:c*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:f,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Append:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Capacity:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Clear:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Clone:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Compare:o.System.Compare,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Compress:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Copy:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Count:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Count:i,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Delete:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Delete:i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:EndsWith:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:EndsWith:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Equals:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Error:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ErrorLine:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Find:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Find:i,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Find:i,o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Find:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:FindAll:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:FindLast:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:FindLast:i,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:First:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Get:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Has:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Has:i,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Has:i,o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Has:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:HashID:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Insert:i,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Insert:i,o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:IsEmpty:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:IsFloat:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:IsInt:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:IsInt:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Last:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Lines:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:New:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:New:b*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:New:b*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:New:c*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:New:c*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:New:c*,l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:New:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Pop:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Print:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:PrintLine:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Remove:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Remove:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:RemoveAll:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:RemoveAll:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Replace:o.System.String,o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ReplaceAll:c,c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ReplaceAll:o.System.String,o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Reverse:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Set:c,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:SetFloatFormat:o.System.Number#Format,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:SetFloatPrecision:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:SetIntFormat:o.System.Number#Format,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Size:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Split:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Split:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:StartsWith:c,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:StartsWith:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:SubString:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:SubString:i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToBool:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToByteArray:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToCharArray:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToFloat:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToInt:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToInt:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToLower:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToString:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:ToUpper:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.String:Trim:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.String:Append:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:b*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:b,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:c*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:f,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:l,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Append:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Capacity:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Clear:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Clone:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Compare:o.System.Compare,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Compress:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Copy:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Count:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Count:i,c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Delete:i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Delete:i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:EndsWith:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:EndsWith:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Equals:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Error:'
  Method inlining...
Optimizing method, pass 2: name='System.String:ErrorLine:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Find:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Find:i,c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Find:i,o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Find:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:FindAll:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:FindLast:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:FindLast:i,c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:First:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Get:i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Has:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Has:i,c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Has:i,o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Has:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:HashID:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Insert:i,c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Insert:i,o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:IsEmpty:'
  Method inlining...
Optimizing method, pass 2: name='System.String:IsFloat:'
  Method inlining...
Optimizing method, pass 2: name='System.String:IsInt:'
  Method inlining...
Optimizing method, pass 2: name='System.String:IsInt:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Last:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Lines:'
  Method inlining...
Optimizing method, pass 2: name='System.String:New:'
  Method inlining...
Optimizing method, pass 2: name='System.String:New:b*,'
  Method inlining...
Optimizing method, pass 2: name='System.String:New:b*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:New:c*,'
  Method inlining...
Optimizing method, pass 2: name='System.String:New:c*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:New:c*,l,'
  Method inlining...
Optimizing method, pass 2: name='System.String:New:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Pop:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Print:'
  Method inlining...
Optimizing method, pass 2: name='System.String:PrintLine:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Remove:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Remove:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:RemoveAll:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:RemoveAll:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Replace:o.System.String,o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:ReplaceAll:c,c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:ReplaceAll:o.System.String,o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Reverse:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Set:c,i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:SetFloatFormat:o.System.Number#Format,'
  Method inlining...
Optimizing method, pass 2: name='System.String:SetFloatPrecision:i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:SetIntFormat:o.System.Number#Format,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Size:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Split:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:Split:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:StartsWith:c,'
  Method inlining...
Optimizing method, pass 2: name='System.String:StartsWith:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.String:SubString:i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:SubString:i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToBool:'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToByteArray:'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToCharArray:'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToFloat:'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToInt:'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToInt:i,'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToLower:'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToString:'
  Method inlining...
Optimizing method, pass 2: name='System.String:ToUpper:'
  Method inlining...
Optimizing method, pass 2: name='System.String:Trim:'
  Method inlining...
Optimizing method, pass 1: name='System.Runtime:Assert:l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:Command:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:CommandOutput:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:Copy:b*,i,b*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:Copy:c*,i,c*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:Copy:f*,i,f*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:Copy:i*,i,i*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:Copy:o.System.Compare*,i,o.System.Compare*,i,i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:Exit:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:GetInstallDir:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:GetPlatform:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:GetProperty:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:GetTempDir:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:GetTime:l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:GetUserDir:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:GetVersion:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:HasProperty:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:RaiseSignal:o.System.Runtime#Signal,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:SetLocale:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:SetProperty:o.System.String,o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Runtime:SetSignal:o.System.Runtime#Signal,m.(i,)~n,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Runtime:Assert:l,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:Command:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:CommandOutput:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:Copy:b*,i,b*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:Copy:c*,i,c*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:Copy:f*,i,f*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:Copy:i*,i,i*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:Copy:o.System.Compare*,i,o.System.Compare*,i,i,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:Exit:i,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:GetInstallDir:'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:GetPlatform:'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:GetProperty:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:GetTempDir:'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:GetTime:l,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:GetUserDir:'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:GetVersion:'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:HasProperty:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:RaiseSignal:o.System.Runtime#Signal,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:SetLocale:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:SetProperty:o.System.String,o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.Runtime:SetSignal:o.System.Runtime#Signal,m.(i,)~n,'
  Method inlining...
Optimizing method, pass 1: name='System.Time.Date:AddDays:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:AddHours:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:AddMinutes:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:AddSeconds:i,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:Clone:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:Compare:o.System.Compare,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetDay:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetHours:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetMinutes:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetMonth:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetMonthName:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetSeconds:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetWeekDay:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetWeekDayName:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:GetYear:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:HashID:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:New:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:New:i,i,i,i,i,i,l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:New:i,i,i,l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:New:l,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:ToShortString:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Time.Date:ToString:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Time.Date:AddDays:i,'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:AddHours:i,'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:AddMinutes:i,'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:AddSeconds:i,'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:Clone:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:Compare:o.System.Compare,'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetDay:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetHours:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetMinutes:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetMonth:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetMonthName:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetSeconds:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetWeekDay:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetWeekDayName:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:GetYear:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:HashID:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:New:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:New:i,i,i,i,i,i,l,'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:New:i,i,i,l,'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:New:l,'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:ToShortString:'
  Method inlining...
Optimizing method, pass 2: name='System.Time.Date:ToString:'
  Method inlining...
Optimizing method, pass 1: name='System.Introspection.Class:GetMethodNumber:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.Class:GetMethods:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.Class:GetName:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.Class:Instance:o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.Class:IsLoaded:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Introspection.Class:GetMethodNumber:'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.Class:GetMethods:'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.Class:GetName:'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.Class:Instance:o.System.String,'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.Class:IsLoaded:'
  Method inlining...
Optimizing method, pass 1: name='System.Introspection.Method:GetClass:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.Method:GetName:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.Method:GetParameters:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.Method:GetReturn:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Introspection.Method:GetClass:'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.Method:GetName:'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.Method:GetParameters:'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.Method:GetReturn:'
  Method inlining...
Optimizing method, pass 1: name='System.Introspection.DataType:GetClassName:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.DataType:GetDimension:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='System.Introspection.DataType:GetType:'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='System.Introspection.DataType:GetClassName:'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.DataType:GetDimension:'
  Method inlining...
Optimizing method, pass 2: name='System.Introspection.DataType:GetType:'
  Method inlining...
Optimizing method, pass 1: name='Test:Main:o.System.String*,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 1: name='Test:#{L0}#:o.System.IntHolder,o.System.String,'
  Clean up jumps...
  Clean up Instructions...
  Getter/setter inlining...
  Dead store...
  Constant propagation...
  Folding integers...
  Folding floats...
  Strength reduction...
  Instruction replacement...
Optimizing method, pass 2: name='Test:Main:o.System.String*,'
  Method inlining...
Optimizing method, pass 2: name='Test:#{L0}#:o.System.IntHolder,o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Pair:Compare:o.System.Compare,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Pair:GetFirst:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Pair:GetSecond:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Pair:HashID:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Pair:New:o.F,o.S,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Pair:SetFirst:o.F,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Pair:SetSecond:o.S,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:AddBack:o.Collection.Generic.Vector|H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:AddBack:o.H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Compress:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Each:m.(o.H,)~n,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Empty:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Expand:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Get:i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:IsEmpty:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Limit:i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Map:m.(o.H,)~o.H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:New:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:New:o.Collection.Generic.Vector|H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:New:o.H*,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Remove:i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:RemoveBack:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Set:o.H,i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Size:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:Swap:i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Vector:ToArray:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:AddBack:o.Collection.Generic.Vector|H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:AddBack:o.H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:BinarySearch:o.H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Compress:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Each:m.(o.H,)~n,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Empty:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Expand:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Filter:m.(o.H,)~l,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Find:o.H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Get:i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Has:o.H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:IsEmpty:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Limit:i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Map:m.(o.H,)~o.H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Merge:i,i,i,o.H*,o.H*,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:New:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:New:o.Collection.Generic.Vector|H,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:New:o.H*,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Remove:i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:RemoveBack:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Set:o.H,i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Size:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:Sort:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.CompareVector:ToArray:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:DecreaseLevel:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Each:m.(o.K,o.V,)~n,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Empty:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Filter:m.(o.K,)~l,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Find:o.K,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:GetKeyValues:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:GetKeys:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:GetValues:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Has:o.K,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Insert:o.K,o.V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:IsEmpty:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:New:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Predecessor:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Remove:o.K,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Size:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Successor:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.Map:Zip:o.Collection.Generic.CompareVector|K,o.Collection.Generic.Vector|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:Get:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:GetKey:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:GetLeft:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:GetLevel:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:GetRight:'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:New:o.K,o.V,i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:SetKey:o.K,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:SetLevel:i,'
  Method inlining...
Optimizing jumps, pass 2: name='Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Number:FloatToString:f,c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Number:IntToString:i,i,c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Abs:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:CRC32:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Clear:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Compare:b,b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:CompressBr:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:CompressGzip:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:CompressZlib:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Error:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ErrorLine:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Find:b*,b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Find:b*,b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Find:b*,i,b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Find:b*,i,b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:FindAll:b*,b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:IsNeg:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Max:b,b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Min:b,b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:NotNeg:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Print:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:PrintLine:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Size:b***,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Size:b**,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Size:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Size:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Sort:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:Sort:b*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToBinaryString:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToChar:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToFloat:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToHexString:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToHexString:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToInt:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToString:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToString:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:ToUnicode:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:UncompressBr:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:UncompressGzip:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Byte:UncompressZlib:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Clear:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Compare:c,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Error:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Error:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ErrorLine:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ErrorLine:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Find:c*,c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Find:c*,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Find:c*,i,c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Find:c*,i,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:FindAll:c*,c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:IsChar:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:IsDigit:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:IsLower:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:IsUpper:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Max:c,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Min:c,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Print:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Print:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:PrintLine:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:PrintLine:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Size:c***,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Size:c**,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Size:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Size:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Sort:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:Sort:c*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ToByte:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ToBytes:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ToFloat:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ToInt:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ToLower:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ToString:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ToString:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Char:ToUpper:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Abs:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Clear:i*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Compare:i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:DoubleFactorial:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Error:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ErrorLine:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Factorial:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:IsNeg:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Max:i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:MaxSize:'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Min:i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:MinSize:'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:NotNeg:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Print:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:PrintLine:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Random:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Random:i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Size:i***,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Size:i**,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Size:i*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Size:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Sort:i*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:Sort:i*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToBinaryString:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToByte:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToChar:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToCommaString:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToFloat:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToHexString:i*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToHexString:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToString:i*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Int:ToString:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Abs:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ArcCos:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ArcSin:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ArcTan2:f,f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ArcTan:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Ceiling:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Clear:f*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Compare:f,f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Cos:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:DoubleFactorial:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:E:'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Error:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ErrorLine:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Factorial:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Floor:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Gamma:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:IsNeg:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Log:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Max:f,f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Min:f,f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Mod:f,f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:NotNeg:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Pi:'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Power:f,f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Print:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:PrintLine:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Random:'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Sin:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Size:f***,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Size:f**,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Size:f*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Size:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Sort:f*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Sort:f*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:SquareRoot:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:Tan:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ToByte:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ToChar:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ToDegrees:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ToInt:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ToRadians:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ToString:f**,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ToString:f*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$Float:ToString:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$BaseArray:Size:o.System.Base***,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$BaseArray:Size:o.System.Base**,'
  Method inlining...
Optimizing jumps, pass 2: name='System.$BaseArray:Size:o.System.Base*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Add:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Clone:'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Compare:o.System.Compare,'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Dec:'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Div:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Get:'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:HashID:'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Inc:'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Mul:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:New:'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:New:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Print:'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:PrintLine:'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Set:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:Sub:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.IntHolder:ToString:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Base:GetClass:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Base:GetClassID:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Base:GetInstanceID:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Base:New:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Compare:Compare:o.System.Compare,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Compare:HashID:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Clone:Clone:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:b*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:b,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:c*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:f,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:l,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Append:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Capacity:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Clear:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Clone:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Compare:o.System.Compare,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Compress:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Copy:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Count:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Count:i,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Delete:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Delete:i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:EndsWith:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:EndsWith:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Equals:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Error:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ErrorLine:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Find:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Find:i,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Find:i,o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Find:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:FindAll:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:FindLast:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:FindLast:i,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:First:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Get:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Has:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Has:i,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Has:i,o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Has:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:HashID:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Insert:i,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Insert:i,o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:IsEmpty:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:IsFloat:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:IsInt:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:IsInt:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Last:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Lines:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:New:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:New:b*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:New:b*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:New:c*,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:New:c*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:New:c*,l,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:New:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Pop:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Print:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:PrintLine:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Remove:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Remove:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:RemoveAll:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:RemoveAll:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Replace:o.System.String,o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ReplaceAll:c,c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ReplaceAll:o.System.String,o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Reverse:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Set:c,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:SetFloatFormat:o.System.Number#Format,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:SetFloatPrecision:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:SetIntFormat:o.System.Number#Format,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Size:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Split:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Split:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:StartsWith:c,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:StartsWith:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:SubString:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:SubString:i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToBool:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToByteArray:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToCharArray:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToFloat:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToInt:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToInt:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToLower:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToString:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:ToUpper:'
  Method inlining...
Optimizing jumps, pass 2: name='System.String:Trim:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Assert:l,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Command:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:CommandOutput:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Copy:b*,i,b*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Copy:c*,i,c*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Copy:f*,i,f*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Copy:i*,i,i*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Copy:o.System.Compare*,i,o.System.Compare*,i,i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:Exit:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:GetInstallDir:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:GetPlatform:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:GetProperty:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:GetTempDir:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:GetTime:l,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:GetUserDir:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:GetVersion:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:HasProperty:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:RaiseSignal:o.System.Runtime#Signal,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:SetLocale:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:SetProperty:o.System.String,o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Runtime:SetSignal:o.System.Runtime#Signal,m.(i,)~n,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:AddDays:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:AddHours:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:AddMinutes:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:AddSeconds:i,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:Clone:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:Compare:o.System.Compare,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetDay:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetHours:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetMinutes:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetMonth:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetMonthName:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetSeconds:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetWeekDay:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetWeekDayName:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:GetYear:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:HashID:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:New:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:New:i,i,i,i,i,i,l,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:New:i,i,i,l,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:New:l,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:ToShortString:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Time.Date:ToString:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Class:GetMethodNumber:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Class:GetMethods:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Class:GetName:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Class:Instance:o.System.String,'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Class:IsLoaded:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Method:GetClass:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Method:GetName:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Method:GetParameters:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.Method:GetReturn:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.DataType:GetClassName:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.DataType:GetDimension:'
  Method inlining...
Optimizing jumps, pass 2: name='System.Introspection.DataType:GetType:'
  Method inlining...
Optimizing jumps, pass 2: name='Test:Main:o.System.String*,'
  Method inlining...
Optimizing jumps, pass 2: name='Test:#{L0}#:o.System.IntHolder,o.System.String,'
  Method inlining...

--------- Emitting Target Code ---------
Program: enums=6, classes=22; start_ids=21,0
=========================================================
Enum: name='Collection.Generic.Cache#Type'; items=2
=========================================================
Item: name='LRU'; id='0
Item: name='MRU'; id='1
=========================================================
Enum: name='Collection.Generic.Hash#Capacity'; items=4
=========================================================
Item: name='EX_LARGE'; id='10211
Item: name='LARGE'; id='2609
Item: name='MEDIUM'; id='331
Item: name='SMALL'; id='83
=========================================================
Enum: name='System.Number#Format'; items=6
=========================================================
Item: name='DEC'; id='-17
Item: name='DEFAULT'; id='-15
Item: name='FIXED'; id='-20
Item: name='HEX'; id='-18
Item: name='OCT'; id='-16
Item: name='SCIENTIFIC'; id='-19
=========================================================
Enum: name='ClassID'; items=0
=========================================================
=========================================================
Enum: name='System.Runtime#Signal'; items=6
=========================================================
Item: name='SIGABRT'; id='-40
Item: name='SIGFPE'; id='-39
Item: name='SIGILL'; id='-38
Item: name='SIGINT'; id='-37
Item: name='SIGSEGV'; id='-36
Item: name='SIGTERM'; id='-35
=========================================================
Enum: name='System.Introspection.DataType#TypeId'; items=7
=========================================================
Item: name='BOOL'; id='-60
Item: name='BYTE'; id='-59
Item: name='CHAR'; id='-58
Item: name='CLASS'; id='-55
Item: name='FLOAT'; id='-56
Item: name='FUNC'; id='-54
Item: name='INT'; id='-57
=========================================================
Class: id=0; name='Collection.Generic.Pair'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=7; class_mem_size=0;
 instance_mem_size=16; is_debug=false

Interfaces:
	System.Compare
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
=========================================================
---------------------------------------------------------
Method: id=0,1; name='Collection.Generic.Pair:Compare:o.System.Compare,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	OBJ_INST_CAST: to='System.Compare', id=13
3:	OBJ_INST_CAST: to='System.Compare', id=13
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=0; local=false
6:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=0,3; name='Collection.Generic.Pair:GetFirst:'; return='o.F';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	OBJ_INST_CAST: to='System.Compare', id=13
3:	RTRN
--
---------------------------------------------------------
Method: id=0,5; name='Collection.Generic.Pair:GetSecond:'; return='o.S';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=0,2; name='Collection.Generic.Pair:HashID:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=0; local=true
4:	RTRN
--
---------------------------------------------------------
Method: id=0,0; name='Collection.Generic.Pair:New:o.F,o.S,'; return='o.Collection.Generic.Pair';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=0; local=true
3:	OBJ_INST_CAST: to='System.Compare', id=13
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=0; local=false
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=1; local=false
9:	LOAD_INST_MEM
10:	RTRN
--
---------------------------------------------------------
Method: id=0,4; name='Collection.Generic.Pair:SetFirst:o.F,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	OBJ_INST_CAST: to='System.Compare', id=13
3:	LOAD_INST_MEM
4:	STOR_INT_VAR: id=0; local=false
5:	RTRN
--
---------------------------------------------------------
Method: id=0,6; name='Collection.Generic.Pair:SetSecond:o.S,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=1; local=false
4:	RTRN
--
=========================================================
Class: id=1; name='Collection.Generic.Vector'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=19; class_mem_size=0;
 instance_mem_size=16; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: INT_PARM
=========================================================
---------------------------------------------------------
Method: id=1,9; name='Collection.Generic.Vector:AddBack:o.Collection.Generic.Vector|H,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=48
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_ARY_PARM
  2: INT_PARM
  3: OBJ_ARY_PARM
  4: OBJ_PARM
  5: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INT_VAR: id=1; local=false
5:	ADD_INT
6:	STOR_INT_VAR: id=2; local=true
7:	LBL
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=0; local=false
10:	LOAD_INST_MEM
11:	STOR_INT_VAR: id=4; local=true
12:	STOR_INT_VAR: id=5; local=true
13:	LOAD_INT_VAR: id=5; local=true
14:	LOAD_ARY_SIZE
15:	LOAD_INT_VAR: id=2; local=true
16:	GTR_EQL_INT
17:	JMP: index=36, conditional=false
18:	LOAD_INT_LIT: value=1
19:	LOAD_INT_VAR: id=2; local=true
20:	SHL_INT
21:	NEW_INT_ARY: dimension=1
22:	COPY_INT_VAR: id=1; local=true
23:	LOAD_INT_LIT: value=0
24:	LOAD_INST_MEM
25:	LOAD_INT_VAR: id=0; local=false
26:	LOAD_INT_LIT: value=0
27:	LOAD_INST_MEM
28:	LOAD_INT_VAR: id=1; local=false
29:	LOAD_INST_MEM
30:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
31:	POP_INT
32:	LOAD_INT_VAR: id=1; local=true
33:	LOAD_INST_MEM
34:	STOR_INT_VAR: id=0; local=false
35:	LBL
36:	LOAD_INT_VAR: id=0; local=true
37:	MTHD_CALL: method='Collection.Generic.Vector:ToArray:'; native=false
38:	STOR_INT_VAR: id=3; local=true
39:	LOAD_INST_MEM
40:	LOAD_INT_VAR: id=0; local=false
41:	LOAD_INST_MEM
42:	LOAD_INT_VAR: id=1; local=false
43:	LOAD_INT_VAR: id=3; local=true
44:	LOAD_INT_LIT: value=0
45:	LOAD_INT_VAR: id=3; local=true
46:	LOAD_INST_MEM
47:	MTHD_CALL: method='System.$BaseArray:Size:o.System.Base*,'; native=false
48:	LOAD_INST_MEM
49:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
50:	POP_INT
51:	LOAD_INT_VAR: id=2; local=true
52:	LOAD_INST_MEM
53:	STOR_INT_VAR: id=1; local=false
54:	RTRN
--
---------------------------------------------------------
Method: id=1,10; name='Collection.Generic.Vector:AddBack:o.H,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	MTHD_CALL: method='Collection.Generic.Vector:Expand:'; native=false
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=1; local=false
6:	LOAD_INST_MEM
7:	LOAD_INT_VAR: id=0; local=false
8:	STOR_INT_ARY_ELM: dimension=1; local=false
9:	LOAD_INT_LIT: value=1
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=1; local=false
12:	ADD_INT
13:	LOAD_INST_MEM
14:	STOR_INT_VAR: id=1; local=false
15:	RTRN
--
---------------------------------------------------------
Method: id=1,4; name='Collection.Generic.Vector:Compress:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	NEW_INT_ARY: dimension=1
3:	COPY_INT_VAR: id=0; local=true
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=0; local=false
7:	LOAD_INT_LIT: value=0
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=1; local=false
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
12:	POP_INT
13:	LOAD_INT_VAR: id=0; local=true
14:	LOAD_INST_MEM
15:	STOR_INT_VAR: id=0; local=false
16:	RTRN
--
---------------------------------------------------------
Method: id=1,6; name='Collection.Generic.Vector:Each:m.(o.H,)~n,'; return='o.Collection.Generic.Vector|H';
  blocks=1; is_function=false; num_params=2; mem_size=24
---------------------------------------------------------
memory types:
  0: FUNC_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	STOR_INT_VAR: id=2; local=true
3:	LBL
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=1; local=false
6:	LOAD_INT_VAR: id=2; local=true
7:	LES_INT
8:	JMP: index=22, conditional=false
9:	LOAD_INT_VAR: id=2; local=true
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=0; local=false
12:	LOAD_INT_ARY_ELM: dimension=1; local=false
13:	LOAD_FUNC_VAR: id=0; local=true
14:	DYN_MTHD_CALL num_params=114:	; rtrn_type=Nil
15:	LBL
16:	LOAD_INT_LIT: value=1
17:	LOAD_INT_VAR: id=2; local=true
18:	ADD_INT
19:	STOR_INT_VAR: id=2; local=true
20:	JMP: index=4
21:	LBL
22:	LOAD_INST_MEM
23:	RTRN
--
---------------------------------------------------------
Method: id=1,15; name='Collection.Generic.Vector:Empty:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=8
1:	NEW_INT_ARY: dimension=1
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=0; local=false
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=1; local=false
7:	RTRN
--
---------------------------------------------------------
Method: id=1,3; name='Collection.Generic.Vector:Expand:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: OBJ_PARM
  2: OBJ_ARY_PARM
---------------------------------------------------------
0:	LBL
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=false
3:	LOAD_INST_MEM
4:	STOR_INT_VAR: id=1; local=true
5:	STOR_INT_VAR: id=2; local=true
6:	LOAD_INT_VAR: id=2; local=true
7:	LOAD_ARY_SIZE
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=1; local=false
10:	GTR_EQL_INT
11:	JMP: index=31, conditional=false
12:	LOAD_INT_LIT: value=1
13:	LOAD_INST_MEM
14:	LOAD_INT_VAR: id=1; local=false
15:	SHL_INT
16:	NEW_INT_ARY: dimension=1
17:	COPY_INT_VAR: id=0; local=true
18:	LOAD_INT_LIT: value=0
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=0; local=false
21:	LOAD_INT_LIT: value=0
22:	LOAD_INST_MEM
23:	LOAD_INT_VAR: id=1; local=false
24:	LOAD_INST_MEM
25:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
26:	POP_INT
27:	LOAD_INT_VAR: id=0; local=true
28:	LOAD_INST_MEM
29:	STOR_INT_VAR: id=0; local=false
30:	LBL
31:	RTRN
--
---------------------------------------------------------
Method: id=1,13; name='Collection.Generic.Vector:Get:i,'; return='o.H';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=16
9:	LBL
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=1; local=false
12:	LOAD_INT_VAR: id=1; local=true
13:	LES_INT
14:	STOR_INT_VAR: id=0; local=true
15:	LBL
16:	LOAD_INT_VAR: id=0; local=true
17:	JMP: index=24, conditional=false
18:	LOAD_INT_VAR: id=1; local=true
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=0; local=false
21:	LOAD_INT_ARY_ELM: dimension=1; local=false
22:	RTRN
23:	LBL
24:	LOAD_INT_LIT: value=0
25:	RTRN
--
---------------------------------------------------------
Method: id=1,17; name='Collection.Generic.Vector:IsEmpty:'; return='l';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	EQL_INT
4:	RTRN
--
---------------------------------------------------------
Method: id=1,7; name='Collection.Generic.Vector:Limit:i,'; return='o.Collection.Generic.Vector|H';
  blocks=1; is_function=false; num_params=1; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	NEW_INT_ARY: dimension=1
4:	STOR_INT_VAR: id=3; local=true
5:	LBL
6:	LOAD_INT_LIT: value=-1
7:	LOAD_INT_VAR: id=1; local=true
8:	GTR_INT
9:	JMP: index=14, conditional=true
10:	LOAD_INT_LIT: value=0
11:	STOR_INT_VAR: id=0; local=true
12:	JMP: index=20
13:	LBL
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=1; local=false
16:	LOAD_INT_VAR: id=1; local=true
17:	LES_INT
18:	STOR_INT_VAR: id=0; local=true
19:	LBL
20:	LOAD_INT_VAR: id=0; local=true
21:	JMP: index=51, conditional=false
22:	LOAD_INT_VAR: id=1; local=true
23:	NEW_INT_ARY: dimension=1
24:	STOR_INT_VAR: id=3; local=true
25:	LOAD_INT_LIT: value=0
26:	STOR_INT_VAR: id=2; local=true
27:	LBL
28:	LOAD_INT_VAR: id=1; local=true
29:	LOAD_INT_VAR: id=2; local=true
30:	LES_INT
31:	JMP: index=46, conditional=false
32:	LOAD_INT_VAR: id=2; local=true
33:	LOAD_INST_MEM
34:	LOAD_INT_VAR: id=0; local=false
35:	LOAD_INT_ARY_ELM: dimension=1; local=false
36:	LOAD_INT_VAR: id=2; local=true
37:	LOAD_INT_VAR: id=3; local=true
38:	STOR_INT_ARY_ELM: dimension=1; local=true
39:	LBL
40:	LOAD_INT_LIT: value=1
41:	LOAD_INT_VAR: id=2; local=true
42:	ADD_INT
43:	STOR_INT_VAR: id=2; local=true
44:	JMP: index=28
45:	LBL
46:	LOAD_INT_VAR: id=3; local=true
47:	NEW_OBJ_INST: class='Collection.Generic.Vector'
48:	MTHD_CALL: method='Collection.Generic.Vector:New:o.H*,'; native=false
49:	RTRN
50:	LBL
51:	NEW_OBJ_INST: class='Collection.Generic.Vector'
52:	MTHD_CALL: method='Collection.Generic.Vector:New:'; native=false
53:	RTRN
--
---------------------------------------------------------
Method: id=1,5; name='Collection.Generic.Vector:Map:m.(o.H,)~o.H,'; return='o.Collection.Generic.Vector|H';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: FUNC_PARM
  1: OBJ_ARY_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	NEW_INT_ARY: dimension=1
4:	STOR_INT_VAR: id=2; local=true
5:	LOAD_INT_LIT: value=0
6:	STOR_INT_VAR: id=3; local=true
7:	LBL
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=1; local=false
10:	LOAD_INT_VAR: id=3; local=true
11:	LES_INT
12:	JMP: index=29, conditional=false
13:	LOAD_INT_VAR: id=3; local=true
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=0; local=false
16:	LOAD_INT_ARY_ELM: dimension=1; local=false
17:	LOAD_FUNC_VAR: id=0; local=true
18:	DYN_MTHD_CALL num_params=118:	; rtrn_type=Int
19:	LOAD_INT_VAR: id=3; local=true
20:	LOAD_INT_VAR: id=2; local=true
21:	STOR_INT_ARY_ELM: dimension=1; local=true
22:	LBL
23:	LOAD_INT_LIT: value=1
24:	LOAD_INT_VAR: id=3; local=true
25:	ADD_INT
26:	STOR_INT_VAR: id=3; local=true
27:	JMP: index=8
28:	LBL
29:	LOAD_INT_VAR: id=2; local=true
30:	NEW_OBJ_INST: class='Collection.Generic.Vector'
31:	MTHD_CALL: method='Collection.Generic.Vector:New:o.H*,'; native=false
32:	RTRN
--
---------------------------------------------------------
Method: id=1,0; name='Collection.Generic.Vector:New:'; return='o.Collection.Generic.Vector';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=8
1:	NEW_INT_ARY: dimension=1
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=0; local=false
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=1; local=false
7:	LOAD_INST_MEM
8:	RTRN
--
---------------------------------------------------------
Method: id=1,2; name='Collection.Generic.Vector:New:o.Collection.Generic.Vector|H,'; return='o.Collection.Generic.Vector';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	MTHD_CALL: method='Collection.Generic.Vector:ToArray:'; native=false
3:	LOAD_INST_MEM
4:	STOR_INT_VAR: id=0; local=false
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=false
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=1; local=false
9:	LOAD_INST_MEM
10:	RTRN
--
---------------------------------------------------------
Method: id=1,1; name='Collection.Generic.Vector:New:o.H*,'; return='o.Collection.Generic.Vector';
  blocks=1; is_function=false; num_params=1; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: OBJ_PARM
  2: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=2; local=true
5:	LOAD_INT_VAR: id=2; local=true
6:	LOAD_ARY_SIZE
7:	NEW_INT_ARY: dimension=1
8:	LOAD_INST_MEM
9:	STOR_INT_VAR: id=0; local=false
10:	LOAD_INT_VAR: id=0; local=true
11:	LOAD_INST_MEM
12:	MTHD_CALL: method='System.$BaseArray:Size:o.System.Base*,'; native=false
13:	LOAD_INST_MEM
14:	STOR_INT_VAR: id=1; local=false
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=0; local=false
17:	LOAD_INT_LIT: value=0
18:	LOAD_INT_VAR: id=0; local=true
19:	LOAD_INT_LIT: value=0
20:	LOAD_INST_MEM
21:	LOAD_INT_VAR: id=1; local=false
22:	LOAD_INST_MEM
23:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
24:	POP_INT
25:	LOAD_INST_MEM
26:	RTRN
--
---------------------------------------------------------
Method: id=1,12; name='Collection.Generic.Vector:Remove:i,'; return='o.H';
  blocks=1; is_function=false; num_params=1; mem_size=40
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_ARY_PARM
  3: OBJ_PARM
  4: OBJ_PARM
  5: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=16
9:	LBL
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=1; local=false
12:	LOAD_INT_VAR: id=1; local=true
13:	LES_INT
14:	STOR_INT_VAR: id=0; local=true
15:	LBL
16:	LOAD_INT_VAR: id=0; local=true
17:	JMP: index=68, conditional=false
18:	LOAD_INST_MEM
19:	LOAD_INT_VAR: id=0; local=false
20:	LOAD_INST_MEM
21:	STOR_INT_VAR: id=4; local=true
22:	STOR_INT_VAR: id=5; local=true
23:	LOAD_INT_VAR: id=5; local=true
24:	LOAD_ARY_SIZE
25:	NEW_INT_ARY: dimension=1
26:	COPY_INT_VAR: id=2; local=true
27:	LOAD_INT_LIT: value=0
28:	LOAD_INST_MEM
29:	LOAD_INT_VAR: id=0; local=false
30:	LOAD_INT_LIT: value=0
31:	LOAD_INT_VAR: id=1; local=true
32:	LOAD_INST_MEM
33:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
34:	POP_INT
35:	LOAD_INT_VAR: id=2; local=true
36:	LOAD_INT_VAR: id=1; local=true
37:	LOAD_INST_MEM
38:	LOAD_INT_VAR: id=0; local=false
39:	LOAD_INT_LIT: value=1
40:	LOAD_INT_VAR: id=1; local=true
41:	ADD_INT
42:	LOAD_INT_LIT: value=1
43:	LOAD_INT_VAR: id=1; local=true
44:	LOAD_INST_MEM
45:	LOAD_INT_VAR: id=1; local=false
46:	SUB_INT
47:	SUB_INT
48:	LOAD_INST_MEM
49:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
50:	POP_INT
51:	LOAD_INT_VAR: id=1; local=true
52:	LOAD_INST_MEM
53:	LOAD_INT_VAR: id=0; local=false
54:	LOAD_INT_ARY_ELM: dimension=1; local=false
55:	STOR_INT_VAR: id=3; local=true
56:	LOAD_INT_VAR: id=2; local=true
57:	LOAD_INST_MEM
58:	STOR_INT_VAR: id=0; local=false
59:	LOAD_INT_LIT: value=1
60:	LOAD_INST_MEM
61:	LOAD_INT_VAR: id=1; local=false
62:	SUB_INT
63:	LOAD_INST_MEM
64:	STOR_INT_VAR: id=1; local=false
65:	LOAD_INT_VAR: id=3; local=true
66:	RTRN
67:	LBL
68:	LOAD_INT_LIT: value=0
69:	RTRN
--
---------------------------------------------------------
Method: id=1,11; name='Collection.Generic.Vector:RemoveBack:'; return='o.H';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LBL
1:	LOAD_INT_LIT: value=0
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=1; local=false
4:	GTR_INT
5:	JMP: index=19, conditional=false
6:	LOAD_INT_LIT: value=1
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=1; local=false
9:	SUB_INT
10:	LOAD_INST_MEM
11:	STOR_INT_VAR: id=1; local=false
12:	LOAD_INST_MEM
13:	LOAD_INT_VAR: id=1; local=false
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=0; local=false
16:	LOAD_INT_ARY_ELM: dimension=1; local=false
17:	RTRN
18:	LBL
19:	LOAD_INT_LIT: value=0
20:	RTRN
--
---------------------------------------------------------
Method: id=1,14; name='Collection.Generic.Vector:Set:o.H,i,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INT_LIT: value=-1
4:	LOAD_INT_VAR: id=2; local=true
5:	GTR_INT
6:	JMP: index=11, conditional=true
7:	LOAD_INT_LIT: value=0
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=17
10:	LBL
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=1; local=false
13:	LOAD_INT_VAR: id=2; local=true
14:	LES_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=27, conditional=false
19:	LOAD_INT_VAR: id=1; local=true
20:	LOAD_INT_VAR: id=2; local=true
21:	LOAD_INST_MEM
22:	LOAD_INT_VAR: id=0; local=false
23:	STOR_INT_ARY_ELM: dimension=1; local=false
24:	LOAD_INT_LIT: value=1
25:	RTRN
26:	LBL
27:	LOAD_INT_LIT: value=0
28:	RTRN
--
---------------------------------------------------------
Method: id=1,16; name='Collection.Generic.Vector:Size:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=1,8; name='Collection.Generic.Vector:Swap:i,i,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INT_LIT: value=-1
4:	LOAD_INT_VAR: id=1; local=true
5:	LES_INT
6:	JMP: index=11, conditional=false
7:	LOAD_INT_LIT: value=1
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=36
10:	LBL
11:	LOAD_INT_LIT: value=-1
12:	LOAD_INT_VAR: id=2; local=true
13:	LES_INT
14:	JMP: index=19, conditional=false
15:	LOAD_INT_LIT: value=1
16:	STOR_INT_VAR: id=0; local=true
17:	JMP: index=35
18:	LBL
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=1; local=false
21:	LOAD_INT_VAR: id=1; local=true
22:	GTR_INT
23:	JMP: index=28, conditional=false
24:	LOAD_INT_LIT: value=1
25:	STOR_INT_VAR: id=0; local=true
26:	JMP: index=34
27:	LBL
28:	LOAD_INST_MEM
29:	LOAD_INT_VAR: id=1; local=false
30:	LOAD_INT_VAR: id=2; local=true
31:	GTR_INT
32:	STOR_INT_VAR: id=0; local=true
33:	LBL
34:	LBL
35:	LBL
36:	LOAD_INT_VAR: id=0; local=true
37:	JMP: index=41, conditional=false
38:	LOAD_INT_LIT: value=0
39:	RTRN
40:	LBL
41:	LOAD_INT_VAR: id=1; local=true
42:	LOAD_INST_MEM
43:	LOAD_INT_VAR: id=0; local=false
44:	LOAD_INT_ARY_ELM: dimension=1; local=false
45:	STOR_INT_VAR: id=3; local=true
46:	LOAD_INT_VAR: id=2; local=true
47:	LOAD_INST_MEM
48:	LOAD_INT_VAR: id=0; local=false
49:	LOAD_INT_ARY_ELM: dimension=1; local=false
50:	LOAD_INT_VAR: id=1; local=true
51:	LOAD_INST_MEM
52:	LOAD_INT_VAR: id=0; local=false
53:	STOR_INT_ARY_ELM: dimension=1; local=false
54:	LOAD_INT_VAR: id=3; local=true
55:	LOAD_INT_VAR: id=2; local=true
56:	LOAD_INST_MEM
57:	LOAD_INT_VAR: id=0; local=false
58:	STOR_INT_ARY_ELM: dimension=1; local=false
59:	LOAD_INT_LIT: value=1
60:	RTRN
--
---------------------------------------------------------
Method: id=1,18; name='Collection.Generic.Vector:ToArray:'; return='o.H*';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	NEW_INT_ARY: dimension=1
3:	COPY_INT_VAR: id=0; local=true
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=0; local=false
7:	LOAD_INT_LIT: value=0
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=1; local=false
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
12:	POP_INT
13:	LOAD_INT_VAR: id=0; local=true
14:	RTRN
--
=========================================================
Class: id=2; name='Collection.Generic.CompareVector'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=25; class_mem_size=0;
 instance_mem_size=16; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: INT_PARM
=========================================================
---------------------------------------------------------
Method: id=2,8; name='Collection.Generic.CompareVector:AddBack:o.Collection.Generic.Vector|H,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=48
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_ARY_PARM
  2: INT_PARM
  3: OBJ_ARY_PARM
  4: OBJ_PARM
  5: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INT_VAR: id=1; local=false
5:	ADD_INT
6:	STOR_INT_VAR: id=2; local=true
7:	LBL
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=0; local=false
10:	LOAD_INST_MEM
11:	STOR_INT_VAR: id=4; local=true
12:	STOR_INT_VAR: id=5; local=true
13:	LOAD_INT_VAR: id=5; local=true
14:	LOAD_ARY_SIZE
15:	LOAD_INT_VAR: id=2; local=true
16:	GTR_EQL_INT
17:	JMP: index=36, conditional=false
18:	LOAD_INT_LIT: value=1
19:	LOAD_INT_VAR: id=2; local=true
20:	SHL_INT
21:	NEW_INT_ARY: dimension=1
22:	COPY_INT_VAR: id=1; local=true
23:	LOAD_INT_LIT: value=0
24:	LOAD_INST_MEM
25:	LOAD_INT_VAR: id=0; local=false
26:	LOAD_INT_LIT: value=0
27:	LOAD_INST_MEM
28:	LOAD_INT_VAR: id=1; local=false
29:	LOAD_INST_MEM
30:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
31:	POP_INT
32:	LOAD_INT_VAR: id=1; local=true
33:	LOAD_INST_MEM
34:	STOR_INT_VAR: id=0; local=false
35:	LBL
36:	LOAD_INT_VAR: id=0; local=true
37:	MTHD_CALL: method='Collection.Generic.Vector:ToArray:'; native=false
38:	STOR_INT_VAR: id=3; local=true
39:	LOAD_INST_MEM
40:	LOAD_INT_VAR: id=0; local=false
41:	LOAD_INST_MEM
42:	LOAD_INT_VAR: id=1; local=false
43:	LOAD_INT_VAR: id=3; local=true
44:	LOAD_INT_LIT: value=0
45:	LOAD_INT_VAR: id=3; local=true
46:	LOAD_INST_MEM
47:	MTHD_CALL: method='System.$BaseArray:Size:o.System.Base*,'; native=false
48:	LOAD_INST_MEM
49:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
50:	POP_INT
51:	LOAD_INT_VAR: id=2; local=true
52:	LOAD_INST_MEM
53:	STOR_INT_VAR: id=1; local=false
54:	RTRN
--
---------------------------------------------------------
Method: id=2,9; name='Collection.Generic.CompareVector:AddBack:o.H,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	MTHD_CALL: method='Collection.Generic.CompareVector:Expand:'; native=false
3:	LOAD_INT_VAR: id=0; local=true
4:	OBJ_INST_CAST: to='System.Compare', id=13
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=1; local=false
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=0; local=false
9:	STOR_INT_ARY_ELM: dimension=1; local=false
10:	LOAD_INT_LIT: value=1
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=1; local=false
13:	ADD_INT
14:	LOAD_INST_MEM
15:	STOR_INT_VAR: id=1; local=false
16:	RTRN
--
---------------------------------------------------------
Method: id=2,21; name='Collection.Generic.CompareVector:BinarySearch:o.H,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=32
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	STOR_INT_VAR: id=1; local=true
3:	LOAD_INT_LIT: value=1
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=1; local=false
6:	SUB_INT
7:	STOR_INT_VAR: id=2; local=true
8:	LBL
9:	LOAD_INT_VAR: id=2; local=true
10:	LOAD_INT_VAR: id=1; local=true
11:	LES_EQL_INT
12:	JMP: index=59, conditional=false
13:	LOAD_INT_LIT: value=1
14:	LOAD_INT_VAR: id=2; local=true
15:	LOAD_INT_VAR: id=1; local=true
16:	ADD_INT
17:	SHR_INT
18:	STOR_INT_VAR: id=3; local=true
19:	LBL
20:	LOAD_INT_LIT: value=0
21:	LOAD_INT_VAR: id=0; local=true
22:	OBJ_INST_CAST: to='System.Compare', id=13
23:	OBJ_INST_CAST: to='System.Compare', id=13
24:	LOAD_INT_VAR: id=3; local=true
25:	LOAD_INST_MEM
26:	LOAD_INT_VAR: id=0; local=false
27:	LOAD_INT_ARY_ELM: dimension=1; local=false
28:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
29:	GTR_INT
30:	JMP: index=37, conditional=false
31:	LOAD_INT_LIT: value=1
32:	LOAD_INT_VAR: id=3; local=true
33:	SUB_INT
34:	STOR_INT_VAR: id=2; local=true
35:	JMP: index=57
36:	LBL
37:	LOAD_INT_LIT: value=0
38:	LOAD_INT_VAR: id=0; local=true
39:	OBJ_INST_CAST: to='System.Compare', id=13
40:	OBJ_INST_CAST: to='System.Compare', id=13
41:	LOAD_INT_VAR: id=3; local=true
42:	LOAD_INST_MEM
43:	LOAD_INT_VAR: id=0; local=false
44:	LOAD_INT_ARY_ELM: dimension=1; local=false
45:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
46:	LES_INT
47:	JMP: index=54, conditional=false
48:	LOAD_INT_LIT: value=1
49:	LOAD_INT_VAR: id=3; local=true
50:	ADD_INT
51:	STOR_INT_VAR: id=1; local=true
52:	JMP: index=57
53:	LBL
54:	LOAD_INT_VAR: id=3; local=true
55:	RTRN
56:	LBL
57:	JMP: index=9
58:	LBL
59:	LOAD_INT_LIT: value=-1
60:	RTRN
--
---------------------------------------------------------
Method: id=2,4; name='Collection.Generic.CompareVector:Compress:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	NEW_INT_ARY: dimension=1
3:	COPY_INT_VAR: id=0; local=true
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=0; local=false
7:	LOAD_INT_LIT: value=0
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=1; local=false
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
12:	POP_INT
13:	LOAD_INT_VAR: id=0; local=true
14:	LOAD_INST_MEM
15:	STOR_INT_VAR: id=0; local=false
16:	RTRN
--
---------------------------------------------------------
Method: id=2,7; name='Collection.Generic.CompareVector:Each:m.(o.H,)~n,'; return='o.Collection.Generic.CompareVector|H';
  blocks=1; is_function=false; num_params=2; mem_size=24
---------------------------------------------------------
memory types:
  0: FUNC_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	STOR_INT_VAR: id=2; local=true
3:	LBL
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=1; local=false
6:	LOAD_INT_VAR: id=2; local=true
7:	LES_INT
8:	JMP: index=22, conditional=false
9:	LOAD_INT_VAR: id=2; local=true
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=0; local=false
12:	LOAD_INT_ARY_ELM: dimension=1; local=false
13:	LOAD_FUNC_VAR: id=0; local=true
14:	DYN_MTHD_CALL num_params=114:	; rtrn_type=Nil
15:	LBL
16:	LOAD_INT_LIT: value=1
17:	LOAD_INT_VAR: id=2; local=true
18:	ADD_INT
19:	STOR_INT_VAR: id=2; local=true
20:	JMP: index=4
21:	LBL
22:	LOAD_INST_MEM
23:	RTRN
--
---------------------------------------------------------
Method: id=2,14; name='Collection.Generic.CompareVector:Empty:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=8
1:	NEW_INT_ARY: dimension=1
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=0; local=false
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=1; local=false
7:	RTRN
--
---------------------------------------------------------
Method: id=2,3; name='Collection.Generic.CompareVector:Expand:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: OBJ_PARM
  2: OBJ_ARY_PARM
---------------------------------------------------------
0:	LBL
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=false
3:	LOAD_INST_MEM
4:	STOR_INT_VAR: id=1; local=true
5:	STOR_INT_VAR: id=2; local=true
6:	LOAD_INT_VAR: id=2; local=true
7:	LOAD_ARY_SIZE
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=1; local=false
10:	GTR_EQL_INT
11:	JMP: index=31, conditional=false
12:	LOAD_INT_LIT: value=1
13:	LOAD_INST_MEM
14:	LOAD_INT_VAR: id=1; local=false
15:	SHL_INT
16:	NEW_INT_ARY: dimension=1
17:	COPY_INT_VAR: id=0; local=true
18:	LOAD_INT_LIT: value=0
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=0; local=false
21:	LOAD_INT_LIT: value=0
22:	LOAD_INST_MEM
23:	LOAD_INT_VAR: id=1; local=false
24:	LOAD_INST_MEM
25:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
26:	POP_INT
27:	LOAD_INT_VAR: id=0; local=true
28:	LOAD_INST_MEM
29:	STOR_INT_VAR: id=0; local=false
30:	LBL
31:	RTRN
--
---------------------------------------------------------
Method: id=2,23; name='Collection.Generic.CompareVector:Filter:m.(o.H,)~l,'; return='o.Collection.Generic.CompareVector|H';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: FUNC_PARM
  1: INT_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=0; local=true
1:	NEW_OBJ_INST: class='Collection.Generic.CompareVector'
2:	MTHD_CALL: method='Collection.Generic.CompareVector:New:'; native=false
3:	STOR_INT_VAR: id=3; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=2; local=true
6:	LBL
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=1; local=false
9:	LOAD_INT_VAR: id=2; local=true
10:	LES_INT
11:	JMP: index=36, conditional=false
12:	LBL
13:	LOAD_INT_VAR: id=2; local=true
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=0; local=false
16:	LOAD_INT_ARY_ELM: dimension=1; local=false
17:	LOAD_FUNC_VAR: id=0; local=true
18:	DYN_MTHD_CALL num_params=118:	; rtrn_type=Int
19:	JMP: index=29, conditional=false
20:	LOAD_INT_VAR: id=2; local=true
21:	LOAD_INST_MEM
22:	LOAD_INT_VAR: id=0; local=false
23:	LOAD_INT_ARY_ELM: dimension=1; local=false
24:	OBJ_INST_CAST: to='System.Compare', id=13
25:	OBJ_INST_CAST: to='System.Compare', id=13
26:	LOAD_INT_VAR: id=3; local=true
27:	MTHD_CALL: method='Collection.Generic.CompareVector:AddBack:o.H,'; native=false
28:	LBL
29:	LBL
30:	LOAD_INT_LIT: value=1
31:	LOAD_INT_VAR: id=2; local=true
32:	ADD_INT
33:	STOR_INT_VAR: id=2; local=true
34:	JMP: index=7
35:	LBL
36:	LOAD_INT_VAR: id=3; local=true
37:	RTRN
--
---------------------------------------------------------
Method: id=2,20; name='Collection.Generic.CompareVector:Find:o.H,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	STOR_INT_VAR: id=1; local=true
3:	LBL
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=1; local=false
6:	LOAD_INT_VAR: id=1; local=true
7:	LES_INT
8:	JMP: index=31, conditional=false
9:	LBL
10:	LOAD_INT_LIT: value=0
11:	LOAD_INT_VAR: id=0; local=true
12:	OBJ_INST_CAST: to='System.Compare', id=13
13:	OBJ_INST_CAST: to='System.Compare', id=13
14:	LOAD_INT_VAR: id=1; local=true
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=0; local=false
17:	LOAD_INT_ARY_ELM: dimension=1; local=false
18:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
19:	EQL_INT
20:	JMP: index=24, conditional=false
21:	LOAD_INT_VAR: id=1; local=true
22:	RTRN
23:	LBL
24:	LBL
25:	LOAD_INT_LIT: value=1
26:	LOAD_INT_VAR: id=1; local=true
27:	ADD_INT
28:	STOR_INT_VAR: id=1; local=true
29:	JMP: index=4
30:	LBL
31:	LOAD_INT_LIT: value=-1
32:	RTRN
--
---------------------------------------------------------
Method: id=2,12; name='Collection.Generic.CompareVector:Get:i,'; return='o.H';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=16
9:	LBL
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=1; local=false
12:	LOAD_INT_VAR: id=1; local=true
13:	LES_INT
14:	STOR_INT_VAR: id=0; local=true
15:	LBL
16:	LOAD_INT_VAR: id=0; local=true
17:	JMP: index=25, conditional=false
18:	LOAD_INT_VAR: id=1; local=true
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=0; local=false
21:	LOAD_INT_ARY_ELM: dimension=1; local=false
22:	OBJ_INST_CAST: to='System.Compare', id=13
23:	RTRN
24:	LBL
25:	LOAD_INT_LIT: value=0
26:	RTRN
--
---------------------------------------------------------
Method: id=2,22; name='Collection.Generic.CompareVector:Has:o.H,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	STOR_INT_VAR: id=1; local=true
3:	LBL
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=1; local=false
6:	LOAD_INT_VAR: id=1; local=true
7:	LES_INT
8:	JMP: index=31, conditional=false
9:	LBL
10:	LOAD_INT_LIT: value=0
11:	LOAD_INT_VAR: id=0; local=true
12:	OBJ_INST_CAST: to='System.Compare', id=13
13:	OBJ_INST_CAST: to='System.Compare', id=13
14:	LOAD_INT_VAR: id=1; local=true
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=0; local=false
17:	LOAD_INT_ARY_ELM: dimension=1; local=false
18:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
19:	EQL_INT
20:	JMP: index=24, conditional=false
21:	LOAD_INT_LIT: value=1
22:	RTRN
23:	LBL
24:	LBL
25:	LOAD_INT_LIT: value=1
26:	LOAD_INT_VAR: id=1; local=true
27:	ADD_INT
28:	STOR_INT_VAR: id=1; local=true
29:	JMP: index=4
30:	LBL
31:	LOAD_INT_LIT: value=0
32:	RTRN
--
---------------------------------------------------------
Method: id=2,16; name='Collection.Generic.CompareVector:IsEmpty:'; return='l';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	EQL_INT
4:	RTRN
--
---------------------------------------------------------
Method: id=2,6; name='Collection.Generic.CompareVector:Limit:i,'; return='o.Collection.Generic.CompareVector|H';
  blocks=1; is_function=false; num_params=1; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	NEW_INT_ARY: dimension=1
4:	STOR_INT_VAR: id=3; local=true
5:	LBL
6:	LOAD_INT_LIT: value=-1
7:	LOAD_INT_VAR: id=1; local=true
8:	GTR_INT
9:	JMP: index=14, conditional=true
10:	LOAD_INT_LIT: value=0
11:	STOR_INT_VAR: id=0; local=true
12:	JMP: index=20
13:	LBL
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=1; local=false
16:	LOAD_INT_VAR: id=1; local=true
17:	LES_INT
18:	STOR_INT_VAR: id=0; local=true
19:	LBL
20:	LOAD_INT_VAR: id=0; local=true
21:	JMP: index=52, conditional=false
22:	LOAD_INT_VAR: id=1; local=true
23:	NEW_INT_ARY: dimension=1
24:	STOR_INT_VAR: id=3; local=true
25:	LOAD_INT_LIT: value=0
26:	STOR_INT_VAR: id=2; local=true
27:	LBL
28:	LOAD_INT_VAR: id=1; local=true
29:	LOAD_INT_VAR: id=2; local=true
30:	LES_INT
31:	JMP: index=47, conditional=false
32:	LOAD_INT_VAR: id=2; local=true
33:	LOAD_INST_MEM
34:	LOAD_INT_VAR: id=0; local=false
35:	LOAD_INT_ARY_ELM: dimension=1; local=false
36:	OBJ_INST_CAST: to='System.Compare', id=13
37:	LOAD_INT_VAR: id=2; local=true
38:	LOAD_INT_VAR: id=3; local=true
39:	STOR_INT_ARY_ELM: dimension=1; local=true
40:	LBL
41:	LOAD_INT_LIT: value=1
42:	LOAD_INT_VAR: id=2; local=true
43:	ADD_INT
44:	STOR_INT_VAR: id=2; local=true
45:	JMP: index=28
46:	LBL
47:	LOAD_INT_VAR: id=3; local=true
48:	NEW_OBJ_INST: class='Collection.Generic.CompareVector'
49:	MTHD_CALL: method='Collection.Generic.CompareVector:New:o.H*,'; native=false
50:	RTRN
51:	LBL
52:	NEW_OBJ_INST: class='Collection.Generic.CompareVector'
53:	MTHD_CALL: method='Collection.Generic.CompareVector:New:'; native=false
54:	RTRN
--
---------------------------------------------------------
Method: id=2,5; name='Collection.Generic.CompareVector:Map:m.(o.H,)~o.H,'; return='o.Collection.Generic.CompareVector|H';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: FUNC_PARM
  1: OBJ_ARY_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	NEW_INT_ARY: dimension=1
4:	STOR_INT_VAR: id=2; local=true
5:	LOAD_INT_LIT: value=0
6:	STOR_INT_VAR: id=3; local=true
7:	LBL
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=1; local=false
10:	LOAD_INT_VAR: id=3; local=true
11:	LES_INT
12:	JMP: index=29, conditional=false
13:	LOAD_INT_VAR: id=3; local=true
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=0; local=false
16:	LOAD_INT_ARY_ELM: dimension=1; local=false
17:	LOAD_FUNC_VAR: id=0; local=true
18:	DYN_MTHD_CALL num_params=118:	; rtrn_type=Int
19:	LOAD_INT_VAR: id=3; local=true
20:	LOAD_INT_VAR: id=2; local=true
21:	STOR_INT_ARY_ELM: dimension=1; local=true
22:	LBL
23:	LOAD_INT_LIT: value=1
24:	LOAD_INT_VAR: id=3; local=true
25:	ADD_INT
26:	STOR_INT_VAR: id=3; local=true
27:	JMP: index=8
28:	LBL
29:	LOAD_INT_VAR: id=2; local=true
30:	NEW_OBJ_INST: class='Collection.Generic.CompareVector'
31:	MTHD_CALL: method='Collection.Generic.CompareVector:New:o.H*,'; native=false
32:	RTRN
--
---------------------------------------------------------
Method: id=2,19; name='Collection.Generic.CompareVector:Merge:i,i,i,o.H*,o.H*,'; return='n';
  blocks=1; is_function=false; num_params=5; mem_size=72
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: OBJ_ARY_PARM
  5: OBJ_ARY_PARM
  6: INT_PARM
  7: INT_PARM
  8: INT_PARM
  9: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=5; local=true
1:	STOR_INT_VAR: id=4; local=true
2:	STOR_INT_VAR: id=3; local=true
3:	STOR_INT_VAR: id=2; local=true
4:	STOR_INT_VAR: id=1; local=true
5:	LOAD_INT_VAR: id=1; local=true
6:	STOR_INT_VAR: id=6; local=true
7:	LBL
8:	LOAD_INT_VAR: id=3; local=true
9:	LOAD_INT_VAR: id=6; local=true
10:	LES_EQL_INT
11:	JMP: index=26, conditional=false
12:	LOAD_INT_VAR: id=6; local=true
13:	LOAD_INT_VAR: id=4; local=true
14:	LOAD_INT_ARY_ELM: dimension=1; local=true
15:	OBJ_INST_CAST: to='System.Compare', id=13
16:	LOAD_INT_VAR: id=6; local=true
17:	LOAD_INT_VAR: id=5; local=true
18:	STOR_INT_ARY_ELM: dimension=1; local=true
19:	LBL
20:	LOAD_INT_LIT: value=1
21:	LOAD_INT_VAR: id=6; local=true
22:	ADD_INT
23:	STOR_INT_VAR: id=6; local=true
24:	JMP: index=8
25:	LBL
26:	LOAD_INT_VAR: id=1; local=true
27:	STOR_INT_VAR: id=7; local=true
28:	LOAD_INT_LIT: value=1
29:	LOAD_INT_VAR: id=2; local=true
30:	ADD_INT
31:	STOR_INT_VAR: id=8; local=true
32:	LOAD_INT_VAR: id=1; local=true
33:	STOR_INT_VAR: id=9; local=true
34:	LBL
35:	LOAD_INT_VAR: id=2; local=true
36:	LOAD_INT_VAR: id=7; local=true
37:	LES_EQL_INT
38:	JMP: index=43, conditional=true
39:	LOAD_INT_LIT: value=0
40:	STOR_INT_VAR: id=0; local=true
41:	JMP: index=48
42:	LBL
43:	LOAD_INT_VAR: id=3; local=true
44:	LOAD_INT_VAR: id=8; local=true
45:	LES_EQL_INT
46:	STOR_INT_VAR: id=0; local=true
47:	LBL
48:	LOAD_INT_VAR: id=0; local=true
49:	JMP: index=117, conditional=false
50:	LBL
51:	LOAD_INT_LIT: value=0
52:	LOAD_INT_VAR: id=8; local=true
53:	LOAD_INT_VAR: id=5; local=true
54:	LOAD_INT_ARY_ELM: dimension=1; local=true
55:	OBJ_INST_CAST: to='System.Compare', id=13
56:	OBJ_INST_CAST: to='System.Compare', id=13
57:	LOAD_INT_VAR: id=7; local=true
58:	LOAD_INT_VAR: id=5; local=true
59:	LOAD_INT_ARY_ELM: dimension=1; local=true
60:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
61:	LES_INT
62:	JMP: index=67, conditional=false
63:	LOAD_INT_LIT: value=1
64:	STOR_INT_VAR: id=0; local=true
65:	JMP: index=80
66:	LBL
67:	LOAD_INT_LIT: value=0
68:	LOAD_INT_VAR: id=8; local=true
69:	LOAD_INT_VAR: id=5; local=true
70:	LOAD_INT_ARY_ELM: dimension=1; local=true
71:	OBJ_INST_CAST: to='System.Compare', id=13
72:	OBJ_INST_CAST: to='System.Compare', id=13
73:	LOAD_INT_VAR: id=7; local=true
74:	LOAD_INT_VAR: id=5; local=true
75:	LOAD_INT_ARY_ELM: dimension=1; local=true
76:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
77:	EQL_INT
78:	STOR_INT_VAR: id=0; local=true
79:	LBL
80:	LOAD_INT_VAR: id=0; local=true
81:	JMP: index=99, conditional=false
82:	LOAD_INT_VAR: id=7; local=true
83:	LOAD_INT_VAR: id=5; local=true
84:	LOAD_INT_ARY_ELM: dimension=1; local=true
85:	OBJ_INST_CAST: to='System.Compare', id=13
86:	LOAD_INT_VAR: id=9; local=true
87:	LOAD_INT_VAR: id=4; local=true
88:	STOR_INT_ARY_ELM: dimension=1; local=true
89:	LOAD_INT_LIT: value=1
90:	LOAD_INT_VAR: id=9; local=true
91:	ADD_INT
92:	STOR_INT_VAR: id=9; local=true
93:	LOAD_INT_LIT: value=1
94:	LOAD_INT_VAR: id=7; local=true
95:	ADD_INT
96:	STOR_INT_VAR: id=7; local=true
97:	JMP: index=115
98:	LBL
99:	LOAD_INT_VAR: id=8; local=true
100:	LOAD_INT_VAR: id=5; local=true
101:	LOAD_INT_ARY_ELM: dimension=1; local=true
102:	OBJ_INST_CAST: to='System.Compare', id=13
103:	LOAD_INT_VAR: id=9; local=true
104:	LOAD_INT_VAR: id=4; local=true
105:	STOR_INT_ARY_ELM: dimension=1; local=true
106:	LOAD_INT_LIT: value=1
107:	LOAD_INT_VAR: id=9; local=true
108:	ADD_INT
109:	STOR_INT_VAR: id=9; local=true
110:	LOAD_INT_LIT: value=1
111:	LOAD_INT_VAR: id=8; local=true
112:	ADD_INT
113:	STOR_INT_VAR: id=8; local=true
114:	LBL
115:	JMP: index=35
116:	LBL
117:	LBL
118:	LOAD_INT_VAR: id=2; local=true
119:	LOAD_INT_VAR: id=7; local=true
120:	LES_EQL_INT
121:	JMP: index=139, conditional=false
122:	LOAD_INT_VAR: id=7; local=true
123:	LOAD_INT_VAR: id=5; local=true
124:	LOAD_INT_ARY_ELM: dimension=1; local=true
125:	OBJ_INST_CAST: to='System.Compare', id=13
126:	LOAD_INT_VAR: id=9; local=true
127:	LOAD_INT_VAR: id=4; local=true
128:	STOR_INT_ARY_ELM: dimension=1; local=true
129:	LOAD_INT_LIT: value=1
130:	LOAD_INT_VAR: id=9; local=true
131:	ADD_INT
132:	STOR_INT_VAR: id=9; local=true
133:	LOAD_INT_LIT: value=1
134:	LOAD_INT_VAR: id=7; local=true
135:	ADD_INT
136:	STOR_INT_VAR: id=7; local=true
137:	JMP: index=118
138:	LBL
139:	RTRN
--
---------------------------------------------------------
Method: id=2,18; name='Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,'; return='n';
  blocks=1; is_function=false; num_params=4; mem_size=120
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_ARY_PARM
  3: OBJ_ARY_PARM
  4: INT_PARM
  5: OBJ_PARM
  6: INT_PARM
  7: INT_PARM
  8: INT_PARM
  9: INT_PARM
  10: OBJ_ARY_PARM
  11: OBJ_ARY_PARM
  12: INT_PARM
  13: INT_PARM
  14: INT_PARM
  15: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=3; local=true
1:	STOR_INT_VAR: id=2; local=true
2:	STOR_INT_VAR: id=1; local=true
3:	STOR_INT_VAR: id=0; local=true
4:	LBL
5:	LOAD_INT_VAR: id=1; local=true
6:	LOAD_INT_VAR: id=0; local=true
7:	LES_INT
8:	JMP: index=176, conditional=false
9:	LOAD_INT_LIT: value=1
10:	LOAD_INT_VAR: id=1; local=true
11:	LOAD_INT_VAR: id=0; local=true
12:	ADD_INT
13:	SHR_INT
14:	STOR_INT_VAR: id=4; local=true
15:	LOAD_INT_VAR: id=0; local=true
16:	LOAD_INT_VAR: id=4; local=true
17:	LOAD_INT_VAR: id=2; local=true
18:	LOAD_INT_VAR: id=3; local=true
19:	LOAD_INST_MEM
20:	MTHD_CALL: method='Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,'; native=false
21:	LOAD_INT_LIT: value=1
22:	LOAD_INT_VAR: id=4; local=true
23:	ADD_INT
24:	LOAD_INT_VAR: id=1; local=true
25:	LOAD_INT_VAR: id=2; local=true
26:	LOAD_INT_VAR: id=3; local=true
27:	LOAD_INST_MEM
28:	MTHD_CALL: method='Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,'; native=false
29:	LOAD_INT_VAR: id=0; local=true
30:	LOAD_INT_VAR: id=4; local=true
31:	LOAD_INT_VAR: id=1; local=true
32:	LOAD_INT_VAR: id=2; local=true
33:	LOAD_INT_VAR: id=3; local=true
34:	LOAD_INST_MEM
35:	STOR_INT_VAR: id=6; local=true
36:	STOR_INT_VAR: id=12; local=true
37:	STOR_INT_VAR: id=11; local=true
38:	STOR_INT_VAR: id=10; local=true
39:	STOR_INT_VAR: id=9; local=true
40:	STOR_INT_VAR: id=8; local=true
41:	LOAD_INT_VAR: id=8; local=true
42:	STOR_INT_VAR: id=13; local=true
43:	LBL
44:	LOAD_INT_VAR: id=10; local=true
45:	LOAD_INT_VAR: id=13; local=true
46:	LES_EQL_INT
47:	JMP: index=62, conditional=false
48:	LOAD_INT_VAR: id=13; local=true
49:	LOAD_INT_VAR: id=11; local=true
50:	LOAD_INT_ARY_ELM: dimension=1; local=true
51:	OBJ_INST_CAST: to='System.Compare', id=13
52:	LOAD_INT_VAR: id=13; local=true
53:	LOAD_INT_VAR: id=12; local=true
54:	STOR_INT_ARY_ELM: dimension=1; local=true
55:	LBL
56:	LOAD_INT_LIT: value=1
57:	LOAD_INT_VAR: id=13; local=true
58:	ADD_INT
59:	STOR_INT_VAR: id=13; local=true
60:	JMP: index=44
61:	LBL
62:	LOAD_INT_VAR: id=8; local=true
63:	STOR_INT_VAR: id=14; local=true
64:	LOAD_INT_LIT: value=1
65:	LOAD_INT_VAR: id=9; local=true
66:	ADD_INT
67:	STOR_INT_VAR: id=15; local=true
68:	LOAD_INT_VAR: id=8; local=true
69:	STOR_INT_VAR: id=16; local=true
70:	LBL
71:	LOAD_INT_VAR: id=9; local=true
72:	LOAD_INT_VAR: id=14; local=true
73:	LES_EQL_INT
74:	JMP: index=79, conditional=true
75:	LOAD_INT_LIT: value=0
76:	STOR_INT_VAR: id=7; local=true
77:	JMP: index=84
78:	LBL
79:	LOAD_INT_VAR: id=10; local=true
80:	LOAD_INT_VAR: id=15; local=true
81:	LES_EQL_INT
82:	STOR_INT_VAR: id=7; local=true
83:	LBL
84:	LOAD_INT_VAR: id=7; local=true
85:	JMP: index=153, conditional=false
86:	LBL
87:	LOAD_INT_LIT: value=0
88:	LOAD_INT_VAR: id=15; local=true
89:	LOAD_INT_VAR: id=12; local=true
90:	LOAD_INT_ARY_ELM: dimension=1; local=true
91:	OBJ_INST_CAST: to='System.Compare', id=13
92:	OBJ_INST_CAST: to='System.Compare', id=13
93:	LOAD_INT_VAR: id=14; local=true
94:	LOAD_INT_VAR: id=12; local=true
95:	LOAD_INT_ARY_ELM: dimension=1; local=true
96:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
97:	LES_INT
98:	JMP: index=103, conditional=false
99:	LOAD_INT_LIT: value=1
100:	STOR_INT_VAR: id=7; local=true
101:	JMP: index=116
102:	LBL
103:	LOAD_INT_LIT: value=0
104:	LOAD_INT_VAR: id=15; local=true
105:	LOAD_INT_VAR: id=12; local=true
106:	LOAD_INT_ARY_ELM: dimension=1; local=true
107:	OBJ_INST_CAST: to='System.Compare', id=13
108:	OBJ_INST_CAST: to='System.Compare', id=13
109:	LOAD_INT_VAR: id=14; local=true
110:	LOAD_INT_VAR: id=12; local=true
111:	LOAD_INT_ARY_ELM: dimension=1; local=true
112:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
113:	EQL_INT
114:	STOR_INT_VAR: id=7; local=true
115:	LBL
116:	LOAD_INT_VAR: id=7; local=true
117:	JMP: index=135, conditional=false
118:	LOAD_INT_VAR: id=14; local=true
119:	LOAD_INT_VAR: id=12; local=true
120:	LOAD_INT_ARY_ELM: dimension=1; local=true
121:	OBJ_INST_CAST: to='System.Compare', id=13
122:	LOAD_INT_VAR: id=16; local=true
123:	LOAD_INT_VAR: id=11; local=true
124:	STOR_INT_ARY_ELM: dimension=1; local=true
125:	LOAD_INT_LIT: value=1
126:	LOAD_INT_VAR: id=16; local=true
127:	ADD_INT
128:	STOR_INT_VAR: id=16; local=true
129:	LOAD_INT_LIT: value=1
130:	LOAD_INT_VAR: id=14; local=true
131:	ADD_INT
132:	STOR_INT_VAR: id=14; local=true
133:	JMP: index=151
134:	LBL
135:	LOAD_INT_VAR: id=15; local=true
136:	LOAD_INT_VAR: id=12; local=true
137:	LOAD_INT_ARY_ELM: dimension=1; local=true
138:	OBJ_INST_CAST: to='System.Compare', id=13
139:	LOAD_INT_VAR: id=16; local=true
140:	LOAD_INT_VAR: id=11; local=true
141:	STOR_INT_ARY_ELM: dimension=1; local=true
142:	LOAD_INT_LIT: value=1
143:	LOAD_INT_VAR: id=16; local=true
144:	ADD_INT
145:	STOR_INT_VAR: id=16; local=true
146:	LOAD_INT_LIT: value=1
147:	LOAD_INT_VAR: id=15; local=true
148:	ADD_INT
149:	STOR_INT_VAR: id=15; local=true
150:	LBL
151:	JMP: index=71
152:	LBL
153:	LBL
154:	LOAD_INT_VAR: id=9; local=true
155:	LOAD_INT_VAR: id=14; local=true
156:	LES_EQL_INT
157:	JMP: index=175, conditional=false
158:	LOAD_INT_VAR: id=14; local=true
159:	LOAD_INT_VAR: id=12; local=true
160:	LOAD_INT_ARY_ELM: dimension=1; local=true
161:	OBJ_INST_CAST: to='System.Compare', id=13
162:	LOAD_INT_VAR: id=16; local=true
163:	LOAD_INT_VAR: id=11; local=true
164:	STOR_INT_ARY_ELM: dimension=1; local=true
165:	LOAD_INT_LIT: value=1
166:	LOAD_INT_VAR: id=16; local=true
167:	ADD_INT
168:	STOR_INT_VAR: id=16; local=true
169:	LOAD_INT_LIT: value=1
170:	LOAD_INT_VAR: id=14; local=true
171:	ADD_INT
172:	STOR_INT_VAR: id=14; local=true
173:	JMP: index=154
174:	LBL
175:	LBL
176:	RTRN
--
---------------------------------------------------------
Method: id=2,0; name='Collection.Generic.CompareVector:New:'; return='o.Collection.Generic.CompareVector';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=8
1:	NEW_INT_ARY: dimension=1
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=0; local=false
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=1; local=false
7:	LOAD_INST_MEM
8:	RTRN
--
---------------------------------------------------------
Method: id=2,2; name='Collection.Generic.CompareVector:New:o.Collection.Generic.Vector|H,'; return='o.Collection.Generic.CompareVector';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	MTHD_CALL: method='Collection.Generic.Vector:ToArray:'; native=false
3:	LOAD_INST_MEM
4:	STOR_INT_VAR: id=0; local=false
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=false
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=1; local=false
9:	LOAD_INST_MEM
10:	RTRN
--
---------------------------------------------------------
Method: id=2,1; name='Collection.Generic.CompareVector:New:o.H*,'; return='o.Collection.Generic.CompareVector';
  blocks=1; is_function=false; num_params=1; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: OBJ_PARM
  2: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=2; local=true
5:	LOAD_INT_VAR: id=2; local=true
6:	LOAD_ARY_SIZE
7:	NEW_INT_ARY: dimension=1
8:	LOAD_INST_MEM
9:	STOR_INT_VAR: id=0; local=false
10:	LOAD_INT_VAR: id=0; local=true
11:	LOAD_INST_MEM
12:	MTHD_CALL: method='System.$BaseArray:Size:o.System.Base*,'; native=false
13:	LOAD_INST_MEM
14:	STOR_INT_VAR: id=1; local=false
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=0; local=false
17:	LOAD_INT_LIT: value=0
18:	LOAD_INT_VAR: id=0; local=true
19:	LOAD_INT_LIT: value=0
20:	LOAD_INST_MEM
21:	LOAD_INT_VAR: id=1; local=false
22:	LOAD_INST_MEM
23:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
24:	POP_INT
25:	LOAD_INST_MEM
26:	RTRN
--
---------------------------------------------------------
Method: id=2,11; name='Collection.Generic.CompareVector:Remove:i,'; return='o.H';
  blocks=1; is_function=false; num_params=1; mem_size=40
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_ARY_PARM
  3: OBJ_PARM
  4: OBJ_PARM
  5: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=16
9:	LBL
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=1; local=false
12:	LOAD_INT_VAR: id=1; local=true
13:	LES_INT
14:	STOR_INT_VAR: id=0; local=true
15:	LBL
16:	LOAD_INT_VAR: id=0; local=true
17:	JMP: index=70, conditional=false
18:	LOAD_INST_MEM
19:	LOAD_INT_VAR: id=0; local=false
20:	LOAD_INST_MEM
21:	STOR_INT_VAR: id=4; local=true
22:	STOR_INT_VAR: id=5; local=true
23:	LOAD_INT_VAR: id=5; local=true
24:	LOAD_ARY_SIZE
25:	NEW_INT_ARY: dimension=1
26:	COPY_INT_VAR: id=2; local=true
27:	LOAD_INT_LIT: value=0
28:	LOAD_INST_MEM
29:	LOAD_INT_VAR: id=0; local=false
30:	LOAD_INT_LIT: value=0
31:	LOAD_INT_VAR: id=1; local=true
32:	LOAD_INST_MEM
33:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
34:	POP_INT
35:	LOAD_INT_VAR: id=2; local=true
36:	LOAD_INT_VAR: id=1; local=true
37:	LOAD_INST_MEM
38:	LOAD_INT_VAR: id=0; local=false
39:	LOAD_INT_LIT: value=1
40:	LOAD_INT_VAR: id=1; local=true
41:	ADD_INT
42:	LOAD_INT_LIT: value=1
43:	LOAD_INT_VAR: id=1; local=true
44:	LOAD_INST_MEM
45:	LOAD_INT_VAR: id=1; local=false
46:	SUB_INT
47:	SUB_INT
48:	LOAD_INST_MEM
49:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
50:	POP_INT
51:	LOAD_INT_VAR: id=1; local=true
52:	LOAD_INST_MEM
53:	LOAD_INT_VAR: id=0; local=false
54:	LOAD_INT_ARY_ELM: dimension=1; local=false
55:	OBJ_INST_CAST: to='System.Compare', id=13
56:	STOR_INT_VAR: id=3; local=true
57:	LOAD_INT_VAR: id=2; local=true
58:	LOAD_INST_MEM
59:	STOR_INT_VAR: id=0; local=false
60:	LOAD_INT_LIT: value=1
61:	LOAD_INST_MEM
62:	LOAD_INT_VAR: id=1; local=false
63:	SUB_INT
64:	LOAD_INST_MEM
65:	STOR_INT_VAR: id=1; local=false
66:	LOAD_INT_VAR: id=3; local=true
67:	OBJ_INST_CAST: to='System.Compare', id=13
68:	RTRN
69:	LBL
70:	LOAD_INT_LIT: value=0
71:	RTRN
--
---------------------------------------------------------
Method: id=2,10; name='Collection.Generic.CompareVector:RemoveBack:'; return='o.H';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LBL
1:	LOAD_INT_LIT: value=0
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=1; local=false
4:	GTR_INT
5:	JMP: index=20, conditional=false
6:	LOAD_INT_LIT: value=1
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=1; local=false
9:	SUB_INT
10:	LOAD_INST_MEM
11:	STOR_INT_VAR: id=1; local=false
12:	LOAD_INST_MEM
13:	LOAD_INT_VAR: id=1; local=false
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=0; local=false
16:	LOAD_INT_ARY_ELM: dimension=1; local=false
17:	OBJ_INST_CAST: to='System.Compare', id=13
18:	RTRN
19:	LBL
20:	LOAD_INT_LIT: value=0
21:	RTRN
--
---------------------------------------------------------
Method: id=2,13; name='Collection.Generic.CompareVector:Set:o.H,i,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INT_LIT: value=-1
4:	LOAD_INT_VAR: id=2; local=true
5:	GTR_INT
6:	JMP: index=11, conditional=true
7:	LOAD_INT_LIT: value=0
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=17
10:	LBL
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=1; local=false
13:	LOAD_INT_VAR: id=2; local=true
14:	LES_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=28, conditional=false
19:	LOAD_INT_VAR: id=1; local=true
20:	OBJ_INST_CAST: to='System.Compare', id=13
21:	LOAD_INT_VAR: id=2; local=true
22:	LOAD_INST_MEM
23:	LOAD_INT_VAR: id=0; local=false
24:	STOR_INT_ARY_ELM: dimension=1; local=false
25:	LOAD_INT_LIT: value=1
26:	RTRN
27:	LBL
28:	LOAD_INT_LIT: value=0
29:	RTRN
--
---------------------------------------------------------
Method: id=2,15; name='Collection.Generic.CompareVector:Size:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=2,17; name='Collection.Generic.CompareVector:Sort:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: OBJ_ARY_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=1; local=false
5:	NEW_INT_ARY: dimension=1
6:	STOR_INT_VAR: id=1; local=true
7:	LOAD_INT_LIT: value=0
8:	LOAD_INT_LIT: value=1
9:	LOAD_INST_MEM
10:	LOAD_INT_VAR: id=1; local=false
11:	SUB_INT
12:	LOAD_INT_VAR: id=0; local=true
13:	LOAD_INT_VAR: id=1; local=true
14:	LOAD_INST_MEM
15:	MTHD_CALL: method='Collection.Generic.CompareVector:MergeSort:i,i,o.H*,o.H*,'; native=false
16:	RTRN
--
---------------------------------------------------------
Method: id=2,24; name='Collection.Generic.CompareVector:ToArray:'; return='o.H*';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	NEW_INT_ARY: dimension=1
3:	COPY_INT_VAR: id=0; local=true
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=0; local=false
7:	LOAD_INT_LIT: value=0
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=1; local=false
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; native=false
12:	POP_INT
13:	LOAD_INT_VAR: id=0; local=true
14:	RTRN
--
=========================================================
Class: id=3; name='Collection.Generic.Map'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=26; class_mem_size=0;
 instance_mem_size=24; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: INT_PARM
=========================================================
---------------------------------------------------------
Method: id=3,24; name='Collection.Generic.Map:DecreaseLevel:o.Collection.Generic.TreeNode|K|V,'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=1; mem_size=32
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=2; local=false
5:	NEQL_INT
6:	JMP: index=11, conditional=true
7:	LOAD_INT_LIT: value=0
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=17
10:	LBL
11:	LOAD_INT_LIT: value=0
12:	LOAD_INT_VAR: id=1; local=true
13:	LOAD_INT_VAR: id=3; local=false
14:	NEQL_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=55, conditional=false
19:	LOAD_INT_VAR: id=1; local=true
20:	LOAD_INT_VAR: id=2; local=false
21:	LOAD_INT_VAR: id=4; local=false
22:	STOR_INT_VAR: id=2; local=true
23:	LOAD_INT_VAR: id=1; local=true
24:	LOAD_INT_VAR: id=3; local=false
25:	LOAD_INT_VAR: id=4; local=false
26:	STOR_INT_VAR: id=3; local=true
27:	LOAD_INT_VAR: id=2; local=true
28:	LOAD_INT_VAR: id=3; local=true
29:	LOAD_INST_MEM
30:	MTHD_CALL: method='System.$Int:Min:i,i,'; native=true
31:	STOR_INT_VAR: id=4; local=true
32:	LBL
33:	LOAD_INT_VAR: id=1; local=true
34:	LOAD_INT_VAR: id=4; local=false
35:	LOAD_INT_VAR: id=4; local=true
36:	LES_INT
37:	JMP: index=54, conditional=false
38:	LOAD_INT_VAR: id=4; local=true
39:	LOAD_INT_VAR: id=1; local=true
40:	STOR_INT_VAR: id=4; local=false
41:	LBL
42:	LOAD_INT_VAR: id=1; local=true
43:	LOAD_INT_VAR: id=3; local=false
44:	LOAD_INT_VAR: id=4; local=false
45:	LOAD_INT_VAR: id=4; local=true
46:	LES_INT
47:	JMP: index=53, conditional=false
48:	LOAD_INT_VAR: id=4; local=true
49:	LOAD_INT_VAR: id=1; local=true
50:	LOAD_INT_VAR: id=3; local=false
51:	STOR_INT_VAR: id=4; local=false
52:	LBL
53:	LBL
54:	LBL
55:	LOAD_INT_VAR: id=1; local=true
56:	RTRN
--
---------------------------------------------------------
Method: id=3,10; name='Collection.Generic.Map:Each:m.(o.K,o.V,)~n,'; return='o.Collection.Generic.Map|K|V';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: FUNC_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=false
3:	LOAD_FUNC_VAR: id=0; local=true
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,'; native=false
6:	LOAD_INST_MEM
7:	RTRN
--
---------------------------------------------------------
Method: id=3,11; name='Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,'; return='n';
  blocks=1; is_function=false; num_params=3; mem_size=40
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: FUNC_PARM
  2: OBJ_PARM
  3: OBJ_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=0; local=true
5:	NEQL_INT
6:	JMP: index=33, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_FUNC_VAR: id=1; local=true
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,'; native=false
12:	LOAD_INT_VAR: id=0; local=true
13:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
14:	OBJ_INST_CAST: to='System.Clone', id=14
15:	MTHD_CALL: method='System.Clone:Clone:'; native=false
16:	OBJ_INST_CAST: to='System.Clone', id=14
17:	STOR_INT_VAR: id=3; local=true
18:	LOAD_INT_VAR: id=0; local=true
19:	LOAD_INT_VAR: id=1; local=false
20:	STOR_INT_VAR: id=4; local=true
21:	LOAD_INT_VAR: id=3; local=true
22:	OBJ_INST_CAST: to='System.Compare', id=13
23:	OBJ_INST_CAST: to='System.Compare', id=13
24:	LOAD_INT_VAR: id=4; local=true
25:	LOAD_FUNC_VAR: id=1; local=true
26:	DYN_MTHD_CALL num_params=226:	; rtrn_type=Nil
27:	LOAD_INT_VAR: id=0; local=true
28:	LOAD_INT_VAR: id=3; local=false
29:	LOAD_FUNC_VAR: id=1; local=true
30:	LOAD_INST_MEM
31:	MTHD_CALL: method='Collection.Generic.Map:Each:o.Collection.Generic.TreeNode|K|V,m.(o.K,o.V,)~n,'; native=false
32:	LBL
33:	RTRN
--
---------------------------------------------------------
Method: id=3,4; name='Collection.Generic.Map:Empty:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	LOAD_INST_MEM
2:	STOR_INT_VAR: id=0; local=false
3:	LOAD_INT_LIT: value=0
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=1; local=false
6:	LOAD_INT_LIT: value=0
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=2; local=false
9:	RTRN
--
---------------------------------------------------------
Method: id=3,25; name='Collection.Generic.Map:Filter:m.(o.K,)~l,'; return='o.Collection.Generic.Map|K|V';
  blocks=1; is_function=false; num_params=2; mem_size=56
---------------------------------------------------------
memory types:
  0: FUNC_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: OBJ_PARM
  4: OBJ_PARM
  5: OBJ_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=0; local=true
1:	NEW_OBJ_INST: class='Collection.Generic.Map'
2:	MTHD_CALL: method='Collection.Generic.Map:New:'; native=false
3:	STOR_INT_VAR: id=3; local=true
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='Collection.Generic.Map:GetKeys:'; native=false
6:	STOR_INT_VAR: id=4; local=true
7:	LOAD_INT_LIT: value=0
8:	STOR_INT_VAR: id=2; local=true
9:	LBL
10:	LOAD_INT_VAR: id=4; local=true
11:	LOAD_INT_VAR: id=1; local=false
12:	LOAD_INT_VAR: id=2; local=true
13:	LES_INT
14:	JMP: index=45, conditional=false
15:	LOAD_INT_VAR: id=2; local=true
16:	LOAD_INT_VAR: id=4; local=true
17:	MTHD_CALL: method='Collection.Generic.Vector:Get:i,'; native=false
18:	OBJ_INST_CAST: to='System.Compare', id=13
19:	STOR_INT_VAR: id=5; local=true
20:	LBL
21:	LOAD_INT_VAR: id=5; local=true
22:	LOAD_FUNC_VAR: id=0; local=true
23:	DYN_MTHD_CALL num_params=123:	; rtrn_type=Int
24:	JMP: index=38, conditional=false
25:	LOAD_INT_VAR: id=5; local=true
26:	OBJ_INST_CAST: to='System.Compare', id=13
27:	OBJ_INST_CAST: to='System.Compare', id=13
28:	LOAD_INST_MEM
29:	MTHD_CALL: method='Collection.Generic.Map:Find:o.K,'; native=false
30:	STOR_INT_VAR: id=6; local=true
31:	LOAD_INT_VAR: id=5; local=true
32:	OBJ_INST_CAST: to='System.Compare', id=13
33:	OBJ_INST_CAST: to='System.Compare', id=13
34:	LOAD_INT_VAR: id=6; local=true
35:	LOAD_INT_VAR: id=3; local=true
36:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,'; native=false
37:	LBL
38:	LBL
39:	LOAD_INT_LIT: value=1
40:	LOAD_INT_VAR: id=2; local=true
41:	ADD_INT
42:	STOR_INT_VAR: id=2; local=true
43:	JMP: index=10
44:	LBL
45:	LOAD_INT_VAR: id=3; local=true
46:	RTRN
--
---------------------------------------------------------
Method: id=3,7; name='Collection.Generic.Map:Find:o.K,'; return='o.V';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	OBJ_INST_CAST: to='System.Compare', id=13
3:	OBJ_INST_CAST: to='System.Compare', id=13
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=0; local=false
6:	LOAD_INST_MEM
7:	MTHD_CALL: method='Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,'; native=false
8:	RTRN
--
---------------------------------------------------------
Method: id=3,9; name='Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,'; return='o.V';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=1; local=true
5:	NEQL_INT
6:	JMP: index=51, conditional=false
7:	LBL
8:	LOAD_INT_LIT: value=0
9:	LOAD_INT_VAR: id=1; local=true
10:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
11:	OBJ_INST_CAST: to='System.Compare', id=13
12:	OBJ_INST_CAST: to='System.Compare', id=13
13:	LOAD_INT_VAR: id=0; local=true
14:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
15:	LES_INT
16:	JMP: index=27, conditional=false
17:	LOAD_INT_VAR: id=0; local=true
18:	OBJ_INST_CAST: to='System.Compare', id=13
19:	OBJ_INST_CAST: to='System.Compare', id=13
20:	LOAD_INT_VAR: id=1; local=true
21:	LOAD_INT_VAR: id=2; local=false
22:	LOAD_INST_MEM
23:	MTHD_CALL: method='Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,'; native=false
24:	RTRN
25:	JMP: index=50
26:	LBL
27:	LOAD_INT_LIT: value=0
28:	LOAD_INT_VAR: id=1; local=true
29:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
30:	OBJ_INST_CAST: to='System.Compare', id=13
31:	OBJ_INST_CAST: to='System.Compare', id=13
32:	LOAD_INT_VAR: id=0; local=true
33:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
34:	GTR_INT
35:	JMP: index=46, conditional=false
36:	LOAD_INT_VAR: id=0; local=true
37:	OBJ_INST_CAST: to='System.Compare', id=13
38:	OBJ_INST_CAST: to='System.Compare', id=13
39:	LOAD_INT_VAR: id=1; local=true
40:	LOAD_INT_VAR: id=3; local=false
41:	LOAD_INST_MEM
42:	MTHD_CALL: method='Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,'; native=false
43:	RTRN
44:	JMP: index=50
45:	LBL
46:	LOAD_INT_VAR: id=1; local=true
47:	LOAD_INT_VAR: id=1; local=false
48:	RTRN
49:	LBL
50:	LBL
51:	LOAD_INT_LIT: value=0
52:	RTRN
--
---------------------------------------------------------
Method: id=3,14; name='Collection.Generic.Map:GetKeyValues:'; return='o.Collection.Generic.Vector|Pair';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	NEW_OBJ_INST: class='Collection.Generic.Vector'
1:	MTHD_CALL: method='Collection.Generic.Vector:New:'; native=false
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=0; local=false
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INST_MEM
7:	MTHD_CALL: method='Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,'; native=false
8:	LOAD_INT_VAR: id=0; local=true
9:	RTRN
--
---------------------------------------------------------
Method: id=3,15; name='Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,'; return='n';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: OBJ_PARM
  3: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=0; local=true
5:	NEQL_INT
6:	JMP: index=33, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_INT_VAR: id=1; local=true
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,'; native=false
12:	LOAD_INT_VAR: id=0; local=true
13:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
14:	OBJ_INST_CAST: to='System.Compare', id=13
15:	STOR_INT_VAR: id=2; local=true
16:	LOAD_INT_VAR: id=0; local=true
17:	LOAD_INT_VAR: id=1; local=false
18:	STOR_INT_VAR: id=3; local=true
19:	LOAD_INT_VAR: id=2; local=true
20:	OBJ_INST_CAST: to='System.Compare', id=13
21:	OBJ_INST_CAST: to='System.Compare', id=13
22:	LOAD_INT_VAR: id=3; local=true
23:	NEW_OBJ_INST: class='Collection.Generic.Pair'
24:	MTHD_CALL: method='Collection.Generic.Pair:New:o.F,o.S,'; native=false
25:	LOAD_INT_VAR: id=1; local=true
26:	MTHD_CALL: method='Collection.Generic.Vector:AddBack:o.H,'; native=false
27:	LOAD_INT_VAR: id=0; local=true
28:	LOAD_INT_VAR: id=3; local=false
29:	LOAD_INT_VAR: id=1; local=true
30:	LOAD_INST_MEM
31:	MTHD_CALL: method='Collection.Generic.Map:GetKeyValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|Pair,'; native=false
32:	LBL
33:	RTRN
--
---------------------------------------------------------
Method: id=3,12; name='Collection.Generic.Map:GetKeys:'; return='o.Collection.Generic.Vector|K';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	NEW_OBJ_INST: class='Collection.Generic.Vector'
1:	MTHD_CALL: method='Collection.Generic.Vector:New:'; native=false
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=0; local=false
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INST_MEM
7:	MTHD_CALL: method='Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,'; native=false
8:	LOAD_INT_VAR: id=0; local=true
9:	RTRN
--
---------------------------------------------------------
Method: id=3,13; name='Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,'; return='n';
  blocks=1; is_function=false; num_params=2; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=0; local=true
5:	NEQL_INT
6:	JMP: index=26, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_INT_VAR: id=1; local=true
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,'; native=false
12:	LOAD_INT_VAR: id=0; local=true
13:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
14:	OBJ_INST_CAST: to='System.Compare', id=13
15:	COPY_INT_VAR: id=2; local=true
16:	OBJ_INST_CAST: to='System.Compare', id=13
17:	OBJ_INST_CAST: to='System.Compare', id=13
18:	LOAD_INT_VAR: id=1; local=true
19:	MTHD_CALL: method='Collection.Generic.Vector:AddBack:o.H,'; native=false
20:	LOAD_INT_VAR: id=0; local=true
21:	LOAD_INT_VAR: id=3; local=false
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INST_MEM
24:	MTHD_CALL: method='Collection.Generic.Map:GetKeys:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|K,'; native=false
25:	LBL
26:	RTRN
--
---------------------------------------------------------
Method: id=3,16; name='Collection.Generic.Map:GetValues:'; return='o.Collection.Generic.Vector|V';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	NEW_OBJ_INST: class='Collection.Generic.Vector'
1:	MTHD_CALL: method='Collection.Generic.Vector:New:'; native=false
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=0; local=false
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INST_MEM
7:	MTHD_CALL: method='Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,'; native=false
8:	LOAD_INT_VAR: id=0; local=true
9:	RTRN
--
---------------------------------------------------------
Method: id=3,17; name='Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,'; return='n';
  blocks=1; is_function=false; num_params=2; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=0; local=true
5:	NEQL_INT
6:	JMP: index=23, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_INT_VAR: id=1; local=true
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,'; native=false
12:	LOAD_INT_VAR: id=0; local=true
13:	LOAD_INT_VAR: id=1; local=false
14:	COPY_INT_VAR: id=2; local=true
15:	LOAD_INT_VAR: id=1; local=true
16:	MTHD_CALL: method='Collection.Generic.Vector:AddBack:o.H,'; native=false
17:	LOAD_INT_VAR: id=0; local=true
18:	LOAD_INT_VAR: id=3; local=false
19:	LOAD_INT_VAR: id=1; local=true
20:	LOAD_INST_MEM
21:	MTHD_CALL: method='Collection.Generic.Map:GetValues:o.Collection.Generic.TreeNode|K|V,o.Collection.Generic.Vector|V,'; native=false
22:	LBL
23:	RTRN
--
---------------------------------------------------------
Method: id=3,8; name='Collection.Generic.Map:Has:o.K,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	LOAD_INT_VAR: id=0; local=true
3:	OBJ_INST_CAST: to='System.Compare', id=13
4:	OBJ_INST_CAST: to='System.Compare', id=13
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=0; local=false
7:	LOAD_INST_MEM
8:	MTHD_CALL: method='Collection.Generic.Map:Find:o.K,o.Collection.Generic.TreeNode|K|V,'; native=false
9:	NEQL_INT
10:	RTRN
--
---------------------------------------------------------
Method: id=3,18; name='Collection.Generic.Map:Insert:o.K,o.V,'; return='n';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=0; local=false
6:	EQL_INT
7:	JMP: index=19, conditional=false
8:	LOAD_INT_VAR: id=0; local=true
9:	OBJ_INST_CAST: to='System.Compare', id=13
10:	OBJ_INST_CAST: to='System.Compare', id=13
11:	LOAD_INT_VAR: id=1; local=true
12:	LOAD_INT_LIT: value=0
13:	LOAD_INST_MEM
14:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,'; native=false
15:	LOAD_INST_MEM
16:	STOR_INT_VAR: id=0; local=false
17:	JMP: index=30
18:	LBL
19:	LOAD_INT_VAR: id=0; local=true
20:	OBJ_INST_CAST: to='System.Compare', id=13
21:	OBJ_INST_CAST: to='System.Compare', id=13
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INST_MEM
24:	LOAD_INT_VAR: id=0; local=false
25:	LOAD_INST_MEM
26:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,'; native=false
27:	LOAD_INST_MEM
28:	STOR_INT_VAR: id=0; local=false
29:	LBL
30:	RTRN
--
---------------------------------------------------------
Method: id=3,19; name='Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=3; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LBL
4:	LOAD_INT_LIT: value=0
5:	LOAD_INT_VAR: id=2; local=true
6:	EQL_INT
7:	JMP: index=24, conditional=false
8:	LOAD_INT_VAR: id=0; local=true
9:	OBJ_INST_CAST: to='System.Compare', id=13
10:	OBJ_INST_CAST: to='System.Compare', id=13
11:	LOAD_INT_VAR: id=1; local=true
12:	LOAD_INT_LIT: value=1
13:	NEW_OBJ_INST: class='Collection.Generic.TreeNode'
14:	MTHD_CALL: method='Collection.Generic.TreeNode:New:o.K,o.V,i,'; native=false
15:	STOR_INT_VAR: id=2; local=true
16:	LOAD_INT_LIT: value=1
17:	LOAD_INST_MEM
18:	LOAD_INT_VAR: id=2; local=false
19:	ADD_INT
20:	LOAD_INST_MEM
21:	STOR_INT_VAR: id=2; local=false
22:	JMP: index=78
23:	LBL
24:	LBL
25:	LOAD_INT_LIT: value=0
26:	LOAD_INT_VAR: id=2; local=true
27:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
28:	OBJ_INST_CAST: to='System.Compare', id=13
29:	OBJ_INST_CAST: to='System.Compare', id=13
30:	LOAD_INT_VAR: id=0; local=true
31:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
32:	LES_INT
33:	JMP: index=46, conditional=false
34:	LOAD_INT_VAR: id=0; local=true
35:	OBJ_INST_CAST: to='System.Compare', id=13
36:	OBJ_INST_CAST: to='System.Compare', id=13
37:	LOAD_INT_VAR: id=1; local=true
38:	LOAD_INT_VAR: id=2; local=true
39:	LOAD_INT_VAR: id=2; local=false
40:	LOAD_INST_MEM
41:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,'; native=false
42:	LOAD_INT_VAR: id=2; local=true
43:	STOR_INT_VAR: id=2; local=false
44:	JMP: index=70
45:	LBL
46:	LOAD_INT_LIT: value=0
47:	LOAD_INT_VAR: id=2; local=true
48:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
49:	OBJ_INST_CAST: to='System.Compare', id=13
50:	OBJ_INST_CAST: to='System.Compare', id=13
51:	LOAD_INT_VAR: id=0; local=true
52:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
53:	GTR_INT
54:	JMP: index=67, conditional=false
55:	LOAD_INT_VAR: id=0; local=true
56:	OBJ_INST_CAST: to='System.Compare', id=13
57:	OBJ_INST_CAST: to='System.Compare', id=13
58:	LOAD_INT_VAR: id=1; local=true
59:	LOAD_INT_VAR: id=2; local=true
60:	LOAD_INT_VAR: id=3; local=false
61:	LOAD_INST_MEM
62:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,o.Collection.Generic.TreeNode|K|V,'; native=false
63:	LOAD_INT_VAR: id=2; local=true
64:	STOR_INT_VAR: id=3; local=false
65:	JMP: index=70
66:	LBL
67:	LOAD_INT_VAR: id=2; local=true
68:	RTRN
69:	LBL
70:	LOAD_INT_VAR: id=2; local=true
71:	LOAD_INST_MEM
72:	MTHD_CALL: method='Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,'; native=true
73:	COPY_INT_VAR: id=2; local=true
74:	LOAD_INST_MEM
75:	MTHD_CALL: method='Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,'; native=true
76:	STOR_INT_VAR: id=2; local=true
77:	LBL
78:	LOAD_INT_VAR: id=2; local=true
79:	RTRN
--
---------------------------------------------------------
Method: id=3,3; name='Collection.Generic.Map:IsEmpty:'; return='l';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=2; local=false
3:	EQL_INT
4:	RTRN
--
---------------------------------------------------------
Method: id=3,0; name='Collection.Generic.Map:New:'; return='o.Collection.Generic.Map';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	LOAD_INST_MEM
2:	STOR_INT_VAR: id=0; local=false
3:	LOAD_INT_LIT: value=0
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=2; local=false
6:	LOAD_INST_MEM
7:	RTRN
--
---------------------------------------------------------
Method: id=3,22; name='Collection.Generic.Map:Predecessor:o.Collection.Generic.TreeNode|K|V,'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INT_VAR: id=2; local=false
5:	NEQL_INT
6:	JMP: index=24, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	LOAD_INT_VAR: id=2; local=false
9:	STOR_INT_VAR: id=1; local=true
10:	LBL
11:	LOAD_INT_LIT: value=0
12:	LOAD_INT_VAR: id=1; local=true
13:	LOAD_INT_VAR: id=2; local=false
14:	NEQL_INT
15:	JMP: index=21, conditional=false
16:	LOAD_INT_VAR: id=1; local=true
17:	LOAD_INT_VAR: id=2; local=false
18:	STOR_INT_VAR: id=1; local=true
19:	JMP: index=11
20:	LBL
21:	LOAD_INT_VAR: id=1; local=true
22:	RTRN
23:	LBL
24:	LOAD_INT_VAR: id=0; local=true
25:	RTRN
--
---------------------------------------------------------
Method: id=3,20; name='Collection.Generic.Map:Remove:o.K,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=1
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=2; local=false
5:	EQL_INT
6:	JMP: index=11, conditional=true
7:	LOAD_INT_LIT: value=0
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=22
10:	LBL
11:	LOAD_INT_LIT: value=0
12:	LOAD_INST_MEM
13:	LOAD_INT_VAR: id=0; local=false
14:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
15:	OBJ_INST_CAST: to='System.Compare', id=13
16:	OBJ_INST_CAST: to='System.Compare', id=13
17:	LOAD_INT_VAR: id=1; local=true
18:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
19:	EQL_INT
20:	STOR_INT_VAR: id=0; local=true
21:	LBL
22:	LOAD_INT_VAR: id=0; local=true
23:	JMP: index=33, conditional=false
24:	LOAD_INT_LIT: value=0
25:	LOAD_INST_MEM
26:	STOR_INT_VAR: id=0; local=false
27:	LOAD_INT_LIT: value=0
28:	LOAD_INST_MEM
29:	STOR_INT_VAR: id=2; local=false
30:	LOAD_INT_LIT: value=1
31:	RTRN
32:	LBL
33:	LOAD_INT_VAR: id=1; local=true
34:	OBJ_INST_CAST: to='System.Compare', id=13
35:	OBJ_INST_CAST: to='System.Compare', id=13
36:	LOAD_INST_MEM
37:	LOAD_INT_VAR: id=0; local=false
38:	LOAD_INST_MEM
39:	MTHD_CALL: method='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'; native=true
40:	STOR_INT_VAR: id=2; local=true
41:	LBL
42:	LOAD_INT_LIT: value=0
43:	LOAD_INT_VAR: id=2; local=true
44:	EQL_INT
45:	JMP: index=49, conditional=false
46:	LOAD_INT_LIT: value=0
47:	RTRN
48:	LBL
49:	LOAD_INT_VAR: id=2; local=true
50:	LOAD_INST_MEM
51:	STOR_INT_VAR: id=0; local=false
52:	LOAD_INT_LIT: value=1
53:	LOAD_INST_MEM
54:	LOAD_INT_VAR: id=2; local=false
55:	SUB_INT
56:	LOAD_INST_MEM
57:	STOR_INT_VAR: id=2; local=false
58:	LOAD_INT_LIT: value=1
59:	RTRN
--
---------------------------------------------------------
Method: id=3,21; name='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: OBJ_PARM
  3: OBJ_PARM
  4: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=2; local=true
5:	EQL_INT
6:	JMP: index=10, conditional=false
7:	LOAD_INT_LIT: value=0
8:	RTRN
9:	LBL
10:	LBL
11:	LOAD_INT_LIT: value=0
12:	LOAD_INT_VAR: id=2; local=true
13:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
14:	OBJ_INST_CAST: to='System.Compare', id=13
15:	OBJ_INST_CAST: to='System.Compare', id=13
16:	LOAD_INT_VAR: id=1; local=true
17:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
18:	LES_INT
19:	JMP: index=31, conditional=false
20:	LOAD_INT_VAR: id=1; local=true
21:	OBJ_INST_CAST: to='System.Compare', id=13
22:	OBJ_INST_CAST: to='System.Compare', id=13
23:	LOAD_INT_VAR: id=2; local=true
24:	LOAD_INT_VAR: id=2; local=false
25:	LOAD_INST_MEM
26:	MTHD_CALL: method='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'; native=true
27:	LOAD_INT_VAR: id=2; local=true
28:	STOR_INT_VAR: id=2; local=false
29:	JMP: index=112
30:	LBL
31:	LOAD_INT_LIT: value=0
32:	LOAD_INT_VAR: id=2; local=true
33:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
34:	OBJ_INST_CAST: to='System.Compare', id=13
35:	OBJ_INST_CAST: to='System.Compare', id=13
36:	LOAD_INT_VAR: id=1; local=true
37:	MTHD_CALL: method='System.Compare:Compare:o.System.Compare,'; native=false
38:	GTR_INT
39:	JMP: index=51, conditional=false
40:	LOAD_INT_VAR: id=1; local=true
41:	OBJ_INST_CAST: to='System.Compare', id=13
42:	OBJ_INST_CAST: to='System.Compare', id=13
43:	LOAD_INT_VAR: id=2; local=true
44:	LOAD_INT_VAR: id=3; local=false
45:	LOAD_INST_MEM
46:	MTHD_CALL: method='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'; native=true
47:	LOAD_INT_VAR: id=2; local=true
48:	STOR_INT_VAR: id=3; local=false
49:	JMP: index=112
50:	LBL
51:	LBL
52:	LOAD_INT_LIT: value=0
53:	LOAD_INT_VAR: id=2; local=true
54:	LOAD_INT_VAR: id=2; local=false
55:	EQL_INT
56:	JMP: index=61, conditional=true
57:	LOAD_INT_LIT: value=0
58:	STOR_INT_VAR: id=0; local=true
59:	JMP: index=67
60:	LBL
61:	LOAD_INT_LIT: value=0
62:	LOAD_INT_VAR: id=2; local=true
63:	LOAD_INT_VAR: id=3; local=false
64:	EQL_INT
65:	STOR_INT_VAR: id=0; local=true
66:	LBL
67:	LOAD_INT_VAR: id=0; local=true
68:	JMP: index=73, conditional=false
69:	LOAD_INT_LIT: value=0
70:	RTRN
71:	JMP: index=111
72:	LBL
73:	LOAD_INT_LIT: value=0
74:	LOAD_INT_VAR: id=2; local=true
75:	LOAD_INT_VAR: id=2; local=false
76:	EQL_INT
77:	JMP: index=95, conditional=false
78:	LOAD_INT_VAR: id=2; local=true
79:	LOAD_INST_MEM
80:	MTHD_CALL: method='Collection.Generic.Map:Successor:o.Collection.Generic.TreeNode|K|V,'; native=false
81:	COPY_INT_VAR: id=3; local=true
82:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
83:	OBJ_INST_CAST: to='System.Compare', id=13
84:	OBJ_INST_CAST: to='System.Compare', id=13
85:	LOAD_INT_VAR: id=2; local=true
86:	LOAD_INT_VAR: id=3; local=false
87:	LOAD_INST_MEM
88:	MTHD_CALL: method='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'; native=true
89:	LOAD_INT_VAR: id=2; local=true
90:	STOR_INT_VAR: id=3; local=false
91:	LOAD_INT_VAR: id=3; local=true
92:	STOR_INT_VAR: id=2; local=true
93:	JMP: index=111
94:	LBL
95:	LOAD_INT_VAR: id=2; local=true
96:	LOAD_INST_MEM
97:	MTHD_CALL: method='Collection.Generic.Map:Predecessor:o.Collection.Generic.TreeNode|K|V,'; native=false
98:	COPY_INT_VAR: id=4; local=true
99:	MTHD_CALL: method='Collection.Generic.TreeNode:GetKey:'; native=false
100:	OBJ_INST_CAST: to='System.Compare', id=13
101:	OBJ_INST_CAST: to='System.Compare', id=13
102:	LOAD_INT_VAR: id=2; local=true
103:	LOAD_INT_VAR: id=2; local=false
104:	LOAD_INST_MEM
105:	MTHD_CALL: method='Collection.Generic.Map:Remove:o.K,o.Collection.Generic.TreeNode|K|V,'; native=true
106:	LOAD_INT_VAR: id=2; local=true
107:	STOR_INT_VAR: id=2; local=false
108:	LOAD_INT_VAR: id=4; local=true
109:	STOR_INT_VAR: id=2; local=true
110:	LBL
111:	LBL
112:	LOAD_INT_VAR: id=2; local=true
113:	LOAD_INST_MEM
114:	MTHD_CALL: method='Collection.Generic.Map:DecreaseLevel:o.Collection.Generic.TreeNode|K|V,'; native=false
115:	COPY_INT_VAR: id=2; local=true
116:	LOAD_INST_MEM
117:	MTHD_CALL: method='Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,'; native=true
118:	COPY_INT_VAR: id=2; local=true
119:	LOAD_INT_VAR: id=3; local=false
120:	LOAD_INST_MEM
121:	MTHD_CALL: method='Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,'; native=true
122:	LOAD_INT_VAR: id=2; local=true
123:	STOR_INT_VAR: id=3; local=false
124:	LBL
125:	LOAD_INT_LIT: value=0
126:	LOAD_INT_VAR: id=2; local=true
127:	LOAD_INT_VAR: id=3; local=false
128:	NEQL_INT
129:	JMP: index=134, conditional=true
130:	LOAD_INT_LIT: value=0
131:	STOR_INT_VAR: id=0; local=true
132:	JMP: index=141
133:	LBL
134:	LOAD_INT_LIT: value=0
135:	LOAD_INT_VAR: id=2; local=true
136:	LOAD_INT_VAR: id=3; local=false
137:	LOAD_INT_VAR: id=3; local=false
138:	NEQL_INT
139:	STOR_INT_VAR: id=0; local=true
140:	LBL
141:	LOAD_INT_VAR: id=0; local=true
142:	JMP: index=152, conditional=false
143:	LOAD_INT_VAR: id=2; local=true
144:	LOAD_INT_VAR: id=3; local=false
145:	LOAD_INT_VAR: id=3; local=false
146:	LOAD_INST_MEM
147:	MTHD_CALL: method='Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,'; native=true
148:	LOAD_INT_VAR: id=2; local=true
149:	LOAD_INT_VAR: id=3; local=false
150:	STOR_INT_VAR: id=3; local=false
151:	LBL
152:	LOAD_INT_VAR: id=2; local=true
153:	LOAD_INST_MEM
154:	MTHD_CALL: method='Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,'; native=true
155:	COPY_INT_VAR: id=2; local=true
156:	LOAD_INT_VAR: id=3; local=false
157:	LOAD_INST_MEM
158:	MTHD_CALL: method='Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,'; native=true
159:	LOAD_INT_VAR: id=2; local=true
160:	STOR_INT_VAR: id=3; local=false
161:	LOAD_INT_VAR: id=2; local=true
162:	RTRN
--
---------------------------------------------------------
Method: id=3,2; name='Collection.Generic.Map:Size:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=3,1; name='Collection.Generic.Map:Skew:o.Collection.Generic.TreeNode|K|V,'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=1; local=true
4:	EQL_INT
5:	JMP: index=10, conditional=false
6:	LOAD_INT_LIT: value=1
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=16
9:	LBL
10:	LOAD_INT_LIT: value=0
11:	LOAD_INT_VAR: id=1; local=true
12:	LOAD_INT_VAR: id=2; local=false
13:	EQL_INT
14:	STOR_INT_VAR: id=0; local=true
15:	LBL
16:	LOAD_INT_VAR: id=0; local=true
17:	JMP: index=21, conditional=false
18:	LOAD_INT_VAR: id=1; local=true
19:	RTRN
20:	LBL
21:	LBL
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INT_VAR: id=4; local=false
24:	LOAD_INT_VAR: id=1; local=true
25:	LOAD_INT_VAR: id=2; local=false
26:	LOAD_INT_VAR: id=4; local=false
27:	EQL_INT
28:	JMP: index=41, conditional=false
29:	LOAD_INT_VAR: id=1; local=true
30:	LOAD_INT_VAR: id=2; local=false
31:	COPY_INT_VAR: id=2; local=true
32:	LOAD_INT_VAR: id=3; local=false
33:	LOAD_INT_VAR: id=1; local=true
34:	STOR_INT_VAR: id=2; local=false
35:	LOAD_INT_VAR: id=1; local=true
36:	LOAD_INT_VAR: id=2; local=true
37:	STOR_INT_VAR: id=3; local=false
38:	LOAD_INT_VAR: id=2; local=true
39:	RTRN
40:	LBL
41:	LOAD_INT_VAR: id=1; local=true
42:	RTRN
--
---------------------------------------------------------
Method: id=3,5; name='Collection.Generic.Map:Split:o.Collection.Generic.TreeNode|K|V,'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=1; local=true
4:	EQL_INT
5:	JMP: index=10, conditional=false
6:	LOAD_INT_LIT: value=1
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=27
9:	LBL
10:	LOAD_INT_LIT: value=0
11:	LOAD_INT_VAR: id=1; local=true
12:	LOAD_INT_VAR: id=3; local=false
13:	EQL_INT
14:	JMP: index=19, conditional=false
15:	LOAD_INT_LIT: value=1
16:	STOR_INT_VAR: id=0; local=true
17:	JMP: index=26
18:	LBL
19:	LOAD_INT_LIT: value=0
20:	LOAD_INT_VAR: id=1; local=true
21:	LOAD_INT_VAR: id=3; local=false
22:	LOAD_INT_VAR: id=3; local=false
23:	EQL_INT
24:	STOR_INT_VAR: id=0; local=true
25:	LBL
26:	LBL
27:	LOAD_INT_VAR: id=0; local=true
28:	JMP: index=32, conditional=false
29:	LOAD_INT_VAR: id=1; local=true
30:	RTRN
31:	LBL
32:	LBL
33:	LOAD_INT_VAR: id=1; local=true
34:	LOAD_INT_VAR: id=4; local=false
35:	LOAD_INT_VAR: id=1; local=true
36:	LOAD_INT_VAR: id=3; local=false
37:	LOAD_INT_VAR: id=3; local=false
38:	LOAD_INT_VAR: id=4; local=false
39:	EQL_INT
40:	JMP: index=59, conditional=false
41:	LOAD_INT_VAR: id=1; local=true
42:	LOAD_INT_VAR: id=3; local=false
43:	COPY_INT_VAR: id=2; local=true
44:	LOAD_INT_VAR: id=2; local=false
45:	LOAD_INT_VAR: id=1; local=true
46:	STOR_INT_VAR: id=3; local=false
47:	LOAD_INT_VAR: id=1; local=true
48:	LOAD_INT_VAR: id=2; local=true
49:	STOR_INT_VAR: id=2; local=false
50:	LOAD_INT_LIT: value=1
51:	LOAD_INT_VAR: id=2; local=true
52:	LOAD_INT_VAR: id=4; local=false
53:	ADD_INT
54:	LOAD_INT_VAR: id=2; local=true
55:	STOR_INT_VAR: id=4; local=false
56:	LOAD_INT_VAR: id=2; local=true
57:	RTRN
58:	LBL
59:	LOAD_INT_VAR: id=1; local=true
60:	RTRN
--
---------------------------------------------------------
Method: id=3,23; name='Collection.Generic.Map:Successor:o.Collection.Generic.TreeNode|K|V,'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INT_VAR: id=3; local=false
5:	NEQL_INT
6:	JMP: index=24, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	LOAD_INT_VAR: id=3; local=false
9:	STOR_INT_VAR: id=1; local=true
10:	LBL
11:	LOAD_INT_LIT: value=0
12:	LOAD_INT_VAR: id=1; local=true
13:	LOAD_INT_VAR: id=3; local=false
14:	NEQL_INT
15:	JMP: index=21, conditional=false
16:	LOAD_INT_VAR: id=1; local=true
17:	LOAD_INT_VAR: id=3; local=false
18:	STOR_INT_VAR: id=1; local=true
19:	JMP: index=11
20:	LBL
21:	LOAD_INT_VAR: id=1; local=true
22:	RTRN
23:	LBL
24:	LOAD_INT_VAR: id=0; local=true
25:	RTRN
--
---------------------------------------------------------
Method: id=3,6; name='Collection.Generic.Map:Zip:o.Collection.Generic.CompareVector|K,o.Collection.Generic.Vector|V,'; return='o.Collection.Generic.Map|K|V';
  blocks=1; is_function=true; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: INT_PARM
  3: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=1; local=false
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=false
7:	EQL_INT
8:	JMP: index=40, conditional=false
9:	NEW_OBJ_INST: class='Collection.Generic.Map'
10:	MTHD_CALL: method='Collection.Generic.Map:New:'; native=false
11:	STOR_INT_VAR: id=3; local=true
12:	LOAD_INT_LIT: value=0
13:	STOR_INT_VAR: id=2; local=true
14:	LBL
15:	LOAD_INT_VAR: id=0; local=true
16:	LOAD_INT_VAR: id=1; local=false
17:	LOAD_INT_VAR: id=2; local=true
18:	LES_INT
19:	JMP: index=37, conditional=false
20:	LOAD_INT_VAR: id=2; local=true
21:	LOAD_INT_VAR: id=0; local=true
22:	MTHD_CALL: method='Collection.Generic.CompareVector:Get:i,'; native=false
23:	OBJ_INST_CAST: to='System.Compare', id=13
24:	OBJ_INST_CAST: to='System.Compare', id=13
25:	LOAD_INT_VAR: id=2; local=true
26:	LOAD_INT_VAR: id=1; local=true
27:	MTHD_CALL: method='Collection.Generic.Vector:Get:i,'; native=false
28:	LOAD_INT_VAR: id=3; local=true
29:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,'; native=false
30:	LBL
31:	LOAD_INT_LIT: value=1
32:	LOAD_INT_VAR: id=2; local=true
33:	ADD_INT
34:	STOR_INT_VAR: id=2; local=true
35:	JMP: index=15
36:	LBL
37:	LOAD_INT_VAR: id=3; local=true
38:	RTRN
39:	LBL
40:	LOAD_INT_LIT: value=0
41:	RTRN
--
=========================================================
Class: id=4; name='Collection.Generic.TreeNode'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=10; class_mem_size=0;
 instance_mem_size=40; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: OBJ_PARM
  3: OBJ_PARM
  4: INT_PARM
=========================================================
---------------------------------------------------------
Method: id=4,3; name='Collection.Generic.TreeNode:Get:'; return='o.V';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=4,2; name='Collection.Generic.TreeNode:GetKey:'; return='o.K';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	OBJ_INST_CAST: to='System.Compare', id=13
3:	RTRN
--
---------------------------------------------------------
Method: id=4,6; name='Collection.Generic.TreeNode:GetLeft:'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=4,4; name='Collection.Generic.TreeNode:GetLevel:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=4; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=4,8; name='Collection.Generic.TreeNode:GetRight:'; return='o.Collection.Generic.TreeNode|K|V';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=3; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=4,0; name='Collection.Generic.TreeNode:New:o.K,o.V,i,'; return='o.Collection.Generic.TreeNode';
  blocks=1; is_function=false; num_params=3; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=0; local=true
4:	OBJ_INST_CAST: to='System.Compare', id=13
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=0; local=false
7:	LOAD_INT_VAR: id=1; local=true
8:	LOAD_INST_MEM
9:	STOR_INT_VAR: id=1; local=false
10:	LOAD_INT_VAR: id=2; local=true
11:	LOAD_INST_MEM
12:	STOR_INT_VAR: id=4; local=false
13:	LOAD_INT_LIT: value=0
14:	LOAD_INST_MEM
15:	STOR_INT_VAR: id=2; local=false
16:	LOAD_INT_LIT: value=0
17:	LOAD_INST_MEM
18:	STOR_INT_VAR: id=3; local=false
19:	LOAD_INST_MEM
20:	RTRN
--
---------------------------------------------------------
Method: id=4,1; name='Collection.Generic.TreeNode:SetKey:o.K,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	OBJ_INST_CAST: to='System.Compare', id=13
3:	LOAD_INST_MEM
4:	STOR_INT_VAR: id=0; local=false
5:	RTRN
--
---------------------------------------------------------
Method: id=4,7; name='Collection.Generic.TreeNode:SetLeft:o.Collection.Generic.TreeNode|K|V,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=2; local=false
4:	RTRN
--
---------------------------------------------------------
Method: id=4,5; name='Collection.Generic.TreeNode:SetLevel:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=4; local=false
4:	RTRN
--
---------------------------------------------------------
Method: id=4,9; name='Collection.Generic.TreeNode:SetRight:o.Collection.Generic.TreeNode|K|V,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=3; local=false
4:	RTRN
--
=========================================================
Class: id=5; name='System.Number'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=2; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=5,1; name='System.Number:FloatToString:f,c*,'; return='n';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
  1: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_FLOAT_VAR: id=0; local=true
2:	LOAD_FLOAT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	F2S
5:	RTRN
--
---------------------------------------------------------
Method: id=5,0; name='System.Number:IntToString:i,i,c*,'; return='n';
  blocks=1; is_function=true; num_params=3; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INT_VAR: id=2; local=true
6:	I2S
7:	RTRN
--
=========================================================
Class: id=6; name='System.$Byte'; parent='System.Number'; pid=5;
 interface=false; virtual=0; num_generics=0; num_methods=38; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=6,14; name='System.$Byte:Abs:b,'; return='b';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=0; local=true
4:	LES_INT
5:	JMP: index=11, conditional=false
6:	LOAD_INT_LIT: value=-1
7:	LOAD_INT_VAR: id=0; local=true
8:	MUL_INT
9:	RTRN
10:	LBL
11:	LOAD_INT_VAR: id=0; local=true
12:	RTRN
--
---------------------------------------------------------
Method: id=6,6; name='System.$Byte:CRC32:b*,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3939
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,22; name='System.$Byte:Clear:b*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	ZERO_BYTE_ARY
3:	RTRN
--
---------------------------------------------------------
Method: id=6,9; name='System.$Byte:Compare:b,b,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LES_INT
6:	JMP: index=13, conditional=false
7:	LOAD_INT_LIT: value=-1
8:	LOAD_INT_VAR: id=0; local=true
9:	MUL_INT
10:	RTRN
11:	JMP: index=20
12:	LBL
13:	LOAD_INT_VAR: id=1; local=true
14:	LOAD_INT_VAR: id=0; local=true
15:	GTR_INT
16:	JMP: index=20, conditional=false
17:	LOAD_INT_VAR: id=0; local=true
18:	RTRN
19:	LBL
20:	LOAD_INT_LIT: value=0
21:	RTRN
--
---------------------------------------------------------
Method: id=6,4; name='System.$Byte:CompressBr:b*,'; return='b*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3941
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,2; name='System.$Byte:CompressGzip:b*,'; return='b*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3943
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,0; name='System.$Byte:CompressZlib:b*,'; return='b*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3945
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,19; name='System.$Byte:Error:b,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3952
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,20; name='System.$Byte:ErrorLine:b,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3952
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Error:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=6,36; name='System.$Byte:Find:b*,b*,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
  1: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Byte:Find:b*,i,b*,'; native=true
7:	RTRN
--
---------------------------------------------------------
Method: id=6,34; name='System.$Byte:Find:b*,b,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Byte:Find:b*,i,b,'; native=true
7:	RTRN
--
---------------------------------------------------------
Method: id=6,37; name='System.$Byte:Find:b*,i,b*,'; return='i';
  blocks=1; is_function=true; num_params=3; mem_size=88
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: BYTE_ARY_PARM
  2: INT_PARM
  3: BYTE_ARY_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_PARM
  8: INT_PARM
  9: INT_PARM
  10: OBJ_PARM
  11: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=3; local=true
1:	STOR_INT_VAR: id=2; local=true
2:	STOR_INT_VAR: id=1; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=10; local=true
6:	STOR_INT_VAR: id=11; local=true
7:	LOAD_INT_VAR: id=11; local=true
8:	LOAD_ARY_SIZE
9:	STOR_INT_VAR: id=5; local=true
10:	LOAD_INT_VAR: id=3; local=true
11:	LOAD_INST_MEM
12:	MTHD_CALL: method='System.$Byte:Size:b*,'; native=false
13:	STOR_INT_VAR: id=6; local=true
14:	LBL
15:	LOAD_INT_LIT: value=0
16:	LOAD_INT_VAR: id=6; local=true
17:	GTR_INT
18:	JMP: index=23, conditional=true
19:	LOAD_INT_LIT: value=0
20:	STOR_INT_VAR: id=0; local=true
21:	JMP: index=28
22:	LBL
23:	LOAD_INT_VAR: id=5; local=true
24:	LOAD_INT_VAR: id=2; local=true
25:	LES_INT
26:	STOR_INT_VAR: id=0; local=true
27:	LBL
28:	LOAD_INT_VAR: id=0; local=true
29:	JMP: index=127, conditional=false
30:	LOAD_INT_VAR: id=1; local=true
31:	LOAD_INT_VAR: id=2; local=true
32:	LOAD_INT_LIT: value=0
33:	LOAD_INT_VAR: id=3; local=true
34:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
35:	LOAD_INST_MEM
36:	MTHD_CALL: method='System.$Byte:Find:b*,i,b,'; native=true
37:	STOR_INT_VAR: id=7; local=true
38:	LBL
39:	LOAD_INT_LIT: value=-1
40:	LOAD_INT_VAR: id=7; local=true
41:	GTR_INT
42:	JMP: index=124, conditional=false
43:	LOAD_INT_VAR: id=7; local=true
44:	STOR_INT_VAR: id=8; local=true
45:	LOAD_INT_LIT: value=1
46:	STOR_INT_VAR: id=9; local=true
47:	LOAD_INT_LIT: value=0
48:	STOR_INT_VAR: id=4; local=true
49:	LBL
50:	LOAD_INT_VAR: id=9; local=true
51:	JMP: index=56, conditional=true
52:	LOAD_INT_LIT: value=0
53:	STOR_INT_VAR: id=0; local=true
54:	JMP: index=70
55:	LBL
56:	LOAD_INT_VAR: id=6; local=true
57:	LOAD_INT_VAR: id=4; local=true
58:	LES_INT
59:	JMP: index=64, conditional=true
60:	LOAD_INT_LIT: value=0
61:	STOR_INT_VAR: id=0; local=true
62:	JMP: index=69
63:	LBL
64:	LOAD_INT_VAR: id=5; local=true
65:	LOAD_INT_VAR: id=8; local=true
66:	LES_INT
67:	STOR_INT_VAR: id=0; local=true
68:	LBL
69:	LBL
70:	LOAD_INT_VAR: id=0; local=true
71:	JMP: index=95, conditional=false
72:	LBL
73:	LOAD_INT_VAR: id=8; local=true
74:	LOAD_INT_VAR: id=1; local=true
75:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
76:	LOAD_INT_VAR: id=4; local=true
77:	LOAD_INT_VAR: id=3; local=true
78:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
79:	NEQL_INT
80:	JMP: index=84, conditional=false
81:	LOAD_INT_LIT: value=0
82:	STOR_INT_VAR: id=9; local=true
83:	LBL
84:	LOAD_INT_LIT: value=1
85:	LOAD_INT_VAR: id=8; local=true
86:	ADD_INT
87:	STOR_INT_VAR: id=8; local=true
88:	LBL
89:	LOAD_INT_LIT: value=1
90:	LOAD_INT_VAR: id=4; local=true
91:	ADD_INT
92:	STOR_INT_VAR: id=4; local=true
93:	JMP: index=50
94:	LBL
95:	LBL
96:	LOAD_INT_VAR: id=9; local=true
97:	JMP: index=102, conditional=true
98:	LOAD_INT_LIT: value=0
99:	STOR_INT_VAR: id=0; local=true
100:	JMP: index=107
101:	LBL
102:	LOAD_INT_VAR: id=6; local=true
103:	LOAD_INT_VAR: id=4; local=true
104:	EQL_INT
105:	STOR_INT_VAR: id=0; local=true
106:	LBL
107:	LOAD_INT_VAR: id=0; local=true
108:	JMP: index=112, conditional=false
109:	LOAD_INT_VAR: id=7; local=true
110:	RTRN
111:	LBL
112:	LOAD_INT_VAR: id=1; local=true
113:	LOAD_INT_LIT: value=1
114:	LOAD_INT_VAR: id=7; local=true
115:	ADD_INT
116:	LOAD_INT_LIT: value=0
117:	LOAD_INT_VAR: id=3; local=true
118:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
119:	LOAD_INST_MEM
120:	MTHD_CALL: method='System.$Byte:Find:b*,i,b,'; native=true
121:	STOR_INT_VAR: id=7; local=true
122:	JMP: index=39
123:	LBL
124:	LOAD_INT_LIT: value=-1
125:	RTRN
126:	LBL
127:	LOAD_INT_LIT: value=-1
128:	RTRN
--
---------------------------------------------------------
Method: id=6,35; name='System.$Byte:Find:b*,i,b,'; return='i';
  blocks=1; is_function=true; num_params=3; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: BYTE_ARY_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
  5: OBJ_PARM
  6: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=3; local=true
1:	STOR_INT_VAR: id=2; local=true
2:	STOR_INT_VAR: id=1; local=true
3:	LBL
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=5; local=true
7:	STOR_INT_VAR: id=6; local=true
8:	LOAD_INT_VAR: id=6; local=true
9:	LOAD_ARY_SIZE
10:	LOAD_INT_VAR: id=2; local=true
11:	LES_INT
12:	JMP: index=17, conditional=true
13:	LOAD_INT_LIT: value=0
14:	STOR_INT_VAR: id=0; local=true
15:	JMP: index=22
16:	LBL
17:	LOAD_INT_LIT: value=-1
18:	LOAD_INT_VAR: id=2; local=true
19:	GTR_INT
20:	STOR_INT_VAR: id=0; local=true
21:	LBL
22:	LOAD_INT_VAR: id=0; local=true
23:	JMP: index=51, conditional=false
24:	LOAD_INT_VAR: id=2; local=true
25:	STOR_INT_VAR: id=4; local=true
26:	LBL
27:	LOAD_INT_VAR: id=1; local=true
28:	LOAD_INST_MEM
29:	MTHD_CALL: method='System.$Byte:Size:b*,'; native=false
30:	LOAD_INT_VAR: id=4; local=true
31:	LES_INT
32:	JMP: index=50, conditional=false
33:	LBL
34:	LOAD_INT_VAR: id=3; local=true
35:	LOAD_INT_VAR: id=4; local=true
36:	LOAD_INT_VAR: id=1; local=true
37:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
38:	EQL_INT
39:	JMP: index=43, conditional=false
40:	LOAD_INT_VAR: id=4; local=true
41:	RTRN
42:	LBL
43:	LBL
44:	LOAD_INT_LIT: value=1
45:	LOAD_INT_VAR: id=4; local=true
46:	ADD_INT
47:	STOR_INT_VAR: id=4; local=true
48:	JMP: index=27
49:	LBL
50:	LBL
51:	LOAD_INT_LIT: value=-1
52:	RTRN
--
---------------------------------------------------------
Method: id=6,33; name='System.$Byte:FindAll:b*,b*,'; return='i*';
  blocks=1; is_function=true; num_params=2; mem_size=104
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
  1: BYTE_ARY_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_ARY_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_ARY_PARM
  8: INT_ARY_PARM
  9: OBJ_PARM
  10: BYTE_ARY_PARM
  11: OBJ_PARM
  12: INT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=8
3:	COPY_INT_VAR: id=3; local=true
4:	NEW_INT_ARY: dimension=1
5:	STOR_INT_VAR: id=4; local=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=5; local=true
8:	LOAD_INT_LIT: value=0
9:	STOR_INT_VAR: id=6; local=true
10:	LBL
11:	LOAD_INT_VAR: id=0; local=true
12:	LOAD_INT_VAR: id=6; local=true
13:	LOAD_INT_VAR: id=1; local=true
14:	LOAD_INST_MEM
15:	MTHD_CALL: method='System.$Byte:Find:b*,i,b*,'; native=true
16:	STOR_INT_VAR: id=6; local=true
17:	LBL
18:	LOAD_INT_LIT: value=-1
19:	LOAD_INT_VAR: id=6; local=true
20:	GTR_INT
21:	JMP: index=68, conditional=false
22:	LOAD_INT_LIT: value=1
23:	LOAD_INT_VAR: id=5; local=true
24:	ADD_INT
25:	STOR_INT_VAR: id=5; local=true
26:	LBL
27:	LOAD_INT_VAR: id=3; local=true
28:	LOAD_INT_VAR: id=5; local=true
29:	LES_INT
30:	JMP: index=39, conditional=false
31:	LOAD_INT_VAR: id=6; local=true
32:	LOAD_INT_LIT: value=1
33:	LOAD_INT_VAR: id=5; local=true
34:	SUB_INT
35:	LOAD_INT_VAR: id=4; local=true
36:	STOR_INT_ARY_ELM: dimension=1; local=true
37:	JMP: index=58
38:	LBL
39:	LOAD_INT_LIT: value=1
40:	LOAD_INT_VAR: id=3; local=true
41:	SHL_INT
42:	NEW_INT_ARY: dimension=1
43:	COPY_INT_VAR: id=7; local=true
44:	LOAD_INT_LIT: value=0
45:	LOAD_INT_VAR: id=4; local=true
46:	LOAD_INT_LIT: value=0
47:	LOAD_INT_VAR: id=3; local=true
48:	LOAD_INST_MEM
49:	MTHD_CALL: method='System.Runtime:Copy:i*,i,i*,i,i,'; native=false
50:	POP_INT
51:	LOAD_INT_LIT: value=1
52:	LOAD_INT_VAR: id=3; local=true
53:	SHL_INT
54:	STOR_INT_VAR: id=3; local=true
55:	LOAD_INT_VAR: id=7; local=true
56:	STOR_INT_VAR: id=4; local=true
57:	LBL
58:	LOAD_INT_VAR: id=1; local=true
59:	LOAD_INST_MEM
60:	STOR_INT_VAR: id=9; local=true
61:	STOR_INT_VAR: id=10; local=true
62:	LOAD_INT_VAR: id=10; local=true
63:	LOAD_ARY_SIZE
64:	LOAD_INT_VAR: id=6; local=true
65:	ADD_INT
66:	STOR_INT_VAR: id=6; local=true
67:	LBL
68:	LBL
69:	LOAD_INT_LIT: value=-1
70:	LOAD_INT_VAR: id=6; local=true
71:	GTR_INT
72:	JMP: index=11, conditional=true
73:	LBL
74:	LOAD_INT_VAR: id=5; local=true
75:	NEW_INT_ARY: dimension=1
76:	STOR_INT_VAR: id=8; local=true
77:	LOAD_INT_LIT: value=0
78:	STOR_INT_VAR: id=2; local=true
79:	LBL
80:	LOAD_INT_VAR: id=8; local=true
81:	LOAD_INST_MEM
82:	STOR_INT_VAR: id=11; local=true
83:	STOR_INT_VAR: id=12; local=true
84:	LOAD_INT_VAR: id=12; local=true
85:	LOAD_ARY_SIZE
86:	LOAD_INT_VAR: id=2; local=true
87:	LES_INT
88:	JMP: index=102, conditional=false
89:	LOAD_INT_VAR: id=2; local=true
90:	LOAD_INT_VAR: id=4; local=true
91:	LOAD_INT_ARY_ELM: dimension=1; local=true
92:	LOAD_INT_VAR: id=2; local=true
93:	LOAD_INT_VAR: id=8; local=true
94:	STOR_INT_ARY_ELM: dimension=1; local=true
95:	LBL
96:	LOAD_INT_LIT: value=1
97:	LOAD_INT_VAR: id=2; local=true
98:	ADD_INT
99:	STOR_INT_VAR: id=2; local=true
100:	JMP: index=80
101:	LBL
102:	LOAD_INT_VAR: id=8; local=true
103:	RTRN
--
---------------------------------------------------------
Method: id=6,15; name='System.$Byte:IsNeg:b,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=0; local=true
4:	LES_INT
5:	JMP: index=9, conditional=false
6:	LOAD_INT_LIT: value=1
7:	RTRN
8:	LBL
9:	LOAD_INT_LIT: value=0
10:	RTRN
--
---------------------------------------------------------
Method: id=6,8; name='System.$Byte:Max:b,b,'; return='b';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	GTR_INT
6:	JMP: index=10, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	RTRN
9:	LBL
10:	LOAD_INT_VAR: id=1; local=true
11:	RTRN
--
---------------------------------------------------------
Method: id=6,7; name='System.$Byte:Min:b,b,'; return='b';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LES_INT
6:	JMP: index=10, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	RTRN
9:	LBL
10:	LOAD_INT_VAR: id=1; local=true
11:	RTRN
--
---------------------------------------------------------
Method: id=6,16; name='System.$Byte:NotNeg:b,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=0; local=true
4:	GTR_INT
5:	JMP: index=9, conditional=false
6:	LOAD_INT_LIT: value=1
7:	RTRN
8:	LBL
9:	LOAD_INT_LIT: value=0
10:	RTRN
--
---------------------------------------------------------
Method: id=6,17; name='System.$Byte:Print:b,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3968
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,18; name='System.$Byte:PrintLine:b,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3968
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Print:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=6,27; name='System.$Byte:Size:b***,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,26; name='System.$Byte:Size:b**,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,21; name='System.$Byte:Size:b*,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_ARY_SIZE
3:	RTRN
--
---------------------------------------------------------
Method: id=6,13; name='System.$Byte:Size:b,'; return='b';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=6,24; name='System.$Byte:Sort:b*,'; return='b*';
  blocks=1; is_function=true; num_params=1; mem_size=40
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
  1: INT_PARM
  2: BYTE_ARY_PARM
  3: OBJ_PARM
  4: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=3; local=true
4:	STOR_INT_VAR: id=4; local=true
5:	LOAD_INT_VAR: id=4; local=true
6:	LOAD_ARY_SIZE
7:	STOR_INT_VAR: id=1; local=true
8:	LBL
9:	LOAD_INT_LIT: value=1
10:	LOAD_INT_VAR: id=1; local=true
11:	LES_EQL_INT
12:	JMP: index=16, conditional=false
13:	LOAD_INT_VAR: id=0; local=true
14:	RTRN
15:	LBL
16:	LOAD_INT_VAR: id=1; local=true
17:	NEW_BYTE_ARY: dimension=1
18:	COPY_INT_VAR: id=2; local=true
19:	LOAD_INT_LIT: value=0
20:	LOAD_INT_VAR: id=0; local=true
21:	LOAD_INT_LIT: value=0
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INST_MEM
24:	MTHD_CALL: method='System.Runtime:Copy:b*,i,b*,i,i,'; native=false
25:	POP_INT
26:	LOAD_INT_VAR: id=2; local=true
27:	LOAD_INT_LIT: value=0
28:	LOAD_INT_LIT: value=1
29:	LOAD_INT_VAR: id=1; local=true
30:	SUB_INT
31:	LOAD_INST_MEM
32:	MTHD_CALL: method='System.$Byte:Sort:b*,i,i,'; native=true
33:	LOAD_INT_VAR: id=2; local=true
34:	RTRN
--
---------------------------------------------------------
Method: id=6,25; name='System.$Byte:Sort:b*,i,i,'; return='n';
  blocks=1; is_function=true; num_params=3; mem_size=56
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=3; local=true
5:	LOAD_INT_VAR: id=2; local=true
6:	STOR_INT_VAR: id=4; local=true
7:	LOAD_INT_LIT: value=2
8:	LOAD_INT_VAR: id=1; local=true
9:	LOAD_INT_VAR: id=2; local=true
10:	SUB_INT
11:	DIV_INT
12:	LOAD_INT_VAR: id=1; local=true
13:	ADD_INT
14:	LOAD_INT_VAR: id=0; local=true
15:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
16:	STOR_INT_VAR: id=5; local=true
17:	LBL
18:	LOAD_INT_VAR: id=4; local=true
19:	LOAD_INT_VAR: id=3; local=true
20:	LES_EQL_INT
21:	JMP: index=78, conditional=false
22:	LBL
23:	LOAD_INT_VAR: id=5; local=true
24:	LOAD_INT_VAR: id=3; local=true
25:	LOAD_INT_VAR: id=0; local=true
26:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
27:	LES_INT
28:	JMP: index=35, conditional=false
29:	LOAD_INT_LIT: value=1
30:	LOAD_INT_VAR: id=3; local=true
31:	ADD_INT
32:	STOR_INT_VAR: id=3; local=true
33:	JMP: index=23
34:	LBL
35:	LBL
36:	LOAD_INT_VAR: id=5; local=true
37:	LOAD_INT_VAR: id=4; local=true
38:	LOAD_INT_VAR: id=0; local=true
39:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
40:	GTR_INT
41:	JMP: index=48, conditional=false
42:	LOAD_INT_LIT: value=1
43:	LOAD_INT_VAR: id=4; local=true
44:	SUB_INT
45:	STOR_INT_VAR: id=4; local=true
46:	JMP: index=36
47:	LBL
48:	LBL
49:	LOAD_INT_VAR: id=4; local=true
50:	LOAD_INT_VAR: id=3; local=true
51:	LES_EQL_INT
52:	JMP: index=76, conditional=false
53:	LOAD_INT_VAR: id=3; local=true
54:	LOAD_INT_VAR: id=0; local=true
55:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
56:	STOR_INT_VAR: id=6; local=true
57:	LOAD_INT_VAR: id=4; local=true
58:	LOAD_INT_VAR: id=0; local=true
59:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
60:	LOAD_INT_VAR: id=3; local=true
61:	LOAD_INT_VAR: id=0; local=true
62:	STOR_BYTE_ARY_ELM: dimension=1; local=true
63:	LOAD_INT_VAR: id=6; local=true
64:	LOAD_INT_VAR: id=4; local=true
65:	LOAD_INT_VAR: id=0; local=true
66:	STOR_BYTE_ARY_ELM: dimension=1; local=true
67:	LOAD_INT_LIT: value=1
68:	LOAD_INT_VAR: id=3; local=true
69:	ADD_INT
70:	STOR_INT_VAR: id=3; local=true
71:	LOAD_INT_LIT: value=1
72:	LOAD_INT_VAR: id=4; local=true
73:	SUB_INT
74:	STOR_INT_VAR: id=4; local=true
75:	LBL
76:	JMP: index=18
77:	LBL
78:	LBL
79:	LOAD_INT_VAR: id=4; local=true
80:	LOAD_INT_VAR: id=1; local=true
81:	LES_INT
82:	JMP: index=89, conditional=false
83:	LOAD_INT_VAR: id=0; local=true
84:	LOAD_INT_VAR: id=1; local=true
85:	LOAD_INT_VAR: id=4; local=true
86:	LOAD_INST_MEM
87:	MTHD_CALL: method='System.$Byte:Sort:b*,i,i,'; native=true
88:	LBL
89:	LBL
90:	LOAD_INT_VAR: id=2; local=true
91:	LOAD_INT_VAR: id=3; local=true
92:	LES_INT
93:	JMP: index=100, conditional=false
94:	LOAD_INT_VAR: id=0; local=true
95:	LOAD_INT_VAR: id=3; local=true
96:	LOAD_INT_VAR: id=2; local=true
97:	LOAD_INST_MEM
98:	MTHD_CALL: method='System.$Byte:Sort:b*,i,i,'; native=true
99:	LBL
100:	RTRN
--
---------------------------------------------------------
Method: id=6,28; name='System.$Byte:ToBinaryString:b,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	NEW_OBJ_INST: class='System.String'
2:	MTHD_CALL: method='System.String:New:'; native=false
3:	STOR_INT_VAR: id=2; local=true
4:	LBL
5:	LOAD_INT_LIT: value=0
6:	LOAD_INT_LIT: value=1
7:	LOAD_INT_VAR: id=1; local=true
8:	BIT_AND_INT
9:	EQL_INT
10:	JMP: index=15, conditional=false
11:	LOAD_CHAR_LIT value='0'
12:	STOR_INT_VAR: id=0; local=true
13:	JMP: index=18
14:	LBL
15:	LOAD_CHAR_LIT value='1'
16:	STOR_INT_VAR: id=0; local=true
17:	LBL
18:	LOAD_INT_VAR: id=0; local=true
19:	LOAD_INT_VAR: id=2; local=true
20:	MTHD_CALL: method='System.String:Append:c,'; native=false
21:	LOAD_INT_LIT: value=1
22:	LOAD_INT_VAR: id=1; local=true
23:	SHR_INT
24:	STOR_INT_VAR: id=1; local=true
25:	LBL
26:	LOAD_INT_LIT: value=0
27:	LOAD_INT_VAR: id=1; local=true
28:	NEQL_INT
29:	JMP: index=5, conditional=true
30:	LBL
31:	LOAD_INT_VAR: id=2; local=true
32:	MTHD_CALL: method='System.String:Reverse:'; native=true
33:	RTRN
--
---------------------------------------------------------
Method: id=6,11; name='System.$Byte:ToChar:b,'; return='c';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=6,10; name='System.$Byte:ToFloat:b,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	I2F
3:	RTRN
--
---------------------------------------------------------
Method: id=6,30; name='System.$Byte:ToHexString:b*,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=80
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
  4: OBJ_PARM
  5: BYTE_ARY_PARM
  6: OBJ_PARM
  7: INT_PARM
  8: INT_PARM
  9: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	NEW_OBJ_INST: class='System.String'
2:	MTHD_CALL: method='System.String:New:'; native=false
3:	STOR_INT_VAR: id=2; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=1; local=true
6:	LBL
7:	LOAD_INT_VAR: id=0; local=true
8:	LOAD_INST_MEM
9:	STOR_INT_VAR: id=4; local=true
10:	STOR_INT_VAR: id=5; local=true
11:	LOAD_INT_VAR: id=5; local=true
12:	LOAD_ARY_SIZE
13:	LOAD_INT_VAR: id=1; local=true
14:	LES_INT
15:	JMP: index=43, conditional=false
16:	LOAD_INT_LIT: value=16
17:	NEW_CHAR_ARY: dimension=1
18:	STOR_INT_VAR: id=3; local=true
19:	LOAD_INT_VAR: id=1; local=true
20:	LOAD_INT_VAR: id=0; local=true
21:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
22:	LOAD_INT_LIT: value=16
23:	LOAD_INT_VAR: id=3; local=true
24:	LOAD_INST_MEM
25:	STOR_INT_VAR: id=6; local=true
26:	STOR_INT_VAR: id=9; local=true
27:	STOR_INT_VAR: id=8; local=true
28:	STOR_INT_VAR: id=7; local=true
29:	LOAD_INT_VAR: id=7; local=true
30:	LOAD_INT_VAR: id=8; local=true
31:	LOAD_INT_VAR: id=9; local=true
32:	I2S
33:	LOAD_INT_VAR: id=3; local=true
34:	LOAD_INT_VAR: id=2; local=true
35:	MTHD_CALL: method='System.String:Append:c*,'; native=false
36:	LBL
37:	LOAD_INT_LIT: value=1
38:	LOAD_INT_VAR: id=1; local=true
39:	ADD_INT
40:	STOR_INT_VAR: id=1; local=true
41:	JMP: index=7
42:	LBL
43:	LOAD_INT_VAR: id=2; local=true
44:	RTRN
--
---------------------------------------------------------
Method: id=6,29; name='System.$Byte:ToHexString:b,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: OBJ_PARM
  3: INT_PARM
  4: INT_PARM
  5: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=16
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LOAD_INT_LIT: value=16
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=2; local=true
9:	STOR_INT_VAR: id=5; local=true
10:	STOR_INT_VAR: id=4; local=true
11:	STOR_INT_VAR: id=3; local=true
12:	LOAD_INT_VAR: id=3; local=true
13:	LOAD_INT_VAR: id=4; local=true
14:	LOAD_INT_VAR: id=5; local=true
15:	I2S
16:	LOAD_INT_VAR: id=1; local=true
17:	LOAD_INT_LIT: value=0
18:	NEW_OBJ_INST: class='System.String'
19:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
20:	RTRN
--
---------------------------------------------------------
Method: id=6,12; name='System.$Byte:ToInt:b,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=6,32; name='System.$Byte:ToString:b*,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	NEW_OBJ_INST: class='System.String'
3:	MTHD_CALL: method='System.String:New:b*,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=6,31; name='System.$Byte:ToString:b,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: OBJ_PARM
  3: INT_PARM
  4: INT_PARM
  5: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=16
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LOAD_INT_LIT: value=10
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=2; local=true
9:	STOR_INT_VAR: id=5; local=true
10:	STOR_INT_VAR: id=4; local=true
11:	STOR_INT_VAR: id=3; local=true
12:	LOAD_INT_VAR: id=3; local=true
13:	LOAD_INT_VAR: id=4; local=true
14:	LOAD_INT_VAR: id=5; local=true
15:	I2S
16:	LOAD_INT_VAR: id=1; local=true
17:	LOAD_INT_LIT: value=0
18:	NEW_OBJ_INST: class='System.String'
19:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
20:	RTRN
--
---------------------------------------------------------
Method: id=6,23; name='System.$Byte:ToUnicode:b*,'; return='c*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3990
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,5; name='System.$Byte:UncompressBr:b*,'; return='b*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3940
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,3; name='System.$Byte:UncompressGzip:b*,'; return='b*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3942
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=6,1; name='System.$Byte:UncompressZlib:b*,'; return='b*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3944
3:	TRAP_RTRN: args=2
4:	RTRN
--
=========================================================
Class: id=7; name='System.$Char'; parent='System.Number'; pid=5;
 interface=false; virtual=0; num_generics=0; num_methods=35; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=7,25; name='System.$Char:Clear:c*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	ZERO_CHAR_ARY
3:	RTRN
--
---------------------------------------------------------
Method: id=7,8; name='System.$Char:Compare:c,c,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LES_INT
6:	JMP: index=13, conditional=false
7:	LOAD_INT_LIT: value=-1
8:	LOAD_INT_VAR: id=0; local=true
9:	MUL_INT
10:	RTRN
11:	JMP: index=20
12:	LBL
13:	LOAD_INT_VAR: id=1; local=true
14:	LOAD_INT_VAR: id=0; local=true
15:	GTR_INT
16:	JMP: index=20, conditional=false
17:	LOAD_INT_VAR: id=0; local=true
18:	RTRN
19:	LBL
20:	LOAD_INT_LIT: value=0
21:	RTRN
--
---------------------------------------------------------
Method: id=7,22; name='System.$Char:Error:c*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3948
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=7,20; name='System.$Char:Error:c,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3951
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=7,23; name='System.$Char:ErrorLine:c*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3948
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Error:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=7,21; name='System.$Char:ErrorLine:c,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3951
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Error:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=7,33; name='System.$Char:Find:c*,c*,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Find:c*,i,c*,'; native=true
7:	RTRN
--
---------------------------------------------------------
Method: id=7,31; name='System.$Char:Find:c*,c,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Find:c*,i,c,'; native=true
7:	RTRN
--
---------------------------------------------------------
Method: id=7,34; name='System.$Char:Find:c*,i,c*,'; return='i';
  blocks=1; is_function=true; num_params=3; mem_size=88
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: INT_PARM
  3: CHAR_ARY_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_PARM
  8: INT_PARM
  9: INT_PARM
  10: OBJ_PARM
  11: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=3; local=true
1:	STOR_INT_VAR: id=2; local=true
2:	STOR_INT_VAR: id=1; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=10; local=true
6:	STOR_INT_VAR: id=11; local=true
7:	LOAD_INT_VAR: id=11; local=true
8:	LOAD_ARY_SIZE
9:	STOR_INT_VAR: id=5; local=true
10:	LOAD_INT_VAR: id=3; local=true
11:	LOAD_INST_MEM
12:	MTHD_CALL: method='System.$Char:Size:c*,'; native=false
13:	STOR_INT_VAR: id=6; local=true
14:	LBL
15:	LOAD_INT_LIT: value=0
16:	LOAD_INT_VAR: id=6; local=true
17:	GTR_INT
18:	JMP: index=23, conditional=true
19:	LOAD_INT_LIT: value=0
20:	STOR_INT_VAR: id=0; local=true
21:	JMP: index=28
22:	LBL
23:	LOAD_INT_VAR: id=5; local=true
24:	LOAD_INT_VAR: id=2; local=true
25:	LES_INT
26:	STOR_INT_VAR: id=0; local=true
27:	LBL
28:	LOAD_INT_VAR: id=0; local=true
29:	JMP: index=127, conditional=false
30:	LOAD_INT_VAR: id=1; local=true
31:	LOAD_INT_VAR: id=2; local=true
32:	LOAD_INT_LIT: value=0
33:	LOAD_INT_VAR: id=3; local=true
34:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
35:	LOAD_INST_MEM
36:	MTHD_CALL: method='System.$Char:Find:c*,i,c,'; native=true
37:	STOR_INT_VAR: id=7; local=true
38:	LBL
39:	LOAD_INT_LIT: value=-1
40:	LOAD_INT_VAR: id=7; local=true
41:	GTR_INT
42:	JMP: index=124, conditional=false
43:	LOAD_INT_VAR: id=7; local=true
44:	STOR_INT_VAR: id=8; local=true
45:	LOAD_INT_LIT: value=1
46:	STOR_INT_VAR: id=9; local=true
47:	LOAD_INT_LIT: value=0
48:	STOR_INT_VAR: id=4; local=true
49:	LBL
50:	LOAD_INT_VAR: id=9; local=true
51:	JMP: index=56, conditional=true
52:	LOAD_INT_LIT: value=0
53:	STOR_INT_VAR: id=0; local=true
54:	JMP: index=70
55:	LBL
56:	LOAD_INT_VAR: id=6; local=true
57:	LOAD_INT_VAR: id=4; local=true
58:	LES_INT
59:	JMP: index=64, conditional=true
60:	LOAD_INT_LIT: value=0
61:	STOR_INT_VAR: id=0; local=true
62:	JMP: index=69
63:	LBL
64:	LOAD_INT_VAR: id=5; local=true
65:	LOAD_INT_VAR: id=8; local=true
66:	LES_INT
67:	STOR_INT_VAR: id=0; local=true
68:	LBL
69:	LBL
70:	LOAD_INT_VAR: id=0; local=true
71:	JMP: index=95, conditional=false
72:	LBL
73:	LOAD_INT_VAR: id=8; local=true
74:	LOAD_INT_VAR: id=1; local=true
75:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
76:	LOAD_INT_VAR: id=4; local=true
77:	LOAD_INT_VAR: id=3; local=true
78:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
79:	NEQL_INT
80:	JMP: index=84, conditional=false
81:	LOAD_INT_LIT: value=0
82:	STOR_INT_VAR: id=9; local=true
83:	LBL
84:	LOAD_INT_LIT: value=1
85:	LOAD_INT_VAR: id=8; local=true
86:	ADD_INT
87:	STOR_INT_VAR: id=8; local=true
88:	LBL
89:	LOAD_INT_LIT: value=1
90:	LOAD_INT_VAR: id=4; local=true
91:	ADD_INT
92:	STOR_INT_VAR: id=4; local=true
93:	JMP: index=50
94:	LBL
95:	LBL
96:	LOAD_INT_VAR: id=9; local=true
97:	JMP: index=102, conditional=true
98:	LOAD_INT_LIT: value=0
99:	STOR_INT_VAR: id=0; local=true
100:	JMP: index=107
101:	LBL
102:	LOAD_INT_VAR: id=6; local=true
103:	LOAD_INT_VAR: id=4; local=true
104:	EQL_INT
105:	STOR_INT_VAR: id=0; local=true
106:	LBL
107:	LOAD_INT_VAR: id=0; local=true
108:	JMP: index=112, conditional=false
109:	LOAD_INT_VAR: id=7; local=true
110:	RTRN
111:	LBL
112:	LOAD_INT_VAR: id=1; local=true
113:	LOAD_INT_LIT: value=1
114:	LOAD_INT_VAR: id=7; local=true
115:	ADD_INT
116:	LOAD_INT_LIT: value=0
117:	LOAD_INT_VAR: id=3; local=true
118:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
119:	LOAD_INST_MEM
120:	MTHD_CALL: method='System.$Char:Find:c*,i,c,'; native=true
121:	STOR_INT_VAR: id=7; local=true
122:	JMP: index=39
123:	LBL
124:	LOAD_INT_LIT: value=-1
125:	RTRN
126:	LBL
127:	LOAD_INT_LIT: value=-1
128:	RTRN
--
---------------------------------------------------------
Method: id=7,32; name='System.$Char:Find:c*,i,c,'; return='i';
  blocks=1; is_function=true; num_params=3; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: INT_PARM
  3: CHAR_PARM
  4: INT_PARM
  5: OBJ_PARM
  6: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=3; local=true
1:	STOR_INT_VAR: id=2; local=true
2:	STOR_INT_VAR: id=1; local=true
3:	LBL
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=5; local=true
7:	STOR_INT_VAR: id=6; local=true
8:	LOAD_INT_VAR: id=6; local=true
9:	LOAD_ARY_SIZE
10:	LOAD_INT_VAR: id=2; local=true
11:	LES_INT
12:	JMP: index=17, conditional=true
13:	LOAD_INT_LIT: value=0
14:	STOR_INT_VAR: id=0; local=true
15:	JMP: index=22
16:	LBL
17:	LOAD_INT_LIT: value=-1
18:	LOAD_INT_VAR: id=2; local=true
19:	GTR_INT
20:	STOR_INT_VAR: id=0; local=true
21:	LBL
22:	LOAD_INT_VAR: id=0; local=true
23:	JMP: index=51, conditional=false
24:	LOAD_INT_VAR: id=2; local=true
25:	STOR_INT_VAR: id=4; local=true
26:	LBL
27:	LOAD_INT_VAR: id=1; local=true
28:	LOAD_INST_MEM
29:	MTHD_CALL: method='System.$Char:Size:c*,'; native=false
30:	LOAD_INT_VAR: id=4; local=true
31:	LES_INT
32:	JMP: index=50, conditional=false
33:	LBL
34:	LOAD_INT_VAR: id=3; local=true
35:	LOAD_INT_VAR: id=4; local=true
36:	LOAD_INT_VAR: id=1; local=true
37:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
38:	EQL_INT
39:	JMP: index=43, conditional=false
40:	LOAD_INT_VAR: id=4; local=true
41:	RTRN
42:	LBL
43:	LBL
44:	LOAD_INT_LIT: value=1
45:	LOAD_INT_VAR: id=4; local=true
46:	ADD_INT
47:	STOR_INT_VAR: id=4; local=true
48:	JMP: index=27
49:	LBL
50:	LBL
51:	LOAD_INT_LIT: value=-1
52:	RTRN
--
---------------------------------------------------------
Method: id=7,30; name='System.$Char:FindAll:c*,c*,'; return='i*';
  blocks=1; is_function=true; num_params=2; mem_size=104
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: CHAR_ARY_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_ARY_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_ARY_PARM
  8: INT_ARY_PARM
  9: OBJ_PARM
  10: CHAR_ARY_PARM
  11: OBJ_PARM
  12: INT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=8
3:	COPY_INT_VAR: id=3; local=true
4:	NEW_INT_ARY: dimension=1
5:	STOR_INT_VAR: id=4; local=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=5; local=true
8:	LOAD_INT_LIT: value=0
9:	STOR_INT_VAR: id=6; local=true
10:	LBL
11:	LOAD_INT_VAR: id=0; local=true
12:	LOAD_INT_VAR: id=6; local=true
13:	LOAD_INT_VAR: id=1; local=true
14:	LOAD_INST_MEM
15:	MTHD_CALL: method='System.$Char:Find:c*,i,c*,'; native=true
16:	STOR_INT_VAR: id=6; local=true
17:	LBL
18:	LOAD_INT_LIT: value=-1
19:	LOAD_INT_VAR: id=6; local=true
20:	GTR_INT
21:	JMP: index=68, conditional=false
22:	LOAD_INT_LIT: value=1
23:	LOAD_INT_VAR: id=5; local=true
24:	ADD_INT
25:	STOR_INT_VAR: id=5; local=true
26:	LBL
27:	LOAD_INT_VAR: id=3; local=true
28:	LOAD_INT_VAR: id=5; local=true
29:	LES_INT
30:	JMP: index=39, conditional=false
31:	LOAD_INT_VAR: id=6; local=true
32:	LOAD_INT_LIT: value=1
33:	LOAD_INT_VAR: id=5; local=true
34:	SUB_INT
35:	LOAD_INT_VAR: id=4; local=true
36:	STOR_INT_ARY_ELM: dimension=1; local=true
37:	JMP: index=58
38:	LBL
39:	LOAD_INT_LIT: value=1
40:	LOAD_INT_VAR: id=3; local=true
41:	SHL_INT
42:	NEW_INT_ARY: dimension=1
43:	COPY_INT_VAR: id=7; local=true
44:	LOAD_INT_LIT: value=0
45:	LOAD_INT_VAR: id=4; local=true
46:	LOAD_INT_LIT: value=0
47:	LOAD_INT_VAR: id=3; local=true
48:	LOAD_INST_MEM
49:	MTHD_CALL: method='System.Runtime:Copy:i*,i,i*,i,i,'; native=false
50:	POP_INT
51:	LOAD_INT_LIT: value=1
52:	LOAD_INT_VAR: id=3; local=true
53:	SHL_INT
54:	STOR_INT_VAR: id=3; local=true
55:	LOAD_INT_VAR: id=7; local=true
56:	STOR_INT_VAR: id=4; local=true
57:	LBL
58:	LOAD_INT_VAR: id=1; local=true
59:	LOAD_INST_MEM
60:	STOR_INT_VAR: id=9; local=true
61:	STOR_INT_VAR: id=10; local=true
62:	LOAD_INT_VAR: id=10; local=true
63:	LOAD_ARY_SIZE
64:	LOAD_INT_VAR: id=6; local=true
65:	ADD_INT
66:	STOR_INT_VAR: id=6; local=true
67:	LBL
68:	LBL
69:	LOAD_INT_LIT: value=-1
70:	LOAD_INT_VAR: id=6; local=true
71:	GTR_INT
72:	JMP: index=11, conditional=true
73:	LBL
74:	LOAD_INT_VAR: id=5; local=true
75:	NEW_INT_ARY: dimension=1
76:	STOR_INT_VAR: id=8; local=true
77:	LOAD_INT_LIT: value=0
78:	STOR_INT_VAR: id=2; local=true
79:	LBL
80:	LOAD_INT_VAR: id=8; local=true
81:	LOAD_INST_MEM
82:	STOR_INT_VAR: id=11; local=true
83:	STOR_INT_VAR: id=12; local=true
84:	LOAD_INT_VAR: id=12; local=true
85:	LOAD_ARY_SIZE
86:	LOAD_INT_VAR: id=2; local=true
87:	LES_INT
88:	JMP: index=102, conditional=false
89:	LOAD_INT_VAR: id=2; local=true
90:	LOAD_INT_VAR: id=4; local=true
91:	LOAD_INT_ARY_ELM: dimension=1; local=true
92:	LOAD_INT_VAR: id=2; local=true
93:	LOAD_INT_VAR: id=8; local=true
94:	STOR_INT_ARY_ELM: dimension=1; local=true
95:	LBL
96:	LOAD_INT_LIT: value=1
97:	LOAD_INT_VAR: id=2; local=true
98:	ADD_INT
99:	STOR_INT_VAR: id=2; local=true
100:	JMP: index=80
101:	LBL
102:	LOAD_INT_VAR: id=8; local=true
103:	RTRN
--
---------------------------------------------------------
Method: id=7,10; name='System.$Char:IsChar:c,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_CHAR_LIT value='a'
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_EQL_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=15
9:	LBL
10:	LOAD_CHAR_LIT value='z'
11:	LOAD_INT_VAR: id=1; local=true
12:	LES_EQL_INT
13:	STOR_INT_VAR: id=0; local=true
14:	LBL
15:	LOAD_INT_VAR: id=0; local=true
16:	JMP: index=21, conditional=false
17:	LOAD_INT_LIT: value=1
18:	STOR_INT_VAR: id=0; local=true
19:	JMP: index=35
20:	LBL
21:	LOAD_CHAR_LIT value='A'
22:	LOAD_INT_VAR: id=1; local=true
23:	GTR_EQL_INT
24:	JMP: index=29, conditional=true
25:	LOAD_INT_LIT: value=0
26:	STOR_INT_VAR: id=0; local=true
27:	JMP: index=34
28:	LBL
29:	LOAD_CHAR_LIT value='Z'
30:	LOAD_INT_VAR: id=1; local=true
31:	LES_EQL_INT
32:	STOR_INT_VAR: id=0; local=true
33:	LBL
34:	LBL
35:	LOAD_INT_VAR: id=0; local=true
36:	JMP: index=40, conditional=false
37:	LOAD_INT_LIT: value=1
38:	RTRN
39:	LBL
40:	LOAD_INT_LIT: value=0
41:	RTRN
--
---------------------------------------------------------
Method: id=7,9; name='System.$Char:IsDigit:c,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_CHAR_LIT value='0'
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_EQL_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=15
9:	LBL
10:	LOAD_CHAR_LIT value='9'
11:	LOAD_INT_VAR: id=1; local=true
12:	LES_EQL_INT
13:	STOR_INT_VAR: id=0; local=true
14:	LBL
15:	LOAD_INT_VAR: id=0; local=true
16:	JMP: index=20, conditional=false
17:	LOAD_INT_LIT: value=1
18:	RTRN
19:	LBL
20:	LOAD_INT_LIT: value=0
21:	RTRN
--
---------------------------------------------------------
Method: id=7,6; name='System.$Char:IsLower:c,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_CHAR_LIT value='a'
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_EQL_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=15
9:	LBL
10:	LOAD_CHAR_LIT value='z'
11:	LOAD_INT_VAR: id=1; local=true
12:	LES_EQL_INT
13:	STOR_INT_VAR: id=0; local=true
14:	LBL
15:	LOAD_INT_VAR: id=0; local=true
16:	JMP: index=20, conditional=false
17:	LOAD_INT_LIT: value=1
18:	RTRN
19:	LBL
20:	LOAD_INT_LIT: value=0
21:	RTRN
--
---------------------------------------------------------
Method: id=7,7; name='System.$Char:IsUpper:c,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_CHAR_LIT value='A'
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_EQL_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=15
9:	LBL
10:	LOAD_CHAR_LIT value='Z'
11:	LOAD_INT_VAR: id=1; local=true
12:	LES_EQL_INT
13:	STOR_INT_VAR: id=0; local=true
14:	LBL
15:	LOAD_INT_VAR: id=0; local=true
16:	JMP: index=20, conditional=false
17:	LOAD_INT_LIT: value=1
18:	RTRN
19:	LBL
20:	LOAD_INT_LIT: value=0
21:	RTRN
--
---------------------------------------------------------
Method: id=7,12; name='System.$Char:Max:c,c,'; return='c';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	GTR_INT
6:	JMP: index=10, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	RTRN
9:	LBL
10:	LOAD_INT_VAR: id=1; local=true
11:	RTRN
--
---------------------------------------------------------
Method: id=7,11; name='System.$Char:Min:c,c,'; return='c';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LES_INT
6:	JMP: index=10, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	RTRN
9:	LBL
10:	LOAD_INT_VAR: id=1; local=true
11:	RTRN
--
---------------------------------------------------------
Method: id=7,17; name='System.$Char:Print:c*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3959
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=7,13; name='System.$Char:Print:c,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3967
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=7,18; name='System.$Char:PrintLine:c*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3959
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Print:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=7,14; name='System.$Char:PrintLine:c,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3967
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Print:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=7,28; name='System.$Char:Size:c***,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=7,27; name='System.$Char:Size:c**,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=7,24; name='System.$Char:Size:c*,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_ARY_SIZE
3:	RTRN
--
---------------------------------------------------------
Method: id=7,1; name='System.$Char:Size:c,'; return='c';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=7,15; name='System.$Char:Sort:c*,'; return='c*';
  blocks=1; is_function=true; num_params=1; mem_size=40
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: INT_PARM
  2: CHAR_ARY_PARM
  3: OBJ_PARM
  4: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=3; local=true
4:	STOR_INT_VAR: id=4; local=true
5:	LOAD_INT_VAR: id=4; local=true
6:	LOAD_ARY_SIZE
7:	STOR_INT_VAR: id=1; local=true
8:	LBL
9:	LOAD_INT_LIT: value=1
10:	LOAD_INT_VAR: id=1; local=true
11:	LES_EQL_INT
12:	JMP: index=16, conditional=false
13:	LOAD_INT_VAR: id=0; local=true
14:	RTRN
15:	LBL
16:	LOAD_INT_VAR: id=1; local=true
17:	NEW_CHAR_ARY: dimension=1
18:	COPY_INT_VAR: id=2; local=true
19:	LOAD_INT_LIT: value=0
20:	LOAD_INT_VAR: id=0; local=true
21:	LOAD_INT_LIT: value=0
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INST_MEM
24:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
25:	POP_INT
26:	LOAD_INT_VAR: id=2; local=true
27:	LOAD_INT_LIT: value=0
28:	LOAD_INT_LIT: value=1
29:	LOAD_INT_VAR: id=1; local=true
30:	SUB_INT
31:	LOAD_INST_MEM
32:	MTHD_CALL: method='System.$Char:Sort:c*,i,i,'; native=true
33:	LOAD_INT_VAR: id=2; local=true
34:	RTRN
--
---------------------------------------------------------
Method: id=7,16; name='System.$Char:Sort:c*,i,i,'; return='n';
  blocks=1; is_function=true; num_params=3; mem_size=56
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
  5: CHAR_PARM
  6: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=3; local=true
5:	LOAD_INT_VAR: id=2; local=true
6:	STOR_INT_VAR: id=4; local=true
7:	LOAD_INT_LIT: value=2
8:	LOAD_INT_VAR: id=1; local=true
9:	LOAD_INT_VAR: id=2; local=true
10:	SUB_INT
11:	DIV_INT
12:	LOAD_INT_VAR: id=1; local=true
13:	ADD_INT
14:	LOAD_INT_VAR: id=0; local=true
15:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
16:	STOR_INT_VAR: id=5; local=true
17:	LBL
18:	LOAD_INT_VAR: id=4; local=true
19:	LOAD_INT_VAR: id=3; local=true
20:	LES_EQL_INT
21:	JMP: index=78, conditional=false
22:	LBL
23:	LOAD_INT_VAR: id=5; local=true
24:	LOAD_INT_VAR: id=3; local=true
25:	LOAD_INT_VAR: id=0; local=true
26:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
27:	LES_INT
28:	JMP: index=35, conditional=false
29:	LOAD_INT_LIT: value=1
30:	LOAD_INT_VAR: id=3; local=true
31:	ADD_INT
32:	STOR_INT_VAR: id=3; local=true
33:	JMP: index=23
34:	LBL
35:	LBL
36:	LOAD_INT_VAR: id=5; local=true
37:	LOAD_INT_VAR: id=4; local=true
38:	LOAD_INT_VAR: id=0; local=true
39:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
40:	GTR_INT
41:	JMP: index=48, conditional=false
42:	LOAD_INT_LIT: value=1
43:	LOAD_INT_VAR: id=4; local=true
44:	SUB_INT
45:	STOR_INT_VAR: id=4; local=true
46:	JMP: index=36
47:	LBL
48:	LBL
49:	LOAD_INT_VAR: id=4; local=true
50:	LOAD_INT_VAR: id=3; local=true
51:	LES_EQL_INT
52:	JMP: index=76, conditional=false
53:	LOAD_INT_VAR: id=3; local=true
54:	LOAD_INT_VAR: id=0; local=true
55:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
56:	STOR_INT_VAR: id=6; local=true
57:	LOAD_INT_VAR: id=4; local=true
58:	LOAD_INT_VAR: id=0; local=true
59:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
60:	LOAD_INT_VAR: id=3; local=true
61:	LOAD_INT_VAR: id=0; local=true
62:	STOR_CHAR_ARY_ELM: dimension=1; local=true
63:	LOAD_INT_VAR: id=6; local=true
64:	LOAD_INT_VAR: id=4; local=true
65:	LOAD_INT_VAR: id=0; local=true
66:	STOR_CHAR_ARY_ELM: dimension=1; local=true
67:	LOAD_INT_LIT: value=1
68:	LOAD_INT_VAR: id=3; local=true
69:	ADD_INT
70:	STOR_INT_VAR: id=3; local=true
71:	LOAD_INT_LIT: value=1
72:	LOAD_INT_VAR: id=4; local=true
73:	SUB_INT
74:	STOR_INT_VAR: id=4; local=true
75:	LBL
76:	JMP: index=18
77:	LBL
78:	LBL
79:	LOAD_INT_VAR: id=4; local=true
80:	LOAD_INT_VAR: id=1; local=true
81:	LES_INT
82:	JMP: index=89, conditional=false
83:	LOAD_INT_VAR: id=0; local=true
84:	LOAD_INT_VAR: id=1; local=true
85:	LOAD_INT_VAR: id=4; local=true
86:	LOAD_INST_MEM
87:	MTHD_CALL: method='System.$Char:Sort:c*,i,i,'; native=true
88:	LBL
89:	LBL
90:	LOAD_INT_VAR: id=2; local=true
91:	LOAD_INT_VAR: id=3; local=true
92:	LES_INT
93:	JMP: index=100, conditional=false
94:	LOAD_INT_VAR: id=0; local=true
95:	LOAD_INT_VAR: id=3; local=true
96:	LOAD_INT_VAR: id=2; local=true
97:	LOAD_INST_MEM
98:	MTHD_CALL: method='System.$Char:Sort:c*,i,i,'; native=true
99:	LBL
100:	RTRN
--
---------------------------------------------------------
Method: id=7,4; name='System.$Char:ToByte:b,'; return='b';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=7,26; name='System.$Char:ToBytes:c*,'; return='b*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3989
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=7,3; name='System.$Char:ToFloat:c,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	I2F
3:	RTRN
--
---------------------------------------------------------
Method: id=7,5; name='System.$Char:ToInt:c,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=7,0; name='System.$Char:ToLower:c,'; return='c';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_CHAR_LIT value='A'
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_EQL_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=15
9:	LBL
10:	LOAD_CHAR_LIT value='Z'
11:	LOAD_INT_VAR: id=1; local=true
12:	LES_EQL_INT
13:	STOR_INT_VAR: id=0; local=true
14:	LBL
15:	LOAD_INT_VAR: id=0; local=true
16:	JMP: index=22, conditional=false
17:	LOAD_INT_LIT: value=32
18:	LOAD_INT_VAR: id=1; local=true
19:	ADD_INT
20:	RTRN
21:	LBL
22:	LOAD_INT_VAR: id=1; local=true
23:	RTRN
--
---------------------------------------------------------
Method: id=7,19; name='System.$Char:ToString:c*,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	NEW_OBJ_INST: class='System.String'
3:	MTHD_CALL: method='System.String:New:c*,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=7,29; name='System.$Char:ToString:c,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	NEW_OBJ_INST: class='System.String'
2:	MTHD_CALL: method='System.String:New:'; native=false
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=1; local=true
6:	MTHD_CALL: method='System.String:Append:c,'; native=false
7:	LOAD_INT_VAR: id=1; local=true
8:	RTRN
--
---------------------------------------------------------
Method: id=7,2; name='System.$Char:ToUpper:c,'; return='c';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_CHAR_LIT value='a'
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_EQL_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=15
9:	LBL
10:	LOAD_CHAR_LIT value='z'
11:	LOAD_INT_VAR: id=1; local=true
12:	LES_EQL_INT
13:	STOR_INT_VAR: id=0; local=true
14:	LBL
15:	LOAD_INT_VAR: id=0; local=true
16:	JMP: index=22, conditional=false
17:	LOAD_INT_LIT: value=32
18:	LOAD_INT_VAR: id=1; local=true
19:	SUB_INT
20:	RTRN
21:	LBL
22:	LOAD_INT_VAR: id=1; local=true
23:	RTRN
--
=========================================================
Class: id=8; name='System.$Int'; parent='System.Number'; pid=5;
 interface=false; virtual=0; num_generics=0; num_methods=32; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=8,9; name='System.$Int:Abs:i,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=0; local=true
4:	LES_INT
5:	JMP: index=11, conditional=false
6:	LOAD_INT_LIT: value=-1
7:	LOAD_INT_VAR: id=0; local=true
8:	MUL_INT
9:	RTRN
10:	LBL
11:	LOAD_INT_VAR: id=0; local=true
12:	RTRN
--
---------------------------------------------------------
Method: id=8,21; name='System.$Int:Clear:i*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	ZERO_INT_ARY
3:	RTRN
--
---------------------------------------------------------
Method: id=8,7; name='System.$Int:Compare:i,i,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LES_INT
6:	JMP: index=13, conditional=false
7:	LOAD_INT_LIT: value=-1
8:	LOAD_INT_VAR: id=0; local=true
9:	MUL_INT
10:	RTRN
11:	JMP: index=20
12:	LBL
13:	LOAD_INT_VAR: id=1; local=true
14:	LOAD_INT_VAR: id=0; local=true
15:	GTR_INT
16:	JMP: index=20, conditional=false
17:	LOAD_INT_VAR: id=0; local=true
18:	RTRN
19:	LBL
20:	LOAD_INT_LIT: value=0
21:	RTRN
--
---------------------------------------------------------
Method: id=8,3; name='System.$Int:DoubleFactorial:i,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_INT_LIT: value=1
2:	STOR_INT_VAR: id=2; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=3; local=true
5:	LBL
6:	LOAD_INT_LIT: value=0
7:	LOAD_INT_VAR: id=3; local=true
8:	GTR_EQL_INT
9:	JMP: index=42, conditional=false
10:	LBL
11:	LOAD_INT_LIT: value=0
12:	LOAD_INT_VAR: id=3; local=true
13:	EQL_INT
14:	JMP: index=19, conditional=false
15:	LOAD_INT_LIT: value=1
16:	STOR_INT_VAR: id=0; local=true
17:	JMP: index=24
18:	LBL
19:	LOAD_INT_LIT: value=1
20:	LOAD_INT_VAR: id=3; local=true
21:	EQL_INT
22:	STOR_INT_VAR: id=0; local=true
23:	LBL
24:	LOAD_INT_VAR: id=0; local=true
25:	JMP: index=30, conditional=false
26:	LOAD_INT_VAR: id=2; local=true
27:	RTRN
28:	JMP: index=35
29:	LBL
30:	LOAD_INT_VAR: id=3; local=true
31:	LOAD_INT_VAR: id=2; local=true
32:	MUL_INT
33:	STOR_INT_VAR: id=2; local=true
34:	LBL
35:	LBL
36:	LOAD_INT_LIT: value=2
37:	LOAD_INT_VAR: id=3; local=true
38:	SUB_INT
39:	STOR_INT_VAR: id=3; local=true
40:	JMP: index=6
41:	LBL
42:	LOAD_INT_VAR: id=2; local=true
43:	RTRN
--
---------------------------------------------------------
Method: id=8,18; name='System.$Int:Error:i,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3950
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=8,19; name='System.$Int:ErrorLine:i,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3950
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Error:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=8,2; name='System.$Int:Factorial:i,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=1
2:	STOR_INT_VAR: id=1; local=true
3:	LOAD_INT_LIT: value=1
4:	STOR_INT_VAR: id=2; local=true
5:	LBL
6:	LOAD_INT_VAR: id=0; local=true
7:	LOAD_INT_VAR: id=2; local=true
8:	LES_EQL_INT
9:	JMP: index=21, conditional=false
10:	LOAD_INT_VAR: id=2; local=true
11:	LOAD_INT_VAR: id=1; local=true
12:	MUL_INT
13:	STOR_INT_VAR: id=1; local=true
14:	LBL
15:	LOAD_INT_LIT: value=1
16:	LOAD_INT_VAR: id=2; local=true
17:	ADD_INT
18:	STOR_INT_VAR: id=2; local=true
19:	JMP: index=6
20:	LBL
21:	LOAD_INT_VAR: id=1; local=true
22:	RTRN
--
---------------------------------------------------------
Method: id=8,10; name='System.$Int:IsNeg:i,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=0; local=true
4:	LES_INT
5:	JMP: index=9, conditional=false
6:	LOAD_INT_LIT: value=1
7:	RTRN
8:	LBL
9:	LOAD_INT_LIT: value=0
10:	RTRN
--
---------------------------------------------------------
Method: id=8,8; name='System.$Int:Max:i,i,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	GTR_INT
6:	JMP: index=10, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	RTRN
9:	LBL
10:	LOAD_INT_VAR: id=1; local=true
11:	RTRN
--
---------------------------------------------------------
Method: id=8,0; name='System.$Int:MaxSize:'; return='i';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=2147483647
1:	RTRN
--
---------------------------------------------------------
Method: id=8,6; name='System.$Int:Min:i,i,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LBL
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LES_INT
6:	JMP: index=10, conditional=false
7:	LOAD_INT_VAR: id=0; local=true
8:	RTRN
9:	LBL
10:	LOAD_INT_VAR: id=1; local=true
11:	RTRN
--
---------------------------------------------------------
Method: id=8,1; name='System.$Int:MinSize:'; return='i';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=-2147483648
1:	RTRN
--
---------------------------------------------------------
Method: id=8,11; name='System.$Int:NotNeg:i,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=0; local=true
4:	GTR_INT
5:	JMP: index=9, conditional=false
6:	LOAD_INT_LIT: value=1
7:	RTRN
8:	LBL
9:	LOAD_INT_LIT: value=0
10:	RTRN
--
---------------------------------------------------------
Method: id=8,16; name='System.$Int:Print:i,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3966
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=8,17; name='System.$Int:PrintLine:i,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3966
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Print:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=8,5; name='System.$Int:Random:i,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=1
2:	LOAD_INT_VAR: id=0; local=true
3:	ADD_INT
4:	STOR_INT_VAR: id=0; local=true
5:	LBL
6:	LOAD_INT_LIT: value=0
7:	LOAD_INT_VAR: id=0; local=true
8:	LES_EQL_INT
9:	JMP: index=13, conditional=false
10:	LOAD_INT_LIT: value=0
11:	RTRN
12:	LBL
13:	LOAD_INT_VAR: id=0; local=true
14:	LOAD_FLOAT_LIT: value=1e+06
15:	LOAD_INST_MEM
16:	MTHD_CALL: method='System.$Float:Random:'; native=false
17:	MUL_FLOAT
18:	F2I
19:	MOD_INT
20:	RTRN
--
---------------------------------------------------------
Method: id=8,4; name='System.$Int:Random:i,i,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=1
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INT_VAR: id=1; local=true
5:	SUB_INT
6:	ADD_INT
7:	STOR_INT_VAR: id=2; local=true
8:	LBL
9:	LOAD_INT_LIT: value=0
10:	LOAD_INT_VAR: id=2; local=true
11:	LES_EQL_INT
12:	JMP: index=16, conditional=false
13:	LOAD_INT_VAR: id=0; local=true
14:	RTRN
15:	LBL
16:	LOAD_INT_VAR: id=2; local=true
17:	LOAD_FLOAT_LIT: value=1e+06
18:	LOAD_INST_MEM
19:	MTHD_CALL: method='System.$Float:Random:'; native=false
20:	MUL_FLOAT
21:	F2I
22:	MOD_INT
23:	LOAD_INT_VAR: id=0; local=true
24:	ADD_INT
25:	RTRN
--
---------------------------------------------------------
Method: id=8,23; name='System.$Int:Size:i***,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=8,22; name='System.$Int:Size:i**,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=8,20; name='System.$Int:Size:i*,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_ARY_SIZE
3:	RTRN
--
---------------------------------------------------------
Method: id=8,12; name='System.$Int:Size:i,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=8,27; name='System.$Int:Sort:i*,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=40
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
  1: INT_PARM
  2: INT_ARY_PARM
  3: OBJ_PARM
  4: INT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=3; local=true
4:	STOR_INT_VAR: id=4; local=true
5:	LOAD_INT_VAR: id=4; local=true
6:	LOAD_ARY_SIZE
7:	STOR_INT_VAR: id=1; local=true
8:	LBL
9:	LOAD_INT_LIT: value=1
10:	LOAD_INT_VAR: id=1; local=true
11:	LES_EQL_INT
12:	JMP: index=16, conditional=false
13:	LOAD_INT_VAR: id=0; local=true
14:	RTRN
15:	LBL
16:	LOAD_INT_VAR: id=1; local=true
17:	NEW_INT_ARY: dimension=1
18:	COPY_INT_VAR: id=2; local=true
19:	LOAD_INT_LIT: value=0
20:	LOAD_INT_VAR: id=0; local=true
21:	LOAD_INT_LIT: value=0
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INST_MEM
24:	MTHD_CALL: method='System.Runtime:Copy:i*,i,i*,i,i,'; native=false
25:	POP_INT
26:	LOAD_INT_VAR: id=2; local=true
27:	LOAD_INT_LIT: value=0
28:	LOAD_INT_LIT: value=1
29:	LOAD_INT_VAR: id=1; local=true
30:	SUB_INT
31:	LOAD_INST_MEM
32:	MTHD_CALL: method='System.$Int:Sort:i*,i,i,'; native=true
33:	LOAD_INT_VAR: id=2; local=true
34:	RTRN
--
---------------------------------------------------------
Method: id=8,28; name='System.$Int:Sort:i*,i,i,'; return='n';
  blocks=1; is_function=true; num_params=3; mem_size=56
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=3; local=true
5:	LOAD_INT_VAR: id=2; local=true
6:	STOR_INT_VAR: id=4; local=true
7:	LOAD_INT_LIT: value=2
8:	LOAD_INT_VAR: id=1; local=true
9:	LOAD_INT_VAR: id=2; local=true
10:	SUB_INT
11:	DIV_INT
12:	LOAD_INT_VAR: id=1; local=true
13:	ADD_INT
14:	LOAD_INT_VAR: id=0; local=true
15:	LOAD_INT_ARY_ELM: dimension=1; local=true
16:	STOR_INT_VAR: id=5; local=true
17:	LBL
18:	LOAD_INT_VAR: id=4; local=true
19:	LOAD_INT_VAR: id=3; local=true
20:	LES_EQL_INT
21:	JMP: index=78, conditional=false
22:	LBL
23:	LOAD_INT_VAR: id=5; local=true
24:	LOAD_INT_VAR: id=3; local=true
25:	LOAD_INT_VAR: id=0; local=true
26:	LOAD_INT_ARY_ELM: dimension=1; local=true
27:	LES_INT
28:	JMP: index=35, conditional=false
29:	LOAD_INT_LIT: value=1
30:	LOAD_INT_VAR: id=3; local=true
31:	ADD_INT
32:	STOR_INT_VAR: id=3; local=true
33:	JMP: index=23
34:	LBL
35:	LBL
36:	LOAD_INT_VAR: id=5; local=true
37:	LOAD_INT_VAR: id=4; local=true
38:	LOAD_INT_VAR: id=0; local=true
39:	LOAD_INT_ARY_ELM: dimension=1; local=true
40:	GTR_INT
41:	JMP: index=48, conditional=false
42:	LOAD_INT_LIT: value=1
43:	LOAD_INT_VAR: id=4; local=true
44:	SUB_INT
45:	STOR_INT_VAR: id=4; local=true
46:	JMP: index=36
47:	LBL
48:	LBL
49:	LOAD_INT_VAR: id=4; local=true
50:	LOAD_INT_VAR: id=3; local=true
51:	LES_EQL_INT
52:	JMP: index=76, conditional=false
53:	LOAD_INT_VAR: id=3; local=true
54:	LOAD_INT_VAR: id=0; local=true
55:	LOAD_INT_ARY_ELM: dimension=1; local=true
56:	STOR_INT_VAR: id=6; local=true
57:	LOAD_INT_VAR: id=4; local=true
58:	LOAD_INT_VAR: id=0; local=true
59:	LOAD_INT_ARY_ELM: dimension=1; local=true
60:	LOAD_INT_VAR: id=3; local=true
61:	LOAD_INT_VAR: id=0; local=true
62:	STOR_INT_ARY_ELM: dimension=1; local=true
63:	LOAD_INT_VAR: id=6; local=true
64:	LOAD_INT_VAR: id=4; local=true
65:	LOAD_INT_VAR: id=0; local=true
66:	STOR_INT_ARY_ELM: dimension=1; local=true
67:	LOAD_INT_LIT: value=1
68:	LOAD_INT_VAR: id=3; local=true
69:	ADD_INT
70:	STOR_INT_VAR: id=3; local=true
71:	LOAD_INT_LIT: value=1
72:	LOAD_INT_VAR: id=4; local=true
73:	SUB_INT
74:	STOR_INT_VAR: id=4; local=true
75:	LBL
76:	JMP: index=18
77:	LBL
78:	LBL
79:	LOAD_INT_VAR: id=4; local=true
80:	LOAD_INT_VAR: id=1; local=true
81:	LES_INT
82:	JMP: index=89, conditional=false
83:	LOAD_INT_VAR: id=0; local=true
84:	LOAD_INT_VAR: id=1; local=true
85:	LOAD_INT_VAR: id=4; local=true
86:	LOAD_INST_MEM
87:	MTHD_CALL: method='System.$Int:Sort:i*,i,i,'; native=true
88:	LBL
89:	LBL
90:	LOAD_INT_VAR: id=2; local=true
91:	LOAD_INT_VAR: id=3; local=true
92:	LES_INT
93:	JMP: index=100, conditional=false
94:	LOAD_INT_VAR: id=0; local=true
95:	LOAD_INT_VAR: id=3; local=true
96:	LOAD_INT_VAR: id=2; local=true
97:	LOAD_INST_MEM
98:	MTHD_CALL: method='System.$Int:Sort:i*,i,i,'; native=true
99:	LBL
100:	RTRN
--
---------------------------------------------------------
Method: id=8,24; name='System.$Int:ToBinaryString:i,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	NEW_OBJ_INST: class='System.String'
2:	MTHD_CALL: method='System.String:New:'; native=false
3:	STOR_INT_VAR: id=2; local=true
4:	LBL
5:	LOAD_INT_LIT: value=0
6:	LOAD_INT_LIT: value=1
7:	LOAD_INT_VAR: id=1; local=true
8:	BIT_AND_INT
9:	EQL_INT
10:	JMP: index=15, conditional=false
11:	LOAD_CHAR_LIT value='0'
12:	STOR_INT_VAR: id=0; local=true
13:	JMP: index=18
14:	LBL
15:	LOAD_CHAR_LIT value='1'
16:	STOR_INT_VAR: id=0; local=true
17:	LBL
18:	LOAD_INT_VAR: id=0; local=true
19:	LOAD_INT_VAR: id=2; local=true
20:	MTHD_CALL: method='System.String:Append:c,'; native=false
21:	LOAD_INT_LIT: value=1
22:	LOAD_INT_VAR: id=1; local=true
23:	SHR_INT
24:	STOR_INT_VAR: id=1; local=true
25:	LBL
26:	LOAD_INT_LIT: value=0
27:	LOAD_INT_VAR: id=1; local=true
28:	NEQL_INT
29:	JMP: index=5, conditional=true
30:	LBL
31:	LOAD_INT_VAR: id=2; local=true
32:	MTHD_CALL: method='System.String:Reverse:'; native=true
33:	RTRN
--
---------------------------------------------------------
Method: id=8,15; name='System.$Int:ToByte:i,'; return='b';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=8,14; name='System.$Int:ToChar:i,'; return='c';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=8,30; name='System.$Int:ToCommaString:i,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=80
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
  4: OBJ_PARM
  5: INT_PARM
  6: INT_PARM
  7: OBJ_PARM
  8: INT_PARM
  9: INT_PARM
  10: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_INT_LIT: value=32
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=3; local=true
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INT_LIT: value=10
6:	LOAD_INT_VAR: id=3; local=true
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=7; local=true
9:	STOR_INT_VAR: id=10; local=true
10:	STOR_INT_VAR: id=9; local=true
11:	STOR_INT_VAR: id=8; local=true
12:	LOAD_INT_VAR: id=8; local=true
13:	LOAD_INT_VAR: id=9; local=true
14:	LOAD_INT_VAR: id=10; local=true
15:	I2S
16:	LOAD_INT_VAR: id=3; local=true
17:	LOAD_INT_LIT: value=0
18:	NEW_OBJ_INST: class='System.String'
19:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
20:	STOR_INT_VAR: id=4; local=true
21:	LOAD_INT_LIT: value=1
22:	STOR_INT_VAR: id=5; local=true
23:	NEW_OBJ_INST: class='System.String'
24:	MTHD_CALL: method='System.String:New:'; native=false
25:	STOR_INT_VAR: id=2; local=true
26:	LOAD_INT_LIT: value=1
27:	LOAD_INT_VAR: id=4; local=true
28:	LOAD_INT_VAR: id=2; local=false
29:	SUB_INT
30:	STOR_INT_VAR: id=6; local=true
31:	LBL
32:	LOAD_INT_LIT: value=0
33:	LOAD_INT_VAR: id=6; local=true
34:	GTR_EQL_INT
35:	JMP: index=77, conditional=false
36:	LOAD_INT_VAR: id=6; local=true
37:	LOAD_INT_VAR: id=4; local=true
38:	MTHD_CALL: method='System.String:Get:i,'; native=true
39:	LOAD_INT_VAR: id=2; local=true
40:	MTHD_CALL: method='System.String:Append:c,'; native=false
41:	LBL
42:	LOAD_INT_LIT: value=0
43:	LOAD_INT_LIT: value=3
44:	LOAD_INT_VAR: id=5; local=true
45:	MOD_INT
46:	EQL_INT
47:	JMP: index=52, conditional=true
48:	LOAD_INT_LIT: value=0
49:	STOR_INT_VAR: id=0; local=true
50:	JMP: index=60
51:	LBL
52:	LOAD_INT_VAR: id=4; local=true
53:	LOAD_INT_VAR: id=2; local=false
54:	LOAD_INT_LIT: value=1
55:	LOAD_INT_VAR: id=5; local=true
56:	ADD_INT
57:	LES_EQL_INT
58:	STOR_INT_VAR: id=0; local=true
59:	LBL
60:	LOAD_INT_VAR: id=0; local=true
61:	JMP: index=66, conditional=false
62:	LOAD_CHAR_LIT value=','
63:	LOAD_INT_VAR: id=2; local=true
64:	MTHD_CALL: method='System.String:Append:c,'; native=false
65:	LBL
66:	LOAD_INT_LIT: value=1
67:	LOAD_INT_VAR: id=5; local=true
68:	ADD_INT
69:	STOR_INT_VAR: id=5; local=true
70:	LBL
71:	LOAD_INT_LIT: value=1
72:	LOAD_INT_VAR: id=6; local=true
73:	SUB_INT
74:	STOR_INT_VAR: id=6; local=true
75:	JMP: index=32
76:	LBL
77:	LOAD_INT_VAR: id=2; local=true
78:	MTHD_CALL: method='System.String:Reverse:'; native=true
79:	RTRN
--
---------------------------------------------------------
Method: id=8,13; name='System.$Int:ToFloat:i,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	I2F
3:	RTRN
--
---------------------------------------------------------
Method: id=8,26; name='System.$Int:ToHexString:i*,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=80
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
  4: OBJ_PARM
  5: INT_ARY_PARM
  6: OBJ_PARM
  7: INT_PARM
  8: INT_PARM
  9: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	NEW_OBJ_INST: class='System.String'
2:	MTHD_CALL: method='System.String:New:'; native=false
3:	STOR_INT_VAR: id=2; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=1; local=true
6:	LBL
7:	LOAD_INT_VAR: id=0; local=true
8:	LOAD_INST_MEM
9:	STOR_INT_VAR: id=4; local=true
10:	STOR_INT_VAR: id=5; local=true
11:	LOAD_INT_VAR: id=5; local=true
12:	LOAD_ARY_SIZE
13:	LOAD_INT_VAR: id=1; local=true
14:	LES_INT
15:	JMP: index=43, conditional=false
16:	LOAD_INT_LIT: value=16
17:	NEW_CHAR_ARY: dimension=1
18:	STOR_INT_VAR: id=3; local=true
19:	LOAD_INT_VAR: id=1; local=true
20:	LOAD_INT_VAR: id=0; local=true
21:	LOAD_INT_ARY_ELM: dimension=1; local=true
22:	LOAD_INT_LIT: value=16
23:	LOAD_INT_VAR: id=3; local=true
24:	LOAD_INST_MEM
25:	STOR_INT_VAR: id=6; local=true
26:	STOR_INT_VAR: id=9; local=true
27:	STOR_INT_VAR: id=8; local=true
28:	STOR_INT_VAR: id=7; local=true
29:	LOAD_INT_VAR: id=7; local=true
30:	LOAD_INT_VAR: id=8; local=true
31:	LOAD_INT_VAR: id=9; local=true
32:	I2S
33:	LOAD_INT_VAR: id=3; local=true
34:	LOAD_INT_VAR: id=2; local=true
35:	MTHD_CALL: method='System.String:Append:c*,'; native=false
36:	LBL
37:	LOAD_INT_LIT: value=1
38:	LOAD_INT_VAR: id=1; local=true
39:	ADD_INT
40:	STOR_INT_VAR: id=1; local=true
41:	JMP: index=7
42:	LBL
43:	LOAD_INT_VAR: id=2; local=true
44:	RTRN
--
---------------------------------------------------------
Method: id=8,25; name='System.$Int:ToHexString:i,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: OBJ_PARM
  3: INT_PARM
  4: INT_PARM
  5: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=16
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LOAD_INT_LIT: value=16
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=2; local=true
9:	STOR_INT_VAR: id=5; local=true
10:	STOR_INT_VAR: id=4; local=true
11:	STOR_INT_VAR: id=3; local=true
12:	LOAD_INT_VAR: id=3; local=true
13:	LOAD_INT_VAR: id=4; local=true
14:	LOAD_INT_VAR: id=5; local=true
15:	I2S
16:	LOAD_INT_VAR: id=1; local=true
17:	LOAD_INT_LIT: value=0
18:	NEW_OBJ_INST: class='System.String'
19:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
20:	RTRN
--
---------------------------------------------------------
Method: id=8,31; name='System.$Int:ToString:i*,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=80
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
  4: OBJ_PARM
  5: INT_ARY_PARM
  6: OBJ_PARM
  7: INT_PARM
  8: INT_PARM
  9: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=1
2:	NEW_CHAR_ARY: dimension=1
3:	LOAD_INT_LIT: value=9
4:	LOAD_INT_LIT: value=-3994
5:	TRAP_RTRN: args=3
6:	NEW_OBJ_INST: class='System.String'
7:	MTHD_CALL: method='System.String:New:c*,'; native=false
8:	STOR_INT_VAR: id=2; local=true
9:	LOAD_INT_LIT: value=0
10:	STOR_INT_VAR: id=1; local=true
11:	LBL
12:	LOAD_INT_VAR: id=0; local=true
13:	LOAD_INST_MEM
14:	STOR_INT_VAR: id=4; local=true
15:	STOR_INT_VAR: id=5; local=true
16:	LOAD_INT_VAR: id=5; local=true
17:	LOAD_ARY_SIZE
18:	LOAD_INT_VAR: id=1; local=true
19:	LES_INT
20:	JMP: index=61, conditional=false
21:	LOAD_INT_LIT: value=32
22:	NEW_CHAR_ARY: dimension=1
23:	STOR_INT_VAR: id=3; local=true
24:	LOAD_INT_VAR: id=1; local=true
25:	LOAD_INT_VAR: id=0; local=true
26:	LOAD_INT_ARY_ELM: dimension=1; local=true
27:	LOAD_INT_LIT: value=10
28:	LOAD_INT_VAR: id=3; local=true
29:	LOAD_INST_MEM
30:	STOR_INT_VAR: id=6; local=true
31:	STOR_INT_VAR: id=9; local=true
32:	STOR_INT_VAR: id=8; local=true
33:	STOR_INT_VAR: id=7; local=true
34:	LOAD_INT_VAR: id=7; local=true
35:	LOAD_INT_VAR: id=8; local=true
36:	LOAD_INT_VAR: id=9; local=true
37:	I2S
38:	LOAD_INT_VAR: id=3; local=true
39:	LOAD_INT_VAR: id=2; local=true
40:	MTHD_CALL: method='System.String:Append:c*,'; native=false
41:	LBL
42:	LOAD_INT_VAR: id=0; local=true
43:	LOAD_INST_MEM
44:	MTHD_CALL: method='System.$Int:Size:i*,'; native=false
45:	LOAD_INT_LIT: value=1
46:	LOAD_INT_VAR: id=1; local=true
47:	ADD_INT
48:	LES_INT
49:	JMP: index=54, conditional=false
50:	LOAD_CHAR_LIT value=','
51:	LOAD_INT_VAR: id=2; local=true
52:	MTHD_CALL: method='System.String:Append:c,'; native=false
53:	LBL
54:	LBL
55:	LOAD_INT_LIT: value=1
56:	LOAD_INT_VAR: id=1; local=true
57:	ADD_INT
58:	STOR_INT_VAR: id=1; local=true
59:	JMP: index=12
60:	LBL
61:	LOAD_CHAR_LIT value=']'
62:	LOAD_INT_VAR: id=2; local=true
63:	MTHD_CALL: method='System.String:Append:c,'; native=false
64:	LOAD_INT_VAR: id=2; local=true
65:	RTRN
--
---------------------------------------------------------
Method: id=8,29; name='System.$Int:ToString:i,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: OBJ_PARM
  3: INT_PARM
  4: INT_PARM
  5: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=32
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LOAD_INT_LIT: value=10
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=2; local=true
9:	STOR_INT_VAR: id=5; local=true
10:	STOR_INT_VAR: id=4; local=true
11:	STOR_INT_VAR: id=3; local=true
12:	LOAD_INT_VAR: id=3; local=true
13:	LOAD_INT_VAR: id=4; local=true
14:	LOAD_INT_VAR: id=5; local=true
15:	I2S
16:	LOAD_INT_VAR: id=1; local=true
17:	LOAD_INT_LIT: value=0
18:	NEW_OBJ_INST: class='System.String'
19:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
20:	RTRN
--
=========================================================
Class: id=9; name='System.$Float'; parent='System.Number'; pid=5;
 interface=false; virtual=0; num_generics=0; num_methods=44; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=9,14; name='System.$Float:Abs:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LBL
2:	LOAD_FLOAT_LIT: value=0
3:	LOAD_FLOAT_VAR: id=0; local=true
4:	LES_FLOAT
5:	JMP: index=11, conditional=false
6:	LOAD_FLOAT_LIT: value=-1
7:	LOAD_FLOAT_VAR: id=0; local=true
8:	MUL_FLOAT
9:	RTRN
10:	LBL
11:	LOAD_FLOAT_VAR: id=0; local=true
12:	RTRN
--
---------------------------------------------------------
Method: id=9,23; name='System.$Float:ArcCos:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	ACOS_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,22; name='System.$Float:ArcSin:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	ASIN_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,25; name='System.$Float:ArcTan2:f,f,'; return='f';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
  1: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=1; local=true
1:	STOR_FLOAT_VAR: id=0; local=true
2:	LOAD_FLOAT_VAR: id=0; local=true
3:	LOAD_FLOAT_VAR: id=1; local=true
4:	ATAN2_FLOAT
5:	RTRN
--
---------------------------------------------------------
Method: id=9,24; name='System.$Float:ArcTan:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	ATAN_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,18; name='System.$Float:Ceiling:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	CEIL_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,36; name='System.$Float:Clear:f*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	ZERO_FLOAT_ARY
3:	RTRN
--
---------------------------------------------------------
Method: id=9,13; name='System.$Float:Compare:f,f,'; return='i';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
  1: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=1; local=true
1:	STOR_FLOAT_VAR: id=0; local=true
2:	LBL
3:	LOAD_FLOAT_VAR: id=1; local=true
4:	LOAD_FLOAT_VAR: id=0; local=true
5:	LES_FLOAT
6:	JMP: index=15, conditional=false
7:	LOAD_INT_LIT: value=-1
8:	I2F
9:	LOAD_FLOAT_VAR: id=0; local=true
10:	MUL_FLOAT
11:	F2I
12:	RTRN
13:	JMP: index=23
14:	LBL
15:	LOAD_FLOAT_VAR: id=1; local=true
16:	LOAD_FLOAT_VAR: id=0; local=true
17:	GTR_FLOAT
18:	JMP: index=23, conditional=false
19:	LOAD_FLOAT_VAR: id=0; local=true
20:	F2I
21:	RTRN
22:	LBL
23:	LOAD_INT_LIT: value=0
24:	RTRN
--
---------------------------------------------------------
Method: id=9,20; name='System.$Float:Cos:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	COS_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,5; name='System.$Float:DoubleFactorial:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: FLOAT_PARM
  2: FLOAT_PARM
  3: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=1; local=true
1:	LOAD_FLOAT_LIT: value=1
2:	STOR_FLOAT_VAR: id=2; local=true
3:	LOAD_FLOAT_VAR: id=1; local=true
4:	STOR_FLOAT_VAR: id=3; local=true
5:	LBL
6:	LOAD_FLOAT_LIT: value=0
7:	LOAD_FLOAT_VAR: id=3; local=true
8:	LES_EQL_FLOAT
9:	JMP: index=42, conditional=false
10:	LBL
11:	LOAD_FLOAT_LIT: value=0
12:	LOAD_FLOAT_VAR: id=3; local=true
13:	EQL_FLOAT
14:	JMP: index=19, conditional=false
15:	LOAD_INT_LIT: value=1
16:	STOR_INT_VAR: id=0; local=true
17:	JMP: index=24
18:	LBL
19:	LOAD_FLOAT_LIT: value=1
20:	LOAD_FLOAT_VAR: id=3; local=true
21:	EQL_FLOAT
22:	STOR_INT_VAR: id=0; local=true
23:	LBL
24:	LOAD_INT_VAR: id=0; local=true
25:	JMP: index=30, conditional=false
26:	LOAD_FLOAT_VAR: id=2; local=true
27:	RTRN
28:	JMP: index=35
29:	LBL
30:	LOAD_FLOAT_VAR: id=3; local=true
31:	LOAD_FLOAT_VAR: id=2; local=true
32:	MUL_FLOAT
33:	STOR_FLOAT_VAR: id=2; local=true
34:	LBL
35:	LBL
36:	LOAD_FLOAT_LIT: value=2
37:	LOAD_FLOAT_VAR: id=3; local=true
38:	SUB_FLOAT
39:	STOR_FLOAT_VAR: id=3; local=true
40:	JMP: index=6
41:	LBL
42:	LOAD_FLOAT_VAR: id=2; local=true
43:	RTRN
--
---------------------------------------------------------
Method: id=9,2; name='System.$Float:E:'; return='f';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_FLOAT_LIT: value=2.71828
1:	RTRN
--
---------------------------------------------------------
Method: id=9,33; name='System.$Float:Error:f,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3949
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=9,34; name='System.$Float:ErrorLine:f,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3949
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Error:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=9,4; name='System.$Float:Factorial:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_LIT: value=1
2:	LOAD_FLOAT_VAR: id=0; local=true
3:	ADD_FLOAT
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='System.$Float:Gamma:f,'; native=false
6:	RTRN
--
---------------------------------------------------------
Method: id=9,17; name='System.$Float:Floor:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	FLOR_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,3; name='System.$Float:Gamma:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	TGAMMA_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,15; name='System.$Float:IsNeg:f,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LBL
2:	LOAD_FLOAT_LIT: value=0
3:	LOAD_FLOAT_VAR: id=0; local=true
4:	LES_FLOAT
5:	JMP: index=9, conditional=false
6:	LOAD_INT_LIT: value=1
7:	RTRN
8:	LBL
9:	LOAD_INT_LIT: value=0
10:	RTRN
--
---------------------------------------------------------
Method: id=9,27; name='System.$Float:Log:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	LOG_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,12; name='System.$Float:Max:f,f,'; return='f';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
  1: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=1; local=true
1:	STOR_FLOAT_VAR: id=0; local=true
2:	LBL
3:	LOAD_FLOAT_VAR: id=1; local=true
4:	LOAD_FLOAT_VAR: id=0; local=true
5:	GTR_FLOAT
6:	JMP: index=10, conditional=false
7:	LOAD_FLOAT_VAR: id=0; local=true
8:	RTRN
9:	LBL
10:	LOAD_FLOAT_VAR: id=1; local=true
11:	RTRN
--
---------------------------------------------------------
Method: id=9,11; name='System.$Float:Min:f,f,'; return='f';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
  1: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=1; local=true
1:	STOR_FLOAT_VAR: id=0; local=true
2:	LBL
3:	LOAD_FLOAT_VAR: id=1; local=true
4:	LOAD_FLOAT_VAR: id=0; local=true
5:	LES_FLOAT
6:	JMP: index=10, conditional=false
7:	LOAD_FLOAT_VAR: id=0; local=true
8:	RTRN
9:	LBL
10:	LOAD_FLOAT_VAR: id=1; local=true
11:	RTRN
--
---------------------------------------------------------
Method: id=9,26; name='System.$Float:Mod:f,f,'; return='f';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
  1: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=1; local=true
1:	STOR_FLOAT_VAR: id=0; local=true
2:	LOAD_FLOAT_VAR: id=0; local=true
3:	LOAD_FLOAT_VAR: id=1; local=true
4:	MOD_FLOAT
5:	RTRN
--
---------------------------------------------------------
Method: id=9,16; name='System.$Float:NotNeg:f,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LBL
2:	LOAD_FLOAT_LIT: value=-1
3:	LOAD_FLOAT_VAR: id=0; local=true
4:	GTR_FLOAT
5:	JMP: index=9, conditional=false
6:	LOAD_INT_LIT: value=1
7:	RTRN
8:	LBL
9:	LOAD_INT_LIT: value=0
10:	RTRN
--
---------------------------------------------------------
Method: id=9,0; name='System.$Float:Pi:'; return='f';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_FLOAT_LIT: value=3.14159
1:	RTRN
--
---------------------------------------------------------
Method: id=9,30; name='System.$Float:Power:f,f,'; return='f';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
  1: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=1; local=true
1:	STOR_FLOAT_VAR: id=0; local=true
2:	LOAD_FLOAT_VAR: id=0; local=true
3:	LOAD_FLOAT_VAR: id=1; local=true
4:	POW_FLOAT
5:	RTRN
--
---------------------------------------------------------
Method: id=9,31; name='System.$Float:Print:f,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3965
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=9,32; name='System.$Float:PrintLine:f,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3965
3:	TRAP: args=2
4:	LOAD_CHAR_LIT value='?'
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Char:Print:c,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=9,29; name='System.$Float:Random:'; return='f';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	RAND_FLOAT
1:	RTRN
--
---------------------------------------------------------
Method: id=9,19; name='System.$Float:Sin:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	SIN_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,38; name='System.$Float:Size:f***,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=9,37; name='System.$Float:Size:f**,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=9,35; name='System.$Float:Size:f*,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_ARY_SIZE
3:	RTRN
--
---------------------------------------------------------
Method: id=9,1; name='System.$Float:Size:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	RTRN
--
---------------------------------------------------------
Method: id=9,42; name='System.$Float:Sort:f*,'; return='f*';
  blocks=1; is_function=true; num_params=1; mem_size=40
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
  1: INT_PARM
  2: FLOAT_ARY_PARM
  3: OBJ_PARM
  4: FLOAT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=3; local=true
4:	STOR_INT_VAR: id=4; local=true
5:	LOAD_INT_VAR: id=4; local=true
6:	LOAD_ARY_SIZE
7:	STOR_INT_VAR: id=1; local=true
8:	LBL
9:	LOAD_INT_LIT: value=1
10:	LOAD_INT_VAR: id=1; local=true
11:	LES_EQL_INT
12:	JMP: index=16, conditional=false
13:	LOAD_INT_VAR: id=0; local=true
14:	RTRN
15:	LBL
16:	LOAD_INT_VAR: id=1; local=true
17:	NEW_FLOAT_ARY: dimension=1
18:	COPY_INT_VAR: id=2; local=true
19:	LOAD_INT_LIT: value=0
20:	LOAD_INT_VAR: id=0; local=true
21:	LOAD_INT_LIT: value=0
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INST_MEM
24:	MTHD_CALL: method='System.Runtime:Copy:f*,i,f*,i,i,'; native=false
25:	POP_INT
26:	LOAD_INT_VAR: id=2; local=true
27:	LOAD_INT_LIT: value=0
28:	LOAD_INT_LIT: value=1
29:	LOAD_INT_VAR: id=1; local=true
30:	SUB_INT
31:	LOAD_INST_MEM
32:	MTHD_CALL: method='System.$Float:Sort:f*,i,i,'; native=true
33:	LOAD_INT_VAR: id=2; local=true
34:	RTRN
--
---------------------------------------------------------
Method: id=9,43; name='System.$Float:Sort:f*,i,i,'; return='n';
  blocks=1; is_function=true; num_params=3; mem_size=56
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
  5: FLOAT_PARM
  6: FLOAT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=3; local=true
5:	LOAD_INT_VAR: id=2; local=true
6:	STOR_INT_VAR: id=4; local=true
7:	LOAD_INT_LIT: value=2
8:	LOAD_INT_VAR: id=1; local=true
9:	LOAD_INT_VAR: id=2; local=true
10:	SUB_INT
11:	DIV_INT
12:	LOAD_INT_VAR: id=1; local=true
13:	ADD_INT
14:	LOAD_INT_VAR: id=0; local=true
15:	LOAD_FLOAT_ARY_ELM: dimension=1; local=true
16:	STOR_FLOAT_VAR: id=5; local=true
17:	LBL
18:	LOAD_INT_VAR: id=4; local=true
19:	LOAD_INT_VAR: id=3; local=true
20:	LES_EQL_INT
21:	JMP: index=78, conditional=false
22:	LBL
23:	LOAD_FLOAT_VAR: id=5; local=true
24:	LOAD_INT_VAR: id=3; local=true
25:	LOAD_INT_VAR: id=0; local=true
26:	LOAD_FLOAT_ARY_ELM: dimension=1; local=true
27:	LES_FLOAT
28:	JMP: index=35, conditional=false
29:	LOAD_INT_LIT: value=1
30:	LOAD_INT_VAR: id=3; local=true
31:	ADD_INT
32:	STOR_INT_VAR: id=3; local=true
33:	JMP: index=23
34:	LBL
35:	LBL
36:	LOAD_FLOAT_VAR: id=5; local=true
37:	LOAD_INT_VAR: id=4; local=true
38:	LOAD_INT_VAR: id=0; local=true
39:	LOAD_FLOAT_ARY_ELM: dimension=1; local=true
40:	GTR_FLOAT
41:	JMP: index=48, conditional=false
42:	LOAD_INT_LIT: value=1
43:	LOAD_INT_VAR: id=4; local=true
44:	SUB_INT
45:	STOR_INT_VAR: id=4; local=true
46:	JMP: index=36
47:	LBL
48:	LBL
49:	LOAD_INT_VAR: id=4; local=true
50:	LOAD_INT_VAR: id=3; local=true
51:	LES_EQL_INT
52:	JMP: index=76, conditional=false
53:	LOAD_INT_VAR: id=3; local=true
54:	LOAD_INT_VAR: id=0; local=true
55:	LOAD_FLOAT_ARY_ELM: dimension=1; local=true
56:	STOR_FLOAT_VAR: id=6; local=true
57:	LOAD_INT_VAR: id=4; local=true
58:	LOAD_INT_VAR: id=0; local=true
59:	LOAD_FLOAT_ARY_ELM: dimension=1; local=true
60:	LOAD_INT_VAR: id=3; local=true
61:	LOAD_INT_VAR: id=0; local=true
62:	STOR_FLOAT_ARY_ELM: dimension=1; local=true
63:	LOAD_FLOAT_VAR: id=6; local=true
64:	LOAD_INT_VAR: id=4; local=true
65:	LOAD_INT_VAR: id=0; local=true
66:	STOR_FLOAT_ARY_ELM: dimension=1; local=true
67:	LOAD_INT_LIT: value=1
68:	LOAD_INT_VAR: id=3; local=true
69:	ADD_INT
70:	STOR_INT_VAR: id=3; local=true
71:	LOAD_INT_LIT: value=1
72:	LOAD_INT_VAR: id=4; local=true
73:	SUB_INT
74:	STOR_INT_VAR: id=4; local=true
75:	LBL
76:	JMP: index=18
77:	LBL
78:	LBL
79:	LOAD_INT_VAR: id=4; local=true
80:	LOAD_INT_VAR: id=1; local=true
81:	LES_INT
82:	JMP: index=89, conditional=false
83:	LOAD_INT_VAR: id=0; local=true
84:	LOAD_INT_VAR: id=1; local=true
85:	LOAD_INT_VAR: id=4; local=true
86:	LOAD_INST_MEM
87:	MTHD_CALL: method='System.$Float:Sort:f*,i,i,'; native=true
88:	LBL
89:	LBL
90:	LOAD_INT_VAR: id=2; local=true
91:	LOAD_INT_VAR: id=3; local=true
92:	LES_INT
93:	JMP: index=100, conditional=false
94:	LOAD_INT_VAR: id=0; local=true
95:	LOAD_INT_VAR: id=3; local=true
96:	LOAD_INT_VAR: id=2; local=true
97:	LOAD_INST_MEM
98:	MTHD_CALL: method='System.$Float:Sort:f*,i,i,'; native=true
99:	LBL
100:	RTRN
--
---------------------------------------------------------
Method: id=9,28; name='System.$Float:SquareRoot:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	SQRT_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,21; name='System.$Float:Tan:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	TAN_FLOAT
3:	RTRN
--
---------------------------------------------------------
Method: id=9,9; name='System.$Float:ToByte:f,'; return='b';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	F2I
3:	RTRN
--
---------------------------------------------------------
Method: id=9,10; name='System.$Float:ToChar:f,'; return='c';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	F2I
3:	RTRN
--
---------------------------------------------------------
Method: id=9,7; name='System.$Float:ToDegrees:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_LIT: value=3.14159
2:	LOAD_FLOAT_LIT: value=180
3:	LOAD_FLOAT_VAR: id=0; local=true
4:	MUL_FLOAT
5:	DIV_FLOAT
6:	RTRN
--
---------------------------------------------------------
Method: id=9,8; name='System.$Float:ToInt:f,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	F2I
3:	RTRN
--
---------------------------------------------------------
Method: id=9,6; name='System.$Float:ToRadians:f,'; return='f';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_LIT: value=180
2:	LOAD_FLOAT_LIT: value=3.14159
3:	LOAD_FLOAT_VAR: id=0; local=true
4:	MUL_FLOAT
5:	DIV_FLOAT
6:	RTRN
--
---------------------------------------------------------
Method: id=9,41; name='System.$Float:ToString:f**,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=88
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
  1: OBJ_PARM
  2: INT_ARY_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: OBJ_PARM
  8: FLOAT_PARM
  9: OBJ_PARM
  10: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	NEW_OBJ_INST: class='System.String'
2:	MTHD_CALL: method='System.String:New:'; native=false
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.$Float:Size:f**,'; native=false
7:	STOR_INT_VAR: id=2; local=true
8:	LOAD_INT_LIT: value=0
9:	LOAD_INT_VAR: id=2; local=true
10:	LOAD_INT_ARY_ELM: dimension=1; local=true
11:	STOR_INT_VAR: id=3; local=true
12:	LOAD_INT_LIT: value=1
13:	LOAD_INT_VAR: id=2; local=true
14:	LOAD_INT_ARY_ELM: dimension=1; local=true
15:	STOR_INT_VAR: id=4; local=true
16:	LOAD_INT_LIT: value=0
17:	STOR_INT_VAR: id=5; local=true
18:	LBL
19:	LOAD_INT_VAR: id=3; local=true
20:	LOAD_INT_VAR: id=5; local=true
21:	LES_INT
22:	JMP: index=104, conditional=false
23:	LOAD_CHAR_LIT value='['
24:	LOAD_INT_VAR: id=1; local=true
25:	MTHD_CALL: method='System.String:Append:c,'; native=false
26:	LOAD_INT_LIT: value=0
27:	STOR_INT_VAR: id=6; local=true
28:	LBL
29:	LOAD_INT_VAR: id=4; local=true
30:	LOAD_INT_VAR: id=6; local=true
31:	LES_INT
32:	JMP: index=75, conditional=false
33:	LOAD_INT_VAR: id=5; local=true
34:	LOAD_INT_VAR: id=6; local=true
35:	LOAD_INT_VAR: id=0; local=true
36:	LOAD_FLOAT_ARY_ELM: dimension=2; local=true
37:	LOAD_INT_VAR: id=1; local=true
38:	STOR_INT_VAR: id=7; local=true
39:	STOR_FLOAT_VAR: id=8; local=true
40:	LOAD_FLOAT_VAR: id=8; local=true
41:	LOAD_INT_VAR: id=7; local=true
42:	MTHD_CALL: method='System.$Float:ToString:f,'; native=true
43:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
44:	LOAD_INT_VAR: id=7; local=true
45:	MTHD_CALL: method='System.String:Append:c*,'; native=false
46:	LBL
47:	LOAD_INT_VAR: id=4; local=true
48:	LOAD_INT_LIT: value=1
49:	LOAD_INT_VAR: id=6; local=true
50:	ADD_INT
51:	LES_INT
52:	JMP: index=68, conditional=false
53:	LOAD_INT_LIT: value=2
54:	NEW_CHAR_ARY: dimension=1
55:	LOAD_INT_LIT: value=10
56:	LOAD_INT_LIT: value=-3994
57:	TRAP_RTRN: args=3
58:	NEW_OBJ_INST: class='System.String'
59:	MTHD_CALL: method='System.String:New:c*,'; native=false
60:	LOAD_INT_VAR: id=1; local=true
61:	STOR_INT_VAR: id=9; local=true
62:	STOR_INT_VAR: id=10; local=true
63:	LOAD_INT_VAR: id=10; local=true
64:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
65:	LOAD_INT_VAR: id=9; local=true
66:	MTHD_CALL: method='System.String:Append:c*,'; native=false
67:	LBL
68:	LBL
69:	LOAD_INT_LIT: value=1
70:	LOAD_INT_VAR: id=6; local=true
71:	ADD_INT
72:	STOR_INT_VAR: id=6; local=true
73:	JMP: index=29
74:	LBL
75:	LBL
76:	LOAD_INT_VAR: id=3; local=true
77:	LOAD_INT_LIT: value=1
78:	LOAD_INT_VAR: id=5; local=true
79:	ADD_INT
80:	LES_INT
81:	JMP: index=93, conditional=false
82:	LOAD_INT_LIT: value=2
83:	NEW_CHAR_ARY: dimension=1
84:	LOAD_INT_LIT: value=11
85:	LOAD_INT_LIT: value=-3994
86:	TRAP_RTRN: args=3
87:	NEW_OBJ_INST: class='System.String'
88:	MTHD_CALL: method='System.String:New:c*,'; native=false
89:	LOAD_INT_VAR: id=1; local=true
90:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
91:	JMP: index=97
92:	LBL
93:	LOAD_CHAR_LIT value=']'
94:	LOAD_INT_VAR: id=1; local=true
95:	MTHD_CALL: method='System.String:Append:c,'; native=false
96:	LBL
97:	LBL
98:	LOAD_INT_LIT: value=1
99:	LOAD_INT_VAR: id=5; local=true
100:	ADD_INT
101:	STOR_INT_VAR: id=5; local=true
102:	JMP: index=19
103:	LBL
104:	LOAD_INT_VAR: id=1; local=true
105:	RTRN
--
---------------------------------------------------------
Method: id=9,40; name='System.$Float:ToString:f*,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=72
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
  4: OBJ_PARM
  5: FLOAT_ARY_PARM
  6: OBJ_PARM
  7: FLOAT_PARM
  8: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=1
2:	NEW_CHAR_ARY: dimension=1
3:	LOAD_INT_LIT: value=9
4:	LOAD_INT_LIT: value=-3994
5:	TRAP_RTRN: args=3
6:	NEW_OBJ_INST: class='System.String'
7:	MTHD_CALL: method='System.String:New:c*,'; native=false
8:	STOR_INT_VAR: id=2; local=true
9:	LOAD_INT_LIT: value=0
10:	STOR_INT_VAR: id=1; local=true
11:	LBL
12:	LOAD_INT_VAR: id=0; local=true
13:	LOAD_INST_MEM
14:	STOR_INT_VAR: id=4; local=true
15:	STOR_INT_VAR: id=5; local=true
16:	LOAD_INT_VAR: id=5; local=true
17:	LOAD_ARY_SIZE
18:	LOAD_INT_VAR: id=1; local=true
19:	LES_INT
20:	JMP: index=58, conditional=false
21:	LOAD_INT_LIT: value=64
22:	NEW_CHAR_ARY: dimension=1
23:	STOR_INT_VAR: id=3; local=true
24:	LOAD_INT_VAR: id=1; local=true
25:	LOAD_INT_VAR: id=0; local=true
26:	LOAD_FLOAT_ARY_ELM: dimension=1; local=true
27:	LOAD_INT_VAR: id=3; local=true
28:	LOAD_INST_MEM
29:	STOR_INT_VAR: id=6; local=true
30:	STOR_INT_VAR: id=8; local=true
31:	STOR_FLOAT_VAR: id=7; local=true
32:	LOAD_FLOAT_VAR: id=7; local=true
33:	LOAD_INT_VAR: id=8; local=true
34:	F2S
35:	LOAD_INT_VAR: id=3; local=true
36:	LOAD_INT_VAR: id=2; local=true
37:	MTHD_CALL: method='System.String:Append:c*,'; native=false
38:	LBL
39:	LOAD_INT_VAR: id=0; local=true
40:	LOAD_INST_MEM
41:	MTHD_CALL: method='System.$Float:Size:f*,'; native=false
42:	LOAD_INT_VAR: id=1; local=true
43:	LOAD_INT_VAR: id=1; local=true
44:	ADD_INT
45:	LES_INT
46:	JMP: index=51, conditional=false
47:	LOAD_CHAR_LIT value=','
48:	LOAD_INT_VAR: id=2; local=true
49:	MTHD_CALL: method='System.String:Append:c,'; native=false
50:	LBL
51:	LBL
52:	LOAD_INT_LIT: value=1
53:	LOAD_INT_VAR: id=1; local=true
54:	ADD_INT
55:	STOR_INT_VAR: id=1; local=true
56:	JMP: index=12
57:	LBL
58:	LOAD_CHAR_LIT value=']'
59:	LOAD_INT_VAR: id=2; local=true
60:	MTHD_CALL: method='System.String:Append:c,'; native=false
61:	LOAD_INT_VAR: id=2; local=true
62:	RTRN
--
---------------------------------------------------------
Method: id=9,39; name='System.$Float:ToString:f,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=40
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
  1: CHAR_ARY_PARM
  2: OBJ_PARM
  3: FLOAT_PARM
  4: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=64
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_FLOAT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=1; local=true
6:	LOAD_INST_MEM
7:	STOR_INT_VAR: id=2; local=true
8:	STOR_INT_VAR: id=4; local=true
9:	STOR_FLOAT_VAR: id=3; local=true
10:	LOAD_FLOAT_VAR: id=3; local=true
11:	LOAD_INT_VAR: id=4; local=true
12:	F2S
13:	LOAD_INT_VAR: id=1; local=true
14:	LOAD_INT_LIT: value=0
15:	NEW_OBJ_INST: class='System.String'
16:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
17:	RTRN
--
=========================================================
Class: id=10; name='System.$BaseArray'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=3; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=10,2; name='System.$BaseArray:Size:o.System.Base***,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=10,1; name='System.$BaseArray:Size:o.System.Base**,'; return='i*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3995
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=10,0; name='System.$BaseArray:Size:o.System.Base*,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_ARY_SIZE
3:	RTRN
--
=========================================================
Class: id=11; name='System.IntHolder'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=16; class_mem_size=0;
 instance_mem_size=8; is_debug=false

Interfaces:
	System.Compare
	System.Clone
	System.Stringify
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: INT_PARM
=========================================================
---------------------------------------------------------
Method: id=11,5; name='System.IntHolder:Add:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=0; local=false
4:	ADD_INT
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=0; local=false
7:	RTRN
--
---------------------------------------------------------
Method: id=11,11; name='System.IntHolder:Clone:'; return='o.System.Compare';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	NEW_OBJ_INST: class='System.IntHolder'
3:	MTHD_CALL: method='System.IntHolder:New:i,'; native=false
4:	OBJ_INST_CAST: to='System.Compare', id=13
5:	RTRN
--
---------------------------------------------------------
Method: id=11,10; name='System.IntHolder:Compare:o.System.Compare,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_VAR: id=0; local=true
3:	MTHD_CALL: method='System.Base:GetClassID:'; native=false
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='System.Base:GetClassID:'; native=false
6:	NEQL_INT
7:	JMP: index=11, conditional=false
8:	LOAD_INT_LIT: value=-1
9:	RTRN
10:	LBL
11:	LOAD_INT_VAR: id=0; local=true
12:	OBJ_INST_CAST: to='System.IntHolder', id=11
13:	STOR_INT_VAR: id=1; local=true
14:	LBL
15:	LOAD_INT_VAR: id=1; local=true
16:	LOAD_INT_VAR: id=0; local=false
17:	LOAD_INST_MEM
18:	LOAD_INT_VAR: id=0; local=false
19:	EQL_INT
20:	JMP: index=25, conditional=false
21:	LOAD_INT_LIT: value=0
22:	RTRN
23:	JMP: index=34
24:	LBL
25:	LOAD_INT_VAR: id=1; local=true
26:	LOAD_INT_VAR: id=0; local=false
27:	LOAD_INST_MEM
28:	LOAD_INT_VAR: id=0; local=false
29:	LES_INT
30:	JMP: index=34, conditional=false
31:	LOAD_INT_LIT: value=-1
32:	RTRN
33:	LBL
34:	LOAD_INT_LIT: value=1
35:	RTRN
--
---------------------------------------------------------
Method: id=11,6; name='System.IntHolder:Dec:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=1
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=false
3:	SUB_INT
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=0; local=false
6:	RTRN
--
---------------------------------------------------------
Method: id=11,9; name='System.IntHolder:Div:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=0; local=false
4:	DIV_INT
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=0; local=false
7:	RTRN
--
---------------------------------------------------------
Method: id=11,2; name='System.IntHolder:Get:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=11,12; name='System.IntHolder:HashID:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=11,4; name='System.IntHolder:Inc:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=1
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=false
3:	ADD_INT
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=0; local=false
6:	RTRN
--
---------------------------------------------------------
Method: id=11,8; name='System.IntHolder:Mul:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=0; local=false
4:	MUL_INT
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=0; local=false
7:	RTRN
--
---------------------------------------------------------
Method: id=11,0; name='System.IntHolder:New:'; return='o.System.IntHolder';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	MTHD_CALL: method='System.Base:New:'; native=false
2:	POP_INT
3:	LOAD_INT_LIT: value=0
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=0; local=false
6:	LOAD_INST_MEM
7:	RTRN
--
---------------------------------------------------------
Method: id=11,1; name='System.IntHolder:New:i,'; return='o.System.IntHolder';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	MTHD_CALL: method='System.Base:New:'; native=false
3:	POP_INT
4:	LOAD_INT_VAR: id=0; local=true
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=0; local=false
7:	LOAD_INST_MEM
8:	RTRN
--
---------------------------------------------------------
Method: id=11,13; name='System.IntHolder:Print:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Int:Print:i,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=11,14; name='System.IntHolder:PrintLine:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Int:PrintLine:i,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=11,3; name='System.IntHolder:Set:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=0; local=false
4:	RTRN
--
---------------------------------------------------------
Method: id=11,7; name='System.IntHolder:Sub:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=0; local=false
4:	SUB_INT
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=0; local=false
7:	RTRN
--
---------------------------------------------------------
Method: id=11,15; name='System.IntHolder:ToString:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Int:ToString:i,'; native=false
4:	RTRN
--
=========================================================
Class: id=12; name='System.Base'; parent=''; pid=-1;
 interface=false; virtual=0; num_generics=0; num_methods=4; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=12,1; name='System.Base:GetClass:'; return='o.System.Introspection.Class';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	LOAD_INT_LIT: value=-3999
1:	TRAP_RTRN: args=1
2:	LOAD_INT_VAR: id=0; local=true
3:	RTRN
--
---------------------------------------------------------
Method: id=12,2; name='System.Base:GetClassID:'; return='o.ClassID';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_LIT: value=-4000
2:	TRAP_RTRN: args=2
3:	RTRN
--
---------------------------------------------------------
Method: id=12,3; name='System.Base:GetInstanceID:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	RTRN
--
---------------------------------------------------------
Method: id=12,0; name='System.Base:New:'; return='o.System.Base';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	RTRN
--
=========================================================
Class: id=13; name='System.Compare'; parent='System.Base'; pid=12;
 interface=true; virtual=1; num_generics=0; num_methods=2; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=13,0; name='System.Compare:Compare:o.System.Compare,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
---------------------------------------------------------
Method: id=13,1; name='System.Compare:HashID:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
=========================================================
Class: id=14; name='System.Clone'; parent='System.Base'; pid=12;
 interface=true; virtual=1; num_generics=0; num_methods=1; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=14,0; name='System.Clone:Clone:'; return='o.System.Clone';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
=========================================================
Class: id=15; name='System.String'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=86; class_mem_size=0;
 instance_mem_size=24; is_debug=false

Interfaces:
	System.Compare
	System.Clone
	System.Stringify
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: INT_PARM
  2: INT_PARM
=========================================================
---------------------------------------------------------
Method: id=15,19; name='System.String:Append:b*,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=64
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: BYTE_ARY_PARM
  2: CHAR_ARY_PARM
  3: INT_PARM
  4: INT_PARM
  5: OBJ_PARM
  6: BYTE_ARY_PARM
  7: OBJ_PARM
  8: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=1; local=false
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=5; local=true
7:	STOR_INT_VAR: id=6; local=true
8:	LOAD_INT_VAR: id=6; local=true
9:	LOAD_ARY_SIZE
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=2; local=false
12:	ADD_INT
13:	GTR_EQL_INT
14:	JMP: index=50, conditional=false
15:	LOAD_INT_VAR: id=1; local=true
16:	LOAD_INST_MEM
17:	MTHD_CALL: method='System.$Byte:Size:b*,'; native=false
18:	LOAD_INT_LIT: value=1
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=1; local=false
21:	SHL_INT
22:	ADD_INT
23:	LOAD_INST_MEM
24:	LOAD_INT_VAR: id=1; local=false
25:	ADD_INT
26:	LOAD_INST_MEM
27:	STOR_INT_VAR: id=1; local=false
28:	LOAD_INST_MEM
29:	LOAD_INT_VAR: id=1; local=false
30:	NEW_CHAR_ARY: dimension=1
31:	COPY_INT_VAR: id=2; local=true
32:	LOAD_INT_LIT: value=0
33:	LOAD_INST_MEM
34:	LOAD_INT_VAR: id=0; local=false
35:	LOAD_INT_LIT: value=0
36:	LOAD_INST_MEM
37:	LOAD_INT_VAR: id=0; local=false
38:	LOAD_INST_MEM
39:	STOR_INT_VAR: id=7; local=true
40:	STOR_INT_VAR: id=8; local=true
41:	LOAD_INT_VAR: id=8; local=true
42:	LOAD_ARY_SIZE
43:	LOAD_INST_MEM
44:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
45:	POP_INT
46:	LOAD_INT_VAR: id=2; local=true
47:	LOAD_INST_MEM
48:	STOR_INT_VAR: id=0; local=false
49:	LBL
50:	LOAD_INT_VAR: id=1; local=true
51:	LOAD_INST_MEM
52:	MTHD_CALL: method='System.$Byte:Size:b*,'; native=false
53:	STOR_INT_VAR: id=3; local=true
54:	LOAD_INT_LIT: value=0
55:	STOR_INT_VAR: id=4; local=true
56:	LBL
57:	LOAD_INT_VAR: id=3; local=true
58:	LOAD_INT_VAR: id=4; local=true
59:	LES_INT
60:	JMP: index=65, conditional=true
61:	LOAD_INT_LIT: value=0
62:	STOR_INT_VAR: id=0; local=true
63:	JMP: index=72
64:	LBL
65:	LOAD_CHAR_LIT value='?'
66:	LOAD_INT_VAR: id=4; local=true
67:	LOAD_INT_VAR: id=1; local=true
68:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
69:	NEQL_INT
70:	STOR_INT_VAR: id=0; local=true
71:	LBL
72:	LOAD_INT_VAR: id=0; local=true
73:	JMP: index=95, conditional=false
74:	LOAD_INT_VAR: id=4; local=true
75:	LOAD_INT_VAR: id=1; local=true
76:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
77:	LOAD_INST_MEM
78:	LOAD_INT_VAR: id=2; local=false
79:	LOAD_INST_MEM
80:	LOAD_INT_VAR: id=0; local=false
81:	STOR_CHAR_ARY_ELM: dimension=1; local=false
82:	LOAD_INT_LIT: value=1
83:	LOAD_INST_MEM
84:	LOAD_INT_VAR: id=2; local=false
85:	ADD_INT
86:	LOAD_INST_MEM
87:	STOR_INT_VAR: id=2; local=false
88:	LBL
89:	LOAD_INT_LIT: value=1
90:	LOAD_INT_VAR: id=4; local=true
91:	ADD_INT
92:	STOR_INT_VAR: id=4; local=true
93:	JMP: index=57
94:	LBL
95:	RTRN
--
---------------------------------------------------------
Method: id=15,20; name='System.String:Append:b*,i,i,'; return='n';
  blocks=1; is_function=false; num_params=3; mem_size=64
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: BYTE_ARY_PARM
  2: INT_PARM
  3: INT_PARM
  4: CHAR_ARY_PARM
  5: INT_PARM
  6: INT_PARM
  7: OBJ_PARM
  8: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=3; local=true
1:	STOR_INT_VAR: id=2; local=true
2:	STOR_INT_VAR: id=1; local=true
3:	LBL
4:	LOAD_INT_LIT: value=0
5:	LOAD_INT_VAR: id=2; local=true
6:	LES_INT
7:	JMP: index=10, conditional=false
8:	RTRN
9:	LBL
10:	LBL
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=1; local=false
13:	LOAD_INT_VAR: id=3; local=true
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=2; local=false
16:	ADD_INT
17:	GTR_EQL_INT
18:	JMP: index=52, conditional=false
19:	LOAD_INT_VAR: id=3; local=true
20:	LOAD_INT_LIT: value=1
21:	LOAD_INST_MEM
22:	LOAD_INT_VAR: id=1; local=false
23:	SHL_INT
24:	ADD_INT
25:	LOAD_INST_MEM
26:	LOAD_INT_VAR: id=1; local=false
27:	ADD_INT
28:	LOAD_INST_MEM
29:	STOR_INT_VAR: id=1; local=false
30:	LOAD_INST_MEM
31:	LOAD_INT_VAR: id=1; local=false
32:	NEW_CHAR_ARY: dimension=1
33:	COPY_INT_VAR: id=4; local=true
34:	LOAD_INT_LIT: value=0
35:	LOAD_INST_MEM
36:	LOAD_INT_VAR: id=0; local=false
37:	LOAD_INT_LIT: value=0
38:	LOAD_INST_MEM
39:	LOAD_INT_VAR: id=0; local=false
40:	LOAD_INST_MEM
41:	STOR_INT_VAR: id=7; local=true
42:	STOR_INT_VAR: id=8; local=true
43:	LOAD_INT_VAR: id=8; local=true
44:	LOAD_ARY_SIZE
45:	LOAD_INST_MEM
46:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
47:	POP_INT
48:	LOAD_INT_VAR: id=4; local=true
49:	LOAD_INST_MEM
50:	STOR_INT_VAR: id=0; local=false
51:	LBL
52:	LOAD_INT_VAR: id=3; local=true
53:	LOAD_INT_VAR: id=2; local=true
54:	ADD_INT
55:	STOR_INT_VAR: id=5; local=true
56:	LOAD_INT_VAR: id=2; local=true
57:	STOR_INT_VAR: id=6; local=true
58:	LBL
59:	LOAD_INT_VAR: id=5; local=true
60:	LOAD_INT_VAR: id=6; local=true
61:	LES_INT
62:	JMP: index=67, conditional=true
63:	LOAD_INT_LIT: value=0
64:	STOR_INT_VAR: id=0; local=true
65:	JMP: index=74
66:	LBL
67:	LOAD_CHAR_LIT value='?'
68:	LOAD_INT_VAR: id=6; local=true
69:	LOAD_INT_VAR: id=1; local=true
70:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
71:	NEQL_INT
72:	STOR_INT_VAR: id=0; local=true
73:	LBL
74:	LOAD_INT_VAR: id=0; local=true
75:	JMP: index=97, conditional=false
76:	LOAD_INT_VAR: id=6; local=true
77:	LOAD_INT_VAR: id=1; local=true
78:	LOAD_BYTE_ARY_ELM: dimension=1; local=true
79:	LOAD_INST_MEM
80:	LOAD_INT_VAR: id=2; local=false
81:	LOAD_INST_MEM
82:	LOAD_INT_VAR: id=0; local=false
83:	STOR_CHAR_ARY_ELM: dimension=1; local=false
84:	LOAD_INT_LIT: value=1
85:	LOAD_INST_MEM
86:	LOAD_INT_VAR: id=2; local=false
87:	ADD_INT
88:	LOAD_INST_MEM
89:	STOR_INT_VAR: id=2; local=false
90:	LBL
91:	LOAD_INT_LIT: value=1
92:	LOAD_INT_VAR: id=6; local=true
93:	ADD_INT
94:	STOR_INT_VAR: id=6; local=true
95:	JMP: index=59
96:	LBL
97:	RTRN
--
---------------------------------------------------------
Method: id=15,22; name='System.String:Append:b,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=32
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=1; local=false
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=2; local=false
6:	GTR_EQL_INT
7:	JMP: index=36, conditional=false
8:	LOAD_INT_LIT: value=1
9:	LOAD_INST_MEM
10:	LOAD_INT_VAR: id=1; local=false
11:	SHL_INT
12:	LOAD_INST_MEM
13:	STOR_INT_VAR: id=1; local=false
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=1; local=false
16:	NEW_CHAR_ARY: dimension=1
17:	COPY_INT_VAR: id=1; local=true
18:	LOAD_INT_LIT: value=0
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=0; local=false
21:	LOAD_INT_LIT: value=0
22:	LOAD_INST_MEM
23:	LOAD_INT_VAR: id=0; local=false
24:	LOAD_INST_MEM
25:	STOR_INT_VAR: id=2; local=true
26:	STOR_INT_VAR: id=3; local=true
27:	LOAD_INT_VAR: id=3; local=true
28:	LOAD_ARY_SIZE
29:	LOAD_INST_MEM
30:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
31:	POP_INT
32:	LOAD_INT_VAR: id=1; local=true
33:	LOAD_INST_MEM
34:	STOR_INT_VAR: id=0; local=false
35:	LBL
36:	LOAD_INT_VAR: id=0; local=true
37:	LOAD_INST_MEM
38:	LOAD_INT_VAR: id=2; local=false
39:	LOAD_INST_MEM
40:	LOAD_INT_VAR: id=0; local=false
41:	STOR_CHAR_ARY_ELM: dimension=1; local=false
42:	LOAD_INT_LIT: value=1
43:	LOAD_INST_MEM
44:	LOAD_INT_VAR: id=2; local=false
45:	ADD_INT
46:	LOAD_INST_MEM
47:	STOR_INT_VAR: id=2; local=false
48:	RTRN
--
---------------------------------------------------------
Method: id=15,17; name='System.String:Append:c*,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: CHAR_ARY_PARM
  3: INT_PARM
  4: INT_PARM
  5: OBJ_PARM
  6: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=1; local=false
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=5; local=true
7:	STOR_INT_VAR: id=6; local=true
8:	LOAD_INT_VAR: id=6; local=true
9:	LOAD_ARY_SIZE
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=2; local=false
12:	ADD_INT
13:	GTR_EQL_INT
14:	JMP: index=47, conditional=false
15:	LOAD_INT_VAR: id=1; local=true
16:	LOAD_INST_MEM
17:	MTHD_CALL: method='System.$Char:Size:c*,'; native=false
18:	LOAD_INT_LIT: value=1
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=1; local=false
21:	SHL_INT
22:	ADD_INT
23:	LOAD_INST_MEM
24:	LOAD_INT_VAR: id=1; local=false
25:	ADD_INT
26:	LOAD_INST_MEM
27:	STOR_INT_VAR: id=1; local=false
28:	LOAD_INST_MEM
29:	LOAD_INT_VAR: id=1; local=false
30:	NEW_CHAR_ARY: dimension=1
31:	COPY_INT_VAR: id=2; local=true
32:	LOAD_INT_LIT: value=0
33:	LOAD_INST_MEM
34:	LOAD_INT_VAR: id=0; local=false
35:	LOAD_INT_LIT: value=0
36:	LOAD_INST_MEM
37:	LOAD_INT_VAR: id=0; local=false
38:	LOAD_INST_MEM
39:	MTHD_CALL: method='System.$Char:Size:c*,'; native=false
40:	LOAD_INST_MEM
41:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
42:	POP_INT
43:	LOAD_INT_VAR: id=2; local=true
44:	LOAD_INST_MEM
45:	STOR_INT_VAR: id=0; local=false
46:	LBL
47:	LOAD_INT_VAR: id=1; local=true
48:	LOAD_INST_MEM
49:	MTHD_CALL: method='System.$Char:Size:c*,'; native=false
50:	STOR_INT_VAR: id=3; local=true
51:	LOAD_INT_LIT: value=0
52:	STOR_INT_VAR: id=4; local=true
53:	LBL
54:	LOAD_INT_VAR: id=3; local=true
55:	LOAD_INT_VAR: id=4; local=true
56:	LES_INT
57:	JMP: index=62, conditional=true
58:	LOAD_INT_LIT: value=0
59:	STOR_INT_VAR: id=0; local=true
60:	JMP: index=69
61:	LBL
62:	LOAD_CHAR_LIT value='?'
63:	LOAD_INT_VAR: id=4; local=true
64:	LOAD_INT_VAR: id=1; local=true
65:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
66:	NEQL_INT
67:	STOR_INT_VAR: id=0; local=true
68:	LBL
69:	LOAD_INT_VAR: id=0; local=true
70:	JMP: index=92, conditional=false
71:	LOAD_INT_VAR: id=4; local=true
72:	LOAD_INT_VAR: id=1; local=true
73:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
74:	LOAD_INST_MEM
75:	LOAD_INT_VAR: id=2; local=false
76:	LOAD_INST_MEM
77:	LOAD_INT_VAR: id=0; local=false
78:	STOR_CHAR_ARY_ELM: dimension=1; local=false
79:	LOAD_INT_LIT: value=1
80:	LOAD_INST_MEM
81:	LOAD_INT_VAR: id=2; local=false
82:	ADD_INT
83:	LOAD_INST_MEM
84:	STOR_INT_VAR: id=2; local=false
85:	LBL
86:	LOAD_INT_LIT: value=1
87:	LOAD_INT_VAR: id=4; local=true
88:	ADD_INT
89:	STOR_INT_VAR: id=4; local=true
90:	JMP: index=54
91:	LBL
92:	RTRN
--
---------------------------------------------------------
Method: id=15,18; name='System.String:Append:c*,i,i,'; return='n';
  blocks=1; is_function=false; num_params=3; mem_size=64
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_ARY_PARM
  2: INT_PARM
  3: INT_PARM
  4: CHAR_ARY_PARM
  5: INT_PARM
  6: INT_PARM
  7: OBJ_PARM
  8: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=3; local=true
1:	STOR_INT_VAR: id=2; local=true
2:	STOR_INT_VAR: id=1; local=true
3:	LBL
4:	LOAD_INT_LIT: value=0
5:	LOAD_INT_VAR: id=2; local=true
6:	LES_INT
7:	JMP: index=10, conditional=false
8:	RTRN
9:	LBL
10:	LBL
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=1; local=false
13:	LOAD_INT_VAR: id=3; local=true
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=2; local=false
16:	ADD_INT
17:	GTR_EQL_INT
18:	JMP: index=52, conditional=false
19:	LOAD_INT_VAR: id=3; local=true
20:	LOAD_INT_LIT: value=1
21:	LOAD_INST_MEM
22:	LOAD_INT_VAR: id=1; local=false
23:	SHL_INT
24:	ADD_INT
25:	LOAD_INST_MEM
26:	LOAD_INT_VAR: id=1; local=false
27:	ADD_INT
28:	LOAD_INST_MEM
29:	STOR_INT_VAR: id=1; local=false
30:	LOAD_INST_MEM
31:	LOAD_INT_VAR: id=1; local=false
32:	NEW_CHAR_ARY: dimension=1
33:	COPY_INT_VAR: id=4; local=true
34:	LOAD_INT_LIT: value=0
35:	LOAD_INST_MEM
36:	LOAD_INT_VAR: id=0; local=false
37:	LOAD_INT_LIT: value=0
38:	LOAD_INST_MEM
39:	LOAD_INT_VAR: id=0; local=false
40:	LOAD_INST_MEM
41:	STOR_INT_VAR: id=7; local=true
42:	STOR_INT_VAR: id=8; local=true
43:	LOAD_INT_VAR: id=8; local=true
44:	LOAD_ARY_SIZE
45:	LOAD_INST_MEM
46:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
47:	POP_INT
48:	LOAD_INT_VAR: id=4; local=true
49:	LOAD_INST_MEM
50:	STOR_INT_VAR: id=0; local=false
51:	LBL
52:	LOAD_INT_VAR: id=3; local=true
53:	LOAD_INT_VAR: id=2; local=true
54:	ADD_INT
55:	STOR_INT_VAR: id=5; local=true
56:	LOAD_INT_VAR: id=2; local=true
57:	STOR_INT_VAR: id=6; local=true
58:	LBL
59:	LOAD_INT_VAR: id=5; local=true
60:	LOAD_INT_VAR: id=6; local=true
61:	LES_INT
62:	JMP: index=67, conditional=true
63:	LOAD_INT_LIT: value=0
64:	STOR_INT_VAR: id=0; local=true
65:	JMP: index=74
66:	LBL
67:	LOAD_CHAR_LIT value='?'
68:	LOAD_INT_VAR: id=6; local=true
69:	LOAD_INT_VAR: id=1; local=true
70:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
71:	NEQL_INT
72:	STOR_INT_VAR: id=0; local=true
73:	LBL
74:	LOAD_INT_VAR: id=0; local=true
75:	JMP: index=97, conditional=false
76:	LOAD_INT_VAR: id=6; local=true
77:	LOAD_INT_VAR: id=1; local=true
78:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
79:	LOAD_INST_MEM
80:	LOAD_INT_VAR: id=2; local=false
81:	LOAD_INST_MEM
82:	LOAD_INT_VAR: id=0; local=false
83:	STOR_CHAR_ARY_ELM: dimension=1; local=false
84:	LOAD_INT_LIT: value=1
85:	LOAD_INST_MEM
86:	LOAD_INT_VAR: id=2; local=false
87:	ADD_INT
88:	LOAD_INST_MEM
89:	STOR_INT_VAR: id=2; local=false
90:	LBL
91:	LOAD_INT_LIT: value=1
92:	LOAD_INT_VAR: id=6; local=true
93:	ADD_INT
94:	STOR_INT_VAR: id=6; local=true
95:	JMP: index=59
96:	LBL
97:	RTRN
--
---------------------------------------------------------
Method: id=15,21; name='System.String:Append:c,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=32
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: CHAR_ARY_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=1; local=false
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=2; local=false
6:	GTR_EQL_INT
7:	JMP: index=36, conditional=false
8:	LOAD_INT_LIT: value=1
9:	LOAD_INST_MEM
10:	LOAD_INT_VAR: id=1; local=false
11:	SHL_INT
12:	LOAD_INST_MEM
13:	STOR_INT_VAR: id=1; local=false
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=1; local=false
16:	NEW_CHAR_ARY: dimension=1
17:	COPY_INT_VAR: id=1; local=true
18:	LOAD_INT_LIT: value=0
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=0; local=false
21:	LOAD_INT_LIT: value=0
22:	LOAD_INST_MEM
23:	LOAD_INT_VAR: id=0; local=false
24:	LOAD_INST_MEM
25:	STOR_INT_VAR: id=2; local=true
26:	STOR_INT_VAR: id=3; local=true
27:	LOAD_INT_VAR: id=3; local=true
28:	LOAD_ARY_SIZE
29:	LOAD_INST_MEM
30:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
31:	POP_INT
32:	LOAD_INT_VAR: id=1; local=true
33:	LOAD_INST_MEM
34:	STOR_INT_VAR: id=0; local=false
35:	LBL
36:	LOAD_INT_VAR: id=0; local=true
37:	LOAD_INST_MEM
38:	LOAD_INT_VAR: id=2; local=false
39:	LOAD_INST_MEM
40:	LOAD_INT_VAR: id=0; local=false
41:	STOR_CHAR_ARY_ELM: dimension=1; local=false
42:	LOAD_INT_LIT: value=1
43:	LOAD_INST_MEM
44:	LOAD_INT_VAR: id=2; local=false
45:	ADD_INT
46:	LOAD_INST_MEM
47:	STOR_INT_VAR: id=2; local=false
48:	RTRN
--
---------------------------------------------------------
Method: id=15,15; name='System.String:Append:f,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: FLOAT_PARM
---------------------------------------------------------
0:	STOR_FLOAT_VAR: id=0; local=true
1:	LOAD_FLOAT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Float:ToString:f,'; native=true
4:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.String:Append:c*,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=15,14; name='System.String:Append:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Int:ToString:i,'; native=false
4:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.String:Append:c*,'; native=false
7:	RTRN
--
---------------------------------------------------------
Method: id=15,13; name='System.String:Append:l,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_VAR: id=0; local=true
3:	JMP: index=16, conditional=false
4:	LOAD_INT_LIT: value=4
5:	NEW_CHAR_ARY: dimension=1
6:	LOAD_INT_LIT: value=7
7:	LOAD_INT_LIT: value=-3994
8:	TRAP_RTRN: args=3
9:	NEW_OBJ_INST: class='System.String'
10:	MTHD_CALL: method='System.String:New:c*,'; native=false
11:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
12:	LOAD_INST_MEM
13:	MTHD_CALL: method='System.String:Append:c*,'; native=false
14:	JMP: index=27
15:	LBL
16:	LOAD_INT_LIT: value=5
17:	NEW_CHAR_ARY: dimension=1
18:	LOAD_INT_LIT: value=8
19:	LOAD_INT_LIT: value=-3994
20:	TRAP_RTRN: args=3
21:	NEW_OBJ_INST: class='System.String'
22:	MTHD_CALL: method='System.String:New:c*,'; native=false
23:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
24:	LOAD_INST_MEM
25:	MTHD_CALL: method='System.String:Append:c*,'; native=false
26:	LBL
27:	RTRN
--
---------------------------------------------------------
Method: id=15,16; name='System.String:Append:o.System.String,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.String:Append:c*,'; native=false
5:	RTRN
--
---------------------------------------------------------
Method: id=15,48; name='System.String:Capacity:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=15,53; name='System.String:Clear:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=5
1:	LOAD_INST_MEM
2:	STOR_INT_VAR: id=1; local=false
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=1; local=false
5:	NEW_CHAR_ARY: dimension=1
6:	LOAD_INST_MEM
7:	STOR_INT_VAR: id=0; local=false
8:	LOAD_INT_LIT: value=0
9:	LOAD_INST_MEM
10:	STOR_INT_VAR: id=2; local=false
11:	RTRN
--
---------------------------------------------------------
Method: id=15,80; name='System.String:Clone:'; return='o.System.Compare';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	NEW_OBJ_INST: class='System.String'
3:	MTHD_CALL: method='System.String:New:c*,'; native=false
4:	OBJ_INST_CAST: to='System.Compare', id=13
5:	RTRN
--
---------------------------------------------------------
Method: id=15,79; name='System.String:Compare:o.System.Compare,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=40
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: INT_PARM
  3: CHAR_PARM
  4: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_VAR: id=0; local=true
3:	MTHD_CALL: method='System.Base:GetClassID:'; native=false
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='System.Base:GetClassID:'; native=false
6:	NEQL_INT
7:	JMP: index=11, conditional=false
8:	LOAD_INT_LIT: value=-1
9:	RTRN
10:	LBL
11:	LOAD_INT_VAR: id=0; local=true
12:	OBJ_INST_CAST: to='System.String', id=15
13:	STOR_INT_VAR: id=1; local=true
14:	LOAD_INT_LIT: value=0
15:	STOR_INT_VAR: id=2; local=true
16:	LBL
17:	LOAD_INST_MEM
18:	LOAD_INT_VAR: id=2; local=false
19:	LOAD_INT_VAR: id=2; local=true
20:	LES_INT
21:	JMP: index=54, conditional=false
22:	LOAD_INT_VAR: id=2; local=true
23:	LOAD_INST_MEM
24:	LOAD_INT_VAR: id=0; local=false
25:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
26:	STOR_INT_VAR: id=3; local=true
27:	LOAD_INT_VAR: id=2; local=true
28:	LOAD_INT_VAR: id=1; local=true
29:	MTHD_CALL: method='System.String:Get:i,'; native=true
30:	STOR_INT_VAR: id=4; local=true
31:	LBL
32:	LOAD_INT_VAR: id=4; local=true
33:	LOAD_INT_VAR: id=3; local=true
34:	GTR_INT
35:	JMP: index=40, conditional=false
36:	LOAD_INT_LIT: value=1
37:	RTRN
38:	JMP: index=47
39:	LBL
40:	LOAD_INT_VAR: id=4; local=true
41:	LOAD_INT_VAR: id=3; local=true
42:	LES_INT
43:	JMP: index=47, conditional=false
44:	LOAD_INT_LIT: value=-1
45:	RTRN
46:	LBL
47:	LBL
48:	LOAD_INT_LIT: value=1
49:	LOAD_INT_VAR: id=2; local=true
50:	ADD_INT
51:	STOR_INT_VAR: id=2; local=true
52:	JMP: index=17
53:	LBL
54:	LBL
55:	LOAD_INT_VAR: id=1; local=true
56:	LOAD_INT_VAR: id=2; local=false
57:	LOAD_INST_MEM
58:	LOAD_INT_VAR: id=2; local=false
59:	GTR_INT
60:	JMP: index=64, conditional=false
61:	LOAD_INT_LIT: value=1
62:	RTRN
63:	LBL
64:	LBL
65:	LOAD_INT_VAR: id=1; local=true
66:	LOAD_INT_VAR: id=2; local=false
67:	LOAD_INST_MEM
68:	LOAD_INT_VAR: id=2; local=false
69:	LES_INT
70:	JMP: index=74, conditional=false
71:	LOAD_INT_LIT: value=-1
72:	RTRN
73:	LBL
74:	LOAD_INT_LIT: value=0
75:	RTRN
--
---------------------------------------------------------
Method: id=15,49; name='System.String:Compress:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	NEW_CHAR_ARY: dimension=1
3:	COPY_INT_VAR: id=0; local=true
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=0; local=false
7:	LOAD_INT_LIT: value=0
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=2; local=false
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
12:	POP_INT
13:	LOAD_INT_VAR: id=0; local=true
14:	LOAD_INST_MEM
15:	STOR_INT_VAR: id=0; local=false
16:	LOAD_INST_MEM
17:	LOAD_INT_VAR: id=2; local=false
18:	LOAD_INST_MEM
19:	STOR_INT_VAR: id=1; local=false
20:	RTRN
--
---------------------------------------------------------
Method: id=15,81; name='System.String:Copy:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	NEW_OBJ_INST: class='System.String'
3:	MTHD_CALL: method='System.String:New:c*,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=15,32; name='System.String:Count:c,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.String:Count:i,c,'; native=true
5:	RTRN
--
---------------------------------------------------------
Method: id=15,33; name='System.String:Count:i,c,'; return='i';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_PARM
  3: INT_PARM
  4: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=2; local=false
5:	LOAD_INT_VAR: id=1; local=true
6:	LES_INT
7:	JMP: index=12, conditional=true
8:	LOAD_INT_LIT: value=0
9:	STOR_INT_VAR: id=0; local=true
10:	JMP: index=17
11:	LBL
12:	LOAD_INT_LIT: value=-1
13:	LOAD_INT_VAR: id=1; local=true
14:	GTR_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=52, conditional=false
19:	LOAD_INT_LIT: value=0
20:	STOR_INT_VAR: id=3; local=true
21:	LOAD_INT_VAR: id=1; local=true
22:	STOR_INT_VAR: id=4; local=true
23:	LBL
24:	LOAD_INST_MEM
25:	LOAD_INT_VAR: id=2; local=false
26:	LOAD_INT_VAR: id=4; local=true
27:	LES_INT
28:	JMP: index=49, conditional=false
29:	LBL
30:	LOAD_INT_VAR: id=2; local=true
31:	LOAD_INT_VAR: id=4; local=true
32:	LOAD_INST_MEM
33:	LOAD_INT_VAR: id=0; local=false
34:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
35:	EQL_INT
36:	JMP: index=42, conditional=false
37:	LOAD_INT_LIT: value=1
38:	LOAD_INT_VAR: id=3; local=true
39:	ADD_INT
40:	STOR_INT_VAR: id=3; local=true
41:	LBL
42:	LBL
43:	LOAD_INT_LIT: value=1
44:	LOAD_INT_VAR: id=4; local=true
45:	ADD_INT
46:	STOR_INT_VAR: id=4; local=true
47:	JMP: index=24
48:	LBL
49:	LOAD_INT_VAR: id=3; local=true
50:	RTRN
51:	LBL
52:	LOAD_INT_LIT: value=-1
53:	RTRN
--
---------------------------------------------------------
Method: id=15,46; name='System.String:Delete:i,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=1
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.String:Delete:i,i,'; native=false
5:	RTRN
--
---------------------------------------------------------
Method: id=15,47; name='System.String:Delete:i,i,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=56
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: CHAR_ARY_PARM
  7: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LOAD_INT_VAR: id=2; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	ADD_INT
5:	STOR_INT_VAR: id=3; local=true
6:	LBL
7:	LOAD_INT_LIT: value=0
8:	LOAD_INT_VAR: id=1; local=true
9:	LES_INT
10:	JMP: index=15, conditional=false
11:	LOAD_INT_LIT: value=1
12:	STOR_INT_VAR: id=0; local=true
13:	JMP: index=40
14:	LBL
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=2; local=false
17:	LOAD_INT_VAR: id=1; local=true
18:	GTR_INT
19:	JMP: index=24, conditional=false
20:	LOAD_INT_LIT: value=1
21:	STOR_INT_VAR: id=0; local=true
22:	JMP: index=39
23:	LBL
24:	LOAD_INT_LIT: value=0
25:	LOAD_INT_VAR: id=3; local=true
26:	LES_INT
27:	JMP: index=32, conditional=false
28:	LOAD_INT_LIT: value=1
29:	STOR_INT_VAR: id=0; local=true
30:	JMP: index=38
31:	LBL
32:	LOAD_INST_MEM
33:	LOAD_INT_VAR: id=2; local=false
34:	LOAD_INT_VAR: id=3; local=true
35:	GTR_INT
36:	STOR_INT_VAR: id=0; local=true
37:	LBL
38:	LBL
39:	LBL
40:	LOAD_INT_VAR: id=0; local=true
41:	JMP: index=45, conditional=false
42:	LOAD_INT_LIT: value=0
43:	RTRN
44:	LBL
45:	LOAD_INT_VAR: id=2; local=true
46:	LOAD_INST_MEM
47:	LOAD_INT_VAR: id=2; local=false
48:	SUB_INT
49:	STOR_INT_VAR: id=4; local=true
50:	LOAD_INT_LIT: value=1
51:	LOAD_INST_MEM
52:	LOAD_INT_VAR: id=1; local=false
53:	SHR_INT
54:	LOAD_INST_MEM
55:	LOAD_INT_VAR: id=1; local=false
56:	SUB_INT
57:	STOR_INT_VAR: id=5; local=true
58:	LBL
59:	LOAD_INT_VAR: id=5; local=true
60:	LOAD_INT_VAR: id=4; local=true
61:	LES_INT
62:	JMP: index=98, conditional=false
63:	LOAD_INT_VAR: id=4; local=true
64:	NEW_CHAR_ARY: dimension=1
65:	COPY_INT_VAR: id=6; local=true
66:	LOAD_INT_LIT: value=0
67:	LOAD_INST_MEM
68:	LOAD_INT_VAR: id=0; local=false
69:	LOAD_INT_LIT: value=0
70:	LOAD_INT_VAR: id=1; local=true
71:	LOAD_INST_MEM
72:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
73:	POP_INT
74:	LOAD_INT_VAR: id=6; local=true
75:	LOAD_INT_VAR: id=1; local=true
76:	LOAD_INST_MEM
77:	LOAD_INT_VAR: id=0; local=false
78:	LOAD_INT_VAR: id=3; local=true
79:	LOAD_INT_VAR: id=3; local=true
80:	LOAD_INST_MEM
81:	LOAD_INT_VAR: id=2; local=false
82:	SUB_INT
83:	LOAD_INST_MEM
84:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
85:	POP_INT
86:	LOAD_INT_VAR: id=6; local=true
87:	LOAD_INST_MEM
88:	STOR_INT_VAR: id=0; local=false
89:	LOAD_INT_VAR: id=4; local=true
90:	LOAD_INST_MEM
91:	STOR_INT_VAR: id=2; local=false
92:	LOAD_INST_MEM
93:	LOAD_INT_VAR: id=2; local=false
94:	LOAD_INST_MEM
95:	STOR_INT_VAR: id=1; local=false
96:	JMP: index=124
97:	LBL
98:	LOAD_INT_VAR: id=2; local=true
99:	LOAD_INT_VAR: id=1; local=true
100:	ADD_INT
101:	STOR_INT_VAR: id=7; local=true
102:	LOAD_INST_MEM
103:	LOAD_INT_VAR: id=0; local=false
104:	LOAD_INT_VAR: id=1; local=true
105:	LOAD_INST_MEM
106:	LOAD_INT_VAR: id=0; local=false
107:	LOAD_INT_VAR: id=7; local=true
108:	LOAD_INT_VAR: id=7; local=true
109:	LOAD_INST_MEM
110:	LOAD_INT_VAR: id=2; local=false
111:	SUB_INT
112:	LOAD_INST_MEM
113:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
114:	POP_INT
115:	LOAD_CHAR_LIT value='?'
116:	LOAD_INT_VAR: id=4; local=true
117:	LOAD_INST_MEM
118:	LOAD_INT_VAR: id=0; local=false
119:	STOR_CHAR_ARY_ELM: dimension=1; local=false
120:	LOAD_INT_VAR: id=4; local=true
121:	LOAD_INST_MEM
122:	STOR_INT_VAR: id=2; local=false
123:	LBL
124:	LOAD_INT_LIT: value=1
125:	RTRN
--
---------------------------------------------------------
Method: id=15,65; name='System.String:EndsWith:c,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_CHAR_LIT value='?'
2:	LOAD_INT_VAR: id=1; local=true
3:	NEQL_INT
4:	JMP: index=9, conditional=true
5:	LOAD_INT_LIT: value=0
6:	STOR_INT_VAR: id=0; local=true
7:	JMP: index=19
8:	LBL
9:	LOAD_INT_VAR: id=1; local=true
10:	LOAD_INT_LIT: value=1
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=2; local=false
13:	SUB_INT
14:	LOAD_INST_MEM
15:	MTHD_CALL: method='System.String:Get:i,'; native=true
16:	EQL_INT
17:	STOR_INT_VAR: id=0; local=true
18:	LBL
19:	LOAD_INT_VAR: id=0; local=true
20:	RTRN
--
---------------------------------------------------------
Method: id=15,67; name='System.String:EndsWith:o.System.String,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=32
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=2; local=false
3:	STOR_INT_VAR: id=1; local=true
4:	LBL
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=2; local=false
7:	LOAD_INT_VAR: id=1; local=true
8:	LES_EQL_INT
9:	JMP: index=50, conditional=false
10:	LOAD_INT_LIT: value=1
11:	LOAD_INT_VAR: id=1; local=true
12:	SUB_INT
13:	STOR_INT_VAR: id=2; local=true
14:	LOAD_INT_LIT: value=1
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=2; local=false
17:	SUB_INT
18:	STOR_INT_VAR: id=3; local=true
19:	LBL
20:	LOAD_INT_LIT: value=-1
21:	LOAD_INT_VAR: id=2; local=true
22:	GTR_INT
23:	JMP: index=47, conditional=false
24:	LBL
25:	LOAD_INT_VAR: id=3; local=true
26:	LOAD_INST_MEM
27:	LOAD_INT_VAR: id=0; local=false
28:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
29:	LOAD_INT_VAR: id=2; local=true
30:	LOAD_INT_VAR: id=0; local=true
31:	MTHD_CALL: method='System.String:Get:i,'; native=true
32:	NEQL_INT
33:	JMP: index=37, conditional=false
34:	LOAD_INT_LIT: value=0
35:	RTRN
36:	LBL
37:	LOAD_INT_LIT: value=1
38:	LOAD_INT_VAR: id=2; local=true
39:	SUB_INT
40:	STOR_INT_VAR: id=2; local=true
41:	LOAD_INT_LIT: value=1
42:	LOAD_INT_VAR: id=3; local=true
43:	SUB_INT
44:	STOR_INT_VAR: id=3; local=true
45:	JMP: index=20
46:	LBL
47:	LOAD_INT_LIT: value=1
48:	RTRN
49:	LBL
50:	LOAD_INT_LIT: value=0
51:	RTRN
--
---------------------------------------------------------
Method: id=15,77; name='System.String:Equals:o.System.String,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	LOAD_INT_VAR: id=0; local=true
3:	OBJ_INST_CAST: to='System.Compare', id=13
4:	OBJ_INST_CAST: to='System.Compare', id=13
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.String:Compare:o.System.Compare,'; native=false
7:	EQL_INT
8:	RTRN
--
---------------------------------------------------------
Method: id=15,84; name='System.String:Error:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Char:Error:c*,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=15,85; name='System.String:ErrorLine:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Char:ErrorLine:c*,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=15,23; name='System.String:Find:c,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.String:Find:i,c,'; native=true
5:	RTRN
--
---------------------------------------------------------
Method: id=15,28; name='System.String:Find:i,c,'; return='i';
  blocks=1; is_function=false; num_params=2; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_PARM
  3: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=2; local=false
5:	LOAD_INT_VAR: id=1; local=true
6:	LES_INT
7:	JMP: index=12, conditional=true
8:	LOAD_INT_LIT: value=0
9:	STOR_INT_VAR: id=0; local=true
10:	JMP: index=17
11:	LBL
12:	LOAD_INT_LIT: value=-1
13:	LOAD_INT_VAR: id=1; local=true
14:	GTR_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=46, conditional=false
19:	LOAD_INT_VAR: id=1; local=true
20:	STOR_INT_VAR: id=3; local=true
21:	LBL
22:	LOAD_INST_MEM
23:	LOAD_INT_VAR: id=2; local=false
24:	LOAD_INT_VAR: id=3; local=true
25:	LES_INT
26:	JMP: index=45, conditional=false
27:	LBL
28:	LOAD_INT_VAR: id=2; local=true
29:	LOAD_INT_VAR: id=3; local=true
30:	LOAD_INST_MEM
31:	LOAD_INT_VAR: id=0; local=false
32:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
33:	EQL_INT
34:	JMP: index=38, conditional=false
35:	LOAD_INT_VAR: id=3; local=true
36:	RTRN
37:	LBL
38:	LBL
39:	LOAD_INT_LIT: value=1
40:	LOAD_INT_VAR: id=3; local=true
41:	ADD_INT
42:	STOR_INT_VAR: id=3; local=true
43:	JMP: index=22
44:	LBL
45:	LBL
46:	LOAD_INT_LIT: value=-1
47:	RTRN
--
---------------------------------------------------------
Method: id=15,38; name='System.String:Find:i,o.System.String,'; return='i';
  blocks=1; is_function=false; num_params=2; mem_size=56
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LOAD_INT_VAR: id=2; local=true
3:	LOAD_INT_VAR: id=2; local=false
4:	STOR_INT_VAR: id=4; local=true
5:	LBL
6:	LOAD_INT_LIT: value=0
7:	LOAD_INT_VAR: id=4; local=true
8:	GTR_INT
9:	JMP: index=14, conditional=true
10:	LOAD_INT_LIT: value=0
11:	STOR_INT_VAR: id=0; local=true
12:	JMP: index=20
13:	LBL
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=2; local=false
16:	LOAD_INT_VAR: id=1; local=true
17:	LES_INT
18:	STOR_INT_VAR: id=0; local=true
19:	LBL
20:	LOAD_INT_VAR: id=0; local=true
21:	JMP: index=119, conditional=false
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INT_LIT: value=0
24:	LOAD_INT_VAR: id=2; local=true
25:	MTHD_CALL: method='System.String:Get:i,'; native=true
26:	LOAD_INST_MEM
27:	MTHD_CALL: method='System.String:Find:i,c,'; native=true
28:	STOR_INT_VAR: id=5; local=true
29:	LBL
30:	LOAD_INT_LIT: value=-1
31:	LOAD_INT_VAR: id=5; local=true
32:	GTR_INT
33:	JMP: index=116, conditional=false
34:	LOAD_INT_VAR: id=5; local=true
35:	STOR_INT_VAR: id=6; local=true
36:	LOAD_INT_LIT: value=1
37:	STOR_INT_VAR: id=7; local=true
38:	LOAD_INT_LIT: value=0
39:	STOR_INT_VAR: id=3; local=true
40:	LBL
41:	LOAD_INT_VAR: id=7; local=true
42:	JMP: index=47, conditional=true
43:	LOAD_INT_LIT: value=0
44:	STOR_INT_VAR: id=0; local=true
45:	JMP: index=62
46:	LBL
47:	LOAD_INT_VAR: id=4; local=true
48:	LOAD_INT_VAR: id=3; local=true
49:	LES_INT
50:	JMP: index=55, conditional=true
51:	LOAD_INT_LIT: value=0
52:	STOR_INT_VAR: id=0; local=true
53:	JMP: index=61
54:	LBL
55:	LOAD_INST_MEM
56:	LOAD_INT_VAR: id=2; local=false
57:	LOAD_INT_VAR: id=6; local=true
58:	LES_INT
59:	STOR_INT_VAR: id=0; local=true
60:	LBL
61:	LBL
62:	LOAD_INT_VAR: id=0; local=true
63:	JMP: index=88, conditional=false
64:	LBL
65:	LOAD_INT_VAR: id=6; local=true
66:	LOAD_INST_MEM
67:	LOAD_INT_VAR: id=0; local=false
68:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
69:	LOAD_INT_VAR: id=3; local=true
70:	LOAD_INT_VAR: id=2; local=true
71:	MTHD_CALL: method='System.String:Get:i,'; native=true
72:	NEQL_INT
73:	JMP: index=77, conditional=false
74:	LOAD_INT_LIT: value=0
75:	STOR_INT_VAR: id=7; local=true
76:	LBL
77:	LOAD_INT_LIT: value=1
78:	LOAD_INT_VAR: id=6; local=true
79:	ADD_INT
80:	STOR_INT_VAR: id=6; local=true
81:	LBL
82:	LOAD_INT_LIT: value=1
83:	LOAD_INT_VAR: id=3; local=true
84:	ADD_INT
85:	STOR_INT_VAR: id=3; local=true
86:	JMP: index=41
87:	LBL
88:	LBL
89:	LOAD_INT_VAR: id=7; local=true
90:	JMP: index=95, conditional=true
91:	LOAD_INT_LIT: value=0
92:	STOR_INT_VAR: id=0; local=true
93:	JMP: index=100
94:	LBL
95:	LOAD_INT_VAR: id=4; local=true
96:	LOAD_INT_VAR: id=3; local=true
97:	EQL_INT
98:	STOR_INT_VAR: id=0; local=true
99:	LBL
100:	LOAD_INT_VAR: id=0; local=true
101:	JMP: index=105, conditional=false
102:	LOAD_INT_VAR: id=5; local=true
103:	RTRN
104:	LBL
105:	LOAD_INT_LIT: value=1
106:	LOAD_INT_VAR: id=5; local=true
107:	ADD_INT
108:	LOAD_INT_LIT: value=0
109:	LOAD_INT_VAR: id=2; local=true
110:	MTHD_CALL: method='System.String:Get:i,'; native=true
111:	LOAD_INST_MEM
112:	MTHD_CALL: method='System.String:Find:i,c,'; native=true
113:	STOR_INT_VAR: id=5; local=true
114:	JMP: index=30
115:	LBL
116:	LOAD_INT_LIT: value=-1
117:	RTRN
118:	LBL
119:	LOAD_INT_LIT: value=-1
120:	RTRN
--
---------------------------------------------------------
Method: id=15,36; name='System.String:Find:o.System.String,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.String:Find:i,o.System.String,'; native=true
5:	RTRN
--
---------------------------------------------------------
Method: id=15,37; name='System.String:FindAll:o.System.String,'; return='i*';
  blocks=1; is_function=false; num_params=1; mem_size=80
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_ARY_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_ARY_PARM
  7: INT_ARY_PARM
  8: OBJ_PARM
  9: INT_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=8
2:	COPY_INT_VAR: id=2; local=true
3:	NEW_INT_ARY: dimension=1
4:	STOR_INT_VAR: id=3; local=true
5:	LOAD_INT_LIT: value=0
6:	STOR_INT_VAR: id=4; local=true
7:	LOAD_INT_LIT: value=0
8:	STOR_INT_VAR: id=5; local=true
9:	LBL
10:	LOAD_INT_VAR: id=5; local=true
11:	LOAD_INT_VAR: id=0; local=true
12:	LOAD_INST_MEM
13:	MTHD_CALL: method='System.String:Find:i,o.System.String,'; native=true
14:	STOR_INT_VAR: id=5; local=true
15:	LBL
16:	LOAD_INT_LIT: value=-1
17:	LOAD_INT_VAR: id=5; local=true
18:	GTR_INT
19:	JMP: index=62, conditional=false
20:	LOAD_INT_LIT: value=1
21:	LOAD_INT_VAR: id=4; local=true
22:	ADD_INT
23:	STOR_INT_VAR: id=4; local=true
24:	LBL
25:	LOAD_INT_VAR: id=2; local=true
26:	LOAD_INT_VAR: id=4; local=true
27:	LES_INT
28:	JMP: index=37, conditional=false
29:	LOAD_INT_VAR: id=5; local=true
30:	LOAD_INT_LIT: value=1
31:	LOAD_INT_VAR: id=4; local=true
32:	SUB_INT
33:	LOAD_INT_VAR: id=3; local=true
34:	STOR_INT_ARY_ELM: dimension=1; local=true
35:	JMP: index=56
36:	LBL
37:	LOAD_INT_LIT: value=1
38:	LOAD_INT_VAR: id=2; local=true
39:	SHL_INT
40:	NEW_INT_ARY: dimension=1
41:	COPY_INT_VAR: id=6; local=true
42:	LOAD_INT_LIT: value=0
43:	LOAD_INT_VAR: id=3; local=true
44:	LOAD_INT_LIT: value=0
45:	LOAD_INT_VAR: id=2; local=true
46:	LOAD_INST_MEM
47:	MTHD_CALL: method='System.Runtime:Copy:i*,i,i*,i,i,'; native=false
48:	POP_INT
49:	LOAD_INT_LIT: value=1
50:	LOAD_INT_VAR: id=2; local=true
51:	SHL_INT
52:	STOR_INT_VAR: id=2; local=true
53:	LOAD_INT_VAR: id=6; local=true
54:	STOR_INT_VAR: id=3; local=true
55:	LBL
56:	LOAD_INT_VAR: id=0; local=true
57:	LOAD_INT_VAR: id=2; local=false
58:	LOAD_INT_VAR: id=5; local=true
59:	ADD_INT
60:	STOR_INT_VAR: id=5; local=true
61:	LBL
62:	LBL
63:	LOAD_INT_LIT: value=-1
64:	LOAD_INT_VAR: id=5; local=true
65:	GTR_INT
66:	JMP: index=10, conditional=true
67:	LBL
68:	LOAD_INT_VAR: id=4; local=true
69:	NEW_INT_ARY: dimension=1
70:	STOR_INT_VAR: id=7; local=true
71:	LOAD_INT_LIT: value=0
72:	STOR_INT_VAR: id=1; local=true
73:	LBL
74:	LOAD_INT_VAR: id=7; local=true
75:	LOAD_INST_MEM
76:	STOR_INT_VAR: id=8; local=true
77:	STOR_INT_VAR: id=9; local=true
78:	LOAD_INT_VAR: id=9; local=true
79:	LOAD_ARY_SIZE
80:	LOAD_INT_VAR: id=1; local=true
81:	LES_INT
82:	JMP: index=96, conditional=false
83:	LOAD_INT_VAR: id=1; local=true
84:	LOAD_INT_VAR: id=3; local=true
85:	LOAD_INT_ARY_ELM: dimension=1; local=true
86:	LOAD_INT_VAR: id=1; local=true
87:	LOAD_INT_VAR: id=7; local=true
88:	STOR_INT_ARY_ELM: dimension=1; local=true
89:	LBL
90:	LOAD_INT_LIT: value=1
91:	LOAD_INT_VAR: id=1; local=true
92:	ADD_INT
93:	STOR_INT_VAR: id=1; local=true
94:	JMP: index=74
95:	LBL
96:	LOAD_INT_VAR: id=7; local=true
97:	RTRN
--
---------------------------------------------------------
Method: id=15,34; name='System.String:FindLast:c,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=1
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=2; local=false
4:	SUB_INT
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INST_MEM
7:	MTHD_CALL: method='System.String:FindLast:i,c,'; native=true
8:	RTRN
--
---------------------------------------------------------
Method: id=15,35; name='System.String:FindLast:i,c,'; return='i';
  blocks=1; is_function=false; num_params=2; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_PARM
  3: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=2; local=false
5:	LOAD_INT_VAR: id=1; local=true
6:	LES_INT
7:	JMP: index=12, conditional=true
8:	LOAD_INT_LIT: value=0
9:	STOR_INT_VAR: id=0; local=true
10:	JMP: index=17
11:	LBL
12:	LOAD_INT_LIT: value=-1
13:	LOAD_INT_VAR: id=1; local=true
14:	GTR_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=45, conditional=false
19:	LOAD_INT_VAR: id=1; local=true
20:	STOR_INT_VAR: id=3; local=true
21:	LBL
22:	LOAD_INT_LIT: value=-1
23:	LOAD_INT_VAR: id=3; local=true
24:	GTR_INT
25:	JMP: index=44, conditional=false
26:	LBL
27:	LOAD_INT_VAR: id=2; local=true
28:	LOAD_INT_VAR: id=3; local=true
29:	LOAD_INST_MEM
30:	LOAD_INT_VAR: id=0; local=false
31:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
32:	EQL_INT
33:	JMP: index=37, conditional=false
34:	LOAD_INT_VAR: id=3; local=true
35:	RTRN
36:	LBL
37:	LBL
38:	LOAD_INT_LIT: value=1
39:	LOAD_INT_VAR: id=3; local=true
40:	SUB_INT
41:	STOR_INT_VAR: id=3; local=true
42:	JMP: index=22
43:	LBL
44:	LBL
45:	LOAD_INT_LIT: value=-1
46:	RTRN
--
---------------------------------------------------------
Method: id=15,56; name='System.String:First:'; return='c';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=false
3:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
4:	RTRN
--
---------------------------------------------------------
Method: id=15,55; name='System.String:Get:i,'; return='c';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=1; local=true
4:	GTR_INT
5:	JMP: index=10, conditional=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=0; local=true
8:	JMP: index=16
9:	LBL
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=2; local=false
12:	LOAD_INT_VAR: id=1; local=true
13:	LES_INT
14:	STOR_INT_VAR: id=0; local=true
15:	LBL
16:	LOAD_INT_VAR: id=0; local=true
17:	JMP: index=24, conditional=false
18:	LOAD_INT_VAR: id=1; local=true
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=0; local=false
21:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
22:	RTRN
23:	LBL
24:	LOAD_CHAR_LIT value='?'
25:	RTRN
--
---------------------------------------------------------
Method: id=15,24; name='System.String:Has:c,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=-1
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='System.String:Find:i,c,'; native=true
6:	GTR_INT
7:	RTRN
--
---------------------------------------------------------
Method: id=15,25; name='System.String:Has:i,c,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.String:Find:i,c,'; native=true
7:	GTR_INT
8:	RTRN
--
---------------------------------------------------------
Method: id=15,27; name='System.String:Has:i,o.System.String,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INT_VAR: id=1; local=true
5:	LOAD_INST_MEM
6:	MTHD_CALL: method='System.String:Find:i,o.System.String,'; native=true
7:	GTR_INT
8:	RTRN
--
---------------------------------------------------------
Method: id=15,26; name='System.String:Has:o.System.String,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=-1
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=0; local=true
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='System.String:Find:i,o.System.String,'; native=true
6:	GTR_INT
7:	RTRN
--
---------------------------------------------------------
Method: id=15,78; name='System.String:HashID:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	LOAD_INT_LIT: value=5381
1:	STOR_INT_VAR: id=1; local=true
2:	LOAD_INT_LIT: value=0
3:	STOR_INT_VAR: id=0; local=true
4:	LBL
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=2; local=false
7:	LOAD_INST_MEM
8:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
9:	LOAD_INT_VAR: id=0; local=true
10:	LES_INT
11:	JMP: index=30, conditional=false
12:	LOAD_INT_VAR: id=0; local=true
13:	LOAD_INST_MEM
14:	LOAD_INT_VAR: id=0; local=false
15:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
16:	LOAD_INT_VAR: id=1; local=true
17:	LOAD_INT_LIT: value=5
18:	LOAD_INT_VAR: id=1; local=true
19:	SHL_INT
20:	ADD_INT
21:	ADD_INT
22:	STOR_INT_VAR: id=1; local=true
23:	LBL
24:	LOAD_INT_LIT: value=1
25:	LOAD_INT_VAR: id=0; local=true
26:	ADD_INT
27:	STOR_INT_VAR: id=0; local=true
28:	JMP: index=5
29:	LBL
30:	LOAD_INT_VAR: id=1; local=true
31:	RTRN
--
---------------------------------------------------------
Method: id=15,50; name='System.String:Insert:i,c,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=56
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=1; local=true
5:	LES_INT
6:	JMP: index=11, conditional=false
7:	LOAD_INT_LIT: value=1
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=17
10:	LBL
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=2; local=false
13:	LOAD_INT_VAR: id=1; local=true
14:	GTR_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=22, conditional=false
19:	LOAD_INT_LIT: value=0
20:	RTRN
21:	LBL
22:	LOAD_INT_LIT: value=1
23:	LOAD_INT_VAR: id=1; local=true
24:	ADD_INT
25:	STOR_INT_VAR: id=3; local=true
26:	LOAD_INT_VAR: id=1; local=true
27:	LOAD_INST_MEM
28:	LOAD_INT_VAR: id=2; local=false
29:	SUB_INT
30:	STOR_INT_VAR: id=4; local=true
31:	LOAD_INT_LIT: value=1
32:	LOAD_INST_MEM
33:	LOAD_INT_VAR: id=2; local=false
34:	ADD_INT
35:	STOR_INT_VAR: id=5; local=true
36:	LBL
37:	LOAD_INST_MEM
38:	LOAD_INT_VAR: id=1; local=false
39:	LOAD_INT_VAR: id=5; local=true
40:	GTR_INT
41:	JMP: index=80, conditional=false
42:	LOAD_INT_LIT: value=1
43:	LOAD_INST_MEM
44:	LOAD_INT_VAR: id=1; local=false
45:	SHL_INT
46:	LOAD_INT_VAR: id=5; local=true
47:	ADD_INT
48:	COPY_INT_VAR: id=6; local=true
49:	NEW_CHAR_ARY: dimension=1
50:	COPY_INT_VAR: id=7; local=true
51:	LOAD_INT_LIT: value=0
52:	LOAD_INST_MEM
53:	LOAD_INT_VAR: id=0; local=false
54:	LOAD_INT_LIT: value=0
55:	LOAD_INT_VAR: id=1; local=true
56:	LOAD_INST_MEM
57:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
58:	POP_INT
59:	LOAD_INT_VAR: id=2; local=true
60:	LOAD_INT_VAR: id=1; local=true
61:	LOAD_INT_VAR: id=7; local=true
62:	STOR_CHAR_ARY_ELM: dimension=1; local=true
63:	LOAD_INT_VAR: id=7; local=true
64:	LOAD_INT_VAR: id=3; local=true
65:	LOAD_INST_MEM
66:	LOAD_INT_VAR: id=0; local=false
67:	LOAD_INT_VAR: id=1; local=true
68:	LOAD_INT_VAR: id=4; local=true
69:	LOAD_INST_MEM
70:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
71:	POP_INT
72:	LOAD_INT_VAR: id=7; local=true
73:	LOAD_INST_MEM
74:	STOR_INT_VAR: id=0; local=false
75:	LOAD_INT_VAR: id=6; local=true
76:	LOAD_INST_MEM
77:	STOR_INT_VAR: id=1; local=false
78:	JMP: index=96
79:	LBL
80:	LOAD_INST_MEM
81:	LOAD_INT_VAR: id=0; local=false
82:	LOAD_INT_VAR: id=3; local=true
83:	LOAD_INST_MEM
84:	LOAD_INT_VAR: id=0; local=false
85:	LOAD_INT_VAR: id=1; local=true
86:	LOAD_INT_VAR: id=4; local=true
87:	LOAD_INST_MEM
88:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
89:	POP_INT
90:	LOAD_INT_VAR: id=2; local=true
91:	LOAD_INT_VAR: id=1; local=true
92:	LOAD_INST_MEM
93:	LOAD_INT_VAR: id=0; local=false
94:	STOR_CHAR_ARY_ELM: dimension=1; local=false
95:	LBL
96:	LOAD_INT_VAR: id=5; local=true
97:	LOAD_INST_MEM
98:	STOR_INT_VAR: id=2; local=false
99:	LOAD_INT_LIT: value=1
100:	RTRN
--
---------------------------------------------------------
Method: id=15,51; name='System.String:Insert:i,o.System.String,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=88
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_PARM
  8: INT_PARM
  9: CHAR_ARY_PARM
  10: OBJ_PARM
  11: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=1; local=true
5:	LES_INT
6:	JMP: index=11, conditional=false
7:	LOAD_INT_LIT: value=1
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=17
10:	LBL
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=2; local=false
13:	LOAD_INT_VAR: id=1; local=true
14:	GTR_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=22, conditional=false
19:	LOAD_INT_LIT: value=0
20:	RTRN
21:	LBL
22:	LOAD_INT_VAR: id=2; local=true
23:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
24:	COPY_INT_VAR: id=3; local=true
25:	LOAD_INST_MEM
26:	STOR_INT_VAR: id=10; local=true
27:	STOR_INT_VAR: id=11; local=true
28:	LOAD_INT_VAR: id=11; local=true
29:	LOAD_ARY_SIZE
30:	COPY_INT_VAR: id=4; local=true
31:	LOAD_INT_VAR: id=1; local=true
32:	ADD_INT
33:	STOR_INT_VAR: id=5; local=true
34:	LOAD_INT_VAR: id=1; local=true
35:	LOAD_INST_MEM
36:	LOAD_INT_VAR: id=2; local=false
37:	SUB_INT
38:	STOR_INT_VAR: id=6; local=true
39:	LOAD_INT_VAR: id=2; local=true
40:	LOAD_INT_VAR: id=2; local=false
41:	LOAD_INST_MEM
42:	LOAD_INT_VAR: id=2; local=false
43:	ADD_INT
44:	STOR_INT_VAR: id=7; local=true
45:	LBL
46:	LOAD_INST_MEM
47:	LOAD_INT_VAR: id=1; local=false
48:	LOAD_INT_VAR: id=7; local=true
49:	GTR_INT
50:	JMP: index=93, conditional=false
51:	LOAD_INT_LIT: value=1
52:	LOAD_INST_MEM
53:	LOAD_INT_VAR: id=1; local=false
54:	SHL_INT
55:	LOAD_INT_VAR: id=7; local=true
56:	ADD_INT
57:	COPY_INT_VAR: id=8; local=true
58:	NEW_CHAR_ARY: dimension=1
59:	COPY_INT_VAR: id=9; local=true
60:	LOAD_INT_LIT: value=0
61:	LOAD_INST_MEM
62:	LOAD_INT_VAR: id=0; local=false
63:	LOAD_INT_LIT: value=0
64:	LOAD_INT_VAR: id=1; local=true
65:	LOAD_INST_MEM
66:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
67:	POP_INT
68:	LOAD_INT_VAR: id=9; local=true
69:	LOAD_INT_VAR: id=1; local=true
70:	LOAD_INT_VAR: id=3; local=true
71:	LOAD_INT_LIT: value=0
72:	LOAD_INT_VAR: id=4; local=true
73:	LOAD_INST_MEM
74:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
75:	POP_INT
76:	LOAD_INT_VAR: id=9; local=true
77:	LOAD_INT_VAR: id=5; local=true
78:	LOAD_INST_MEM
79:	LOAD_INT_VAR: id=0; local=false
80:	LOAD_INT_VAR: id=1; local=true
81:	LOAD_INT_VAR: id=6; local=true
82:	LOAD_INST_MEM
83:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
84:	POP_INT
85:	LOAD_INT_VAR: id=9; local=true
86:	LOAD_INST_MEM
87:	STOR_INT_VAR: id=0; local=false
88:	LOAD_INT_VAR: id=8; local=true
89:	LOAD_INST_MEM
90:	STOR_INT_VAR: id=1; local=false
91:	JMP: index=113
92:	LBL
93:	LOAD_INST_MEM
94:	LOAD_INT_VAR: id=0; local=false
95:	LOAD_INT_VAR: id=5; local=true
96:	LOAD_INST_MEM
97:	LOAD_INT_VAR: id=0; local=false
98:	LOAD_INT_VAR: id=1; local=true
99:	LOAD_INT_VAR: id=6; local=true
100:	LOAD_INST_MEM
101:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
102:	POP_INT
103:	LOAD_INST_MEM
104:	LOAD_INT_VAR: id=0; local=false
105:	LOAD_INT_VAR: id=1; local=true
106:	LOAD_INT_VAR: id=3; local=true
107:	LOAD_INT_LIT: value=0
108:	LOAD_INT_VAR: id=4; local=true
109:	LOAD_INST_MEM
110:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
111:	POP_INT
112:	LBL
113:	LOAD_INT_VAR: id=7; local=true
114:	LOAD_INST_MEM
115:	STOR_INT_VAR: id=2; local=false
116:	LOAD_INT_LIT: value=1
117:	RTRN
--
---------------------------------------------------------
Method: id=15,52; name='System.String:IsEmpty:'; return='l';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=2; local=false
3:	EQL_INT
4:	JMP: index=9, conditional=false
5:	LOAD_INT_LIT: value=1
6:	STOR_INT_VAR: id=0; local=true
7:	JMP: index=12
8:	LBL
9:	LOAD_INT_LIT: value=0
10:	STOR_INT_VAR: id=0; local=true
11:	LBL
12:	LOAD_INT_VAR: id=0; local=true
13:	RTRN
--
---------------------------------------------------------
Method: id=15,29; name='System.String:IsFloat:'; return='l';
  blocks=1; is_function=false; num_params=0; mem_size=80
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: OBJ_ARY_PARM
  3: INT_PARM
  4: CHAR_PARM
  5: OBJ_PARM
  6: OBJ_PARM
  7: OBJ_PARM
  8: CHAR_PARM
  9: OBJ_PARM
  10: OBJ_ARY_PARM
---------------------------------------------------------
0:	LBL
1:	LOAD_INT_LIT: value=1
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=2; local=false
4:	GTR_INT
5:	JMP: index=143, conditional=false
6:	LOAD_CHAR_LIT value='.'
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=7; local=true
9:	STOR_INT_VAR: id=8; local=true
10:	LOAD_INT_LIT: value=0
11:	LOAD_INT_VAR: id=8; local=true
12:	LOAD_INT_VAR: id=7; local=true
13:	MTHD_CALL: method='System.String:Count:i,c,'; native=true
14:	STOR_INT_VAR: id=1; local=true
15:	LBL
16:	LOAD_INT_LIT: value=1
17:	LOAD_INT_VAR: id=1; local=true
18:	EQL_INT
19:	JMP: index=140, conditional=false
20:	LOAD_INT_LIT: value=1
21:	NEW_CHAR_ARY: dimension=1
22:	LOAD_INT_LIT: value=20
23:	LOAD_INT_LIT: value=-3994
24:	TRAP_RTRN: args=3
25:	NEW_OBJ_INST: class='System.String'
26:	MTHD_CALL: method='System.String:New:c*,'; native=false
27:	LOAD_INST_MEM
28:	MTHD_CALL: method='System.String:Split:o.System.String,'; native=true
29:	COPY_INT_VAR: id=2; local=true
30:	LOAD_INST_MEM
31:	STOR_INT_VAR: id=9; local=true
32:	STOR_INT_VAR: id=10; local=true
33:	LOAD_INT_VAR: id=10; local=true
34:	LOAD_ARY_SIZE
35:	STOR_INT_VAR: id=1; local=true
36:	LBL
37:	LOAD_INT_LIT: value=0
38:	LOAD_INT_VAR: id=1; local=true
39:	EQL_INT
40:	JMP: index=88, conditional=false
41:	LOAD_INT_LIT: value=0
42:	STOR_INT_VAR: id=3; local=true
43:	LBL
44:	LOAD_INT_LIT: value=1
45:	LOAD_INST_MEM
46:	LOAD_INT_VAR: id=2; local=false
47:	SUB_INT
48:	LOAD_INT_VAR: id=3; local=true
49:	LES_INT
50:	JMP: index=84, conditional=false
51:	LOAD_INT_VAR: id=3; local=true
52:	LOAD_INST_MEM
53:	LOAD_INT_VAR: id=0; local=false
54:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
55:	STOR_INT_VAR: id=4; local=true
56:	LBL
57:	LOAD_INT_LIT: value=1
58:	LOAD_CHAR_LIT value='0'
59:	LOAD_INT_VAR: id=4; local=true
60:	GTR_EQL_INT
61:	JMP: index=66, conditional=true
62:	LOAD_INT_LIT: value=0
63:	STOR_INT_VAR: id=0; local=true
64:	JMP: index=71
65:	LBL
66:	LOAD_CHAR_LIT value='9'
67:	LOAD_INT_VAR: id=4; local=true
68:	LES_EQL_INT
69:	STOR_INT_VAR: id=0; local=true
70:	LBL
71:	LOAD_INT_VAR: id=0; local=true
72:	NEQL_INT
73:	JMP: index=77, conditional=false
74:	LOAD_INT_LIT: value=0
75:	RTRN
76:	LBL
77:	LBL
78:	LOAD_INT_LIT: value=1
79:	LOAD_INT_VAR: id=3; local=true
80:	ADD_INT
81:	STOR_INT_VAR: id=3; local=true
82:	JMP: index=44
83:	LBL
84:	LOAD_INT_LIT: value=1
85:	RTRN
86:	JMP: index=139
87:	LBL
88:	LOAD_INT_LIT: value=2
89:	LOAD_INT_VAR: id=1; local=true
90:	EQL_INT
91:	JMP: index=139, conditional=false
92:	LOAD_INT_LIT: value=0
93:	LOAD_INT_VAR: id=2; local=true
94:	LOAD_INT_ARY_ELM: dimension=1; local=true
95:	STOR_INT_VAR: id=5; local=true
96:	LOAD_INT_LIT: value=1
97:	LOAD_INT_VAR: id=2; local=true
98:	LOAD_INT_ARY_ELM: dimension=1; local=true
99:	STOR_INT_VAR: id=6; local=true
100:	LBL
101:	LOAD_INT_LIT: value=0
102:	LOAD_INT_VAR: id=5; local=true
103:	NEQL_INT
104:	JMP: index=109, conditional=true
105:	LOAD_INT_LIT: value=0
106:	STOR_INT_VAR: id=0; local=true
107:	JMP: index=114
108:	LBL
109:	LOAD_INT_LIT: value=0
110:	LOAD_INT_VAR: id=6; local=true
111:	NEQL_INT
112:	STOR_INT_VAR: id=0; local=true
113:	LBL
114:	LOAD_INT_VAR: id=0; local=true
115:	JMP: index=133, conditional=false
116:	LOAD_INT_VAR: id=5; local=true
117:	LOAD_INST_MEM
118:	MTHD_CALL: method='System.String:IsInt:o.System.String,'; native=false
119:	JMP: index=124, conditional=true
120:	LOAD_INT_LIT: value=0
121:	STOR_INT_VAR: id=0; local=true
122:	JMP: index=129
123:	LBL
124:	LOAD_INT_VAR: id=6; local=true
125:	LOAD_INST_MEM
126:	MTHD_CALL: method='System.String:IsInt:o.System.String,'; native=false
127:	STOR_INT_VAR: id=0; local=true
128:	LBL
129:	LOAD_INT_VAR: id=0; local=true
130:	RTRN
131:	JMP: index=138
132:	LBL
133:	LOAD_INT_VAR: id=6; local=true
134:	LOAD_INST_MEM
135:	MTHD_CALL: method='System.String:IsInt:o.System.String,'; native=false
136:	RTRN
137:	LBL
138:	LBL
139:	LBL
140:	LOAD_INT_LIT: value=0
141:	RTRN
142:	LBL
143:	LOAD_INST_MEM
144:	MTHD_CALL: method='System.String:IsInt:'; native=true
145:	RTRN
--
---------------------------------------------------------
Method: id=15,31; name='System.String:IsInt:'; return='l';
  blocks=1; is_function=false; num_params=0; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: CHAR_PARM
---------------------------------------------------------
0:	LBL
1:	LOAD_INT_LIT: value=0
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=2; local=false
4:	GTR_INT
5:	JMP: index=232, conditional=false
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=1; local=true
8:	LBL
9:	LOAD_CHAR_LIT value='+'
10:	LOAD_INT_LIT: value=0
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=0; local=false
13:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
14:	EQL_INT
15:	JMP: index=20, conditional=false
16:	LOAD_INT_LIT: value=1
17:	STOR_INT_VAR: id=0; local=true
18:	JMP: index=28
19:	LBL
20:	LOAD_CHAR_LIT value='-'
21:	LOAD_INT_LIT: value=0
22:	LOAD_INST_MEM
23:	LOAD_INT_VAR: id=0; local=false
24:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
25:	EQL_INT
26:	STOR_INT_VAR: id=0; local=true
27:	LBL
28:	LOAD_INT_VAR: id=0; local=true
29:	JMP: index=35, conditional=false
30:	LOAD_INT_LIT: value=1
31:	LOAD_INT_VAR: id=1; local=true
32:	ADD_INT
33:	STOR_INT_VAR: id=1; local=true
34:	LBL
35:	LBL
36:	LOAD_INT_LIT: value=2
37:	LOAD_INT_VAR: id=1; local=true
38:	ADD_INT
39:	LOAD_INST_MEM
40:	LOAD_INT_VAR: id=2; local=false
41:	GTR_INT
42:	JMP: index=47, conditional=true
43:	LOAD_INT_LIT: value=0
44:	STOR_INT_VAR: id=0; local=true
45:	JMP: index=83
46:	LBL
47:	LOAD_CHAR_LIT value='0'
48:	LOAD_INT_VAR: id=1; local=true
49:	LOAD_INST_MEM
50:	LOAD_INT_VAR: id=0; local=false
51:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
52:	EQL_INT
53:	JMP: index=58, conditional=true
54:	LOAD_INT_LIT: value=0
55:	STOR_INT_VAR: id=0; local=true
56:	JMP: index=82
57:	LBL
58:	LOAD_CHAR_LIT value='x'
59:	LOAD_INT_LIT: value=1
60:	LOAD_INT_VAR: id=1; local=true
61:	ADD_INT
62:	LOAD_INST_MEM
63:	LOAD_INT_VAR: id=0; local=false
64:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
65:	EQL_INT
66:	JMP: index=71, conditional=false
67:	LOAD_INT_LIT: value=1
68:	STOR_INT_VAR: id=0; local=true
69:	JMP: index=81
70:	LBL
71:	LOAD_CHAR_LIT value='X'
72:	LOAD_INT_LIT: value=1
73:	LOAD_INT_VAR: id=1; local=true
74:	ADD_INT
75:	LOAD_INST_MEM
76:	LOAD_INT_VAR: id=0; local=false
77:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
78:	EQL_INT
79:	STOR_INT_VAR: id=0; local=true
80:	LBL
81:	LBL
82:	LBL
83:	LOAD_INT_VAR: id=0; local=true
84:	JMP: index=184, conditional=false
85:	LOAD_INT_LIT: value=2
86:	LOAD_INT_VAR: id=1; local=true
87:	ADD_INT
88:	STOR_INT_VAR: id=1; local=true
89:	LBL
90:	LOAD_INST_MEM
91:	LOAD_INT_VAR: id=2; local=false
92:	LOAD_INT_VAR: id=1; local=true
93:	LES_INT
94:	JMP: index=180, conditional=false
95:	LOAD_INT_VAR: id=1; local=true
96:	LOAD_INST_MEM
97:	LOAD_INT_VAR: id=0; local=false
98:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
99:	STOR_INT_VAR: id=2; local=true
100:	LOAD_CHAR_LIT value='0'
101:	LOAD_INT_VAR: id=2; local=true
102:	GTR_EQL_INT
103:	JMP: index=108, conditional=true
104:	LOAD_INT_LIT: value=0
105:	STOR_INT_VAR: id=0; local=true
106:	JMP: index=113
107:	LBL
108:	LOAD_CHAR_LIT value='9'
109:	LOAD_INT_VAR: id=2; local=true
110:	LES_EQL_INT
111:	STOR_INT_VAR: id=0; local=true
112:	LBL
113:	LOAD_INT_VAR: id=0; local=true
114:	STOR_INT_VAR: id=3; local=true
115:	LOAD_CHAR_LIT value='a'
116:	LOAD_INT_VAR: id=2; local=true
117:	GTR_EQL_INT
118:	JMP: index=123, conditional=true
119:	LOAD_INT_LIT: value=0
120:	STOR_INT_VAR: id=0; local=true
121:	JMP: index=128
122:	LBL
123:	LOAD_CHAR_LIT value='f'
124:	LOAD_INT_VAR: id=2; local=true
125:	LES_EQL_INT
126:	STOR_INT_VAR: id=0; local=true
127:	LBL
128:	LOAD_INT_VAR: id=0; local=true
129:	STOR_INT_VAR: id=4; local=true
130:	LOAD_CHAR_LIT value='A'
131:	LOAD_INT_VAR: id=2; local=true
132:	GTR_EQL_INT
133:	JMP: index=138, conditional=true
134:	LOAD_INT_LIT: value=0
135:	STOR_INT_VAR: id=0; local=true
136:	JMP: index=143
137:	LBL
138:	LOAD_CHAR_LIT value='F'
139:	LOAD_INT_VAR: id=2; local=true
140:	LES_EQL_INT
141:	STOR_INT_VAR: id=0; local=true
142:	LBL
143:	LOAD_INT_VAR: id=0; local=true
144:	STOR_INT_VAR: id=5; local=true
145:	LBL
146:	LOAD_INT_LIT: value=1
147:	LOAD_INT_VAR: id=3; local=true
148:	NEQL_INT
149:	JMP: index=154, conditional=true
150:	LOAD_INT_LIT: value=0
151:	STOR_INT_VAR: id=0; local=true
152:	JMP: index=168
153:	LBL
154:	LOAD_INT_LIT: value=1
155:	LOAD_INT_VAR: id=4; local=true
156:	NEQL_INT
157:	JMP: index=162, conditional=true
158:	LOAD_INT_LIT: value=0
159:	STOR_INT_VAR: id=0; local=true
160:	JMP: index=167
161:	LBL
162:	LOAD_INT_LIT: value=1
163:	LOAD_INT_VAR: id=5; local=true
164:	NEQL_INT
165:	STOR_INT_VAR: id=0; local=true
166:	LBL
167:	LBL
168:	LOAD_INT_VAR: id=0; local=true
169:	JMP: index=173, conditional=false
170:	LOAD_INT_LIT: value=0
171:	RTRN
172:	LBL
173:	LBL
174:	LOAD_INT_LIT: value=1
175:	LOAD_INT_VAR: id=1; local=true
176:	ADD_INT
177:	STOR_INT_VAR: id=1; local=true
178:	JMP: index=90
179:	LBL
180:	LOAD_INT_LIT: value=1
181:	RTRN
182:	JMP: index=231
183:	LBL
184:	LOAD_INT_VAR: id=1; local=true
185:	LOAD_INST_MEM
186:	LOAD_INT_VAR: id=2; local=false
187:	GTR_INT
188:	JMP: index=231, conditional=false
189:	LBL
190:	LOAD_INST_MEM
191:	LOAD_INT_VAR: id=2; local=false
192:	LOAD_INT_VAR: id=1; local=true
193:	LES_INT
194:	JMP: index=228, conditional=false
195:	LOAD_INT_VAR: id=1; local=true
196:	LOAD_INST_MEM
197:	LOAD_INT_VAR: id=0; local=false
198:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
199:	STOR_INT_VAR: id=6; local=true
200:	LBL
201:	LOAD_INT_LIT: value=1
202:	LOAD_CHAR_LIT value='0'
203:	LOAD_INT_VAR: id=6; local=true
204:	GTR_EQL_INT
205:	JMP: index=210, conditional=true
206:	LOAD_INT_LIT: value=0
207:	STOR_INT_VAR: id=0; local=true
208:	JMP: index=215
209:	LBL
210:	LOAD_CHAR_LIT value='9'
211:	LOAD_INT_VAR: id=6; local=true
212:	LES_EQL_INT
213:	STOR_INT_VAR: id=0; local=true
214:	LBL
215:	LOAD_INT_VAR: id=0; local=true
216:	NEQL_INT
217:	JMP: index=221, conditional=false
218:	LOAD_INT_LIT: value=0
219:	RTRN
220:	LBL
221:	LBL
222:	LOAD_INT_LIT: value=1
223:	LOAD_INT_VAR: id=1; local=true
224:	ADD_INT
225:	STOR_INT_VAR: id=1; local=true
226:	JMP: index=190
227:	LBL
228:	LOAD_INT_LIT: value=1
229:	RTRN
230:	LBL
231:	LBL
232:	LOAD_INT_LIT: value=0
233:	RTRN
--
---------------------------------------------------------
Method: id=15,30; name='System.String:IsInt:o.System.String,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=56
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: INT_PARM
  3: CHAR_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LBL
2:	LOAD_INT_LIT: value=0
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_VAR: id=2; local=false
5:	GTR_INT
6:	JMP: index=226, conditional=false
7:	LOAD_INT_LIT: value=0
8:	STOR_INT_VAR: id=2; local=true
9:	LBL
10:	LOAD_CHAR_LIT value='+'
11:	LOAD_INT_LIT: value=0
12:	LOAD_INT_VAR: id=1; local=true
13:	MTHD_CALL: method='System.String:Get:i,'; native=true
14:	EQL_INT
15:	JMP: index=20, conditional=false
16:	LOAD_INT_LIT: value=1
17:	STOR_INT_VAR: id=0; local=true
18:	JMP: index=27
19:	LBL
20:	LOAD_CHAR_LIT value='-'
21:	LOAD_INT_LIT: value=0
22:	LOAD_INT_VAR: id=1; local=true
23:	MTHD_CALL: method='System.String:Get:i,'; native=true
24:	EQL_INT
25:	STOR_INT_VAR: id=0; local=true
26:	LBL
27:	LOAD_INT_VAR: id=0; local=true
28:	JMP: index=34, conditional=false
29:	LOAD_INT_LIT: value=1
30:	LOAD_INT_VAR: id=2; local=true
31:	ADD_INT
32:	STOR_INT_VAR: id=2; local=true
33:	LBL
34:	LBL
35:	LOAD_INT_LIT: value=2
36:	LOAD_INT_VAR: id=2; local=true
37:	ADD_INT
38:	LOAD_INT_VAR: id=1; local=true
39:	LOAD_INT_VAR: id=2; local=false
40:	GTR_INT
41:	JMP: index=46, conditional=true
42:	LOAD_INT_LIT: value=0
43:	STOR_INT_VAR: id=0; local=true
44:	JMP: index=79
45:	LBL
46:	LOAD_CHAR_LIT value='0'
47:	LOAD_INT_VAR: id=2; local=true
48:	LOAD_INT_VAR: id=1; local=true
49:	MTHD_CALL: method='System.String:Get:i,'; native=true
50:	EQL_INT
51:	JMP: index=56, conditional=true
52:	LOAD_INT_LIT: value=0
53:	STOR_INT_VAR: id=0; local=true
54:	JMP: index=78
55:	LBL
56:	LOAD_CHAR_LIT value='x'
57:	LOAD_INT_LIT: value=1
58:	LOAD_INT_VAR: id=2; local=true
59:	ADD_INT
60:	LOAD_INT_VAR: id=1; local=true
61:	MTHD_CALL: method='System.String:Get:i,'; native=true
62:	EQL_INT
63:	JMP: index=68, conditional=false
64:	LOAD_INT_LIT: value=1
65:	STOR_INT_VAR: id=0; local=true
66:	JMP: index=77
67:	LBL
68:	LOAD_CHAR_LIT value='X'
69:	LOAD_INT_LIT: value=1
70:	LOAD_INT_VAR: id=2; local=true
71:	ADD_INT
72:	LOAD_INT_VAR: id=1; local=true
73:	MTHD_CALL: method='System.String:Get:i,'; native=true
74:	EQL_INT
75:	STOR_INT_VAR: id=0; local=true
76:	LBL
77:	LBL
78:	LBL
79:	LOAD_INT_VAR: id=0; local=true
80:	JMP: index=179, conditional=false
81:	LOAD_INT_LIT: value=2
82:	LOAD_INT_VAR: id=2; local=true
83:	ADD_INT
84:	STOR_INT_VAR: id=2; local=true
85:	LBL
86:	LOAD_INT_VAR: id=1; local=true
87:	LOAD_INT_VAR: id=2; local=false
88:	LOAD_INT_VAR: id=2; local=true
89:	LES_INT
90:	JMP: index=175, conditional=false
91:	LOAD_INT_VAR: id=2; local=true
92:	LOAD_INT_VAR: id=1; local=true
93:	MTHD_CALL: method='System.String:Get:i,'; native=true
94:	STOR_INT_VAR: id=3; local=true
95:	LOAD_CHAR_LIT value='0'
96:	LOAD_INT_VAR: id=3; local=true
97:	GTR_EQL_INT
98:	JMP: index=103, conditional=true
99:	LOAD_INT_LIT: value=0
100:	STOR_INT_VAR: id=0; local=true
101:	JMP: index=108
102:	LBL
103:	LOAD_CHAR_LIT value='9'
104:	LOAD_INT_VAR: id=3; local=true
105:	LES_EQL_INT
106:	STOR_INT_VAR: id=0; local=true
107:	LBL
108:	LOAD_INT_VAR: id=0; local=true
109:	STOR_INT_VAR: id=4; local=true
110:	LOAD_CHAR_LIT value='a'
111:	LOAD_INT_VAR: id=3; local=true
112:	GTR_EQL_INT
113:	JMP: index=118, conditional=true
114:	LOAD_INT_LIT: value=0
115:	STOR_INT_VAR: id=0; local=true
116:	JMP: index=123
117:	LBL
118:	LOAD_CHAR_LIT value='f'
119:	LOAD_INT_VAR: id=3; local=true
120:	LES_EQL_INT
121:	STOR_INT_VAR: id=0; local=true
122:	LBL
123:	LOAD_INT_VAR: id=0; local=true
124:	STOR_INT_VAR: id=5; local=true
125:	LOAD_CHAR_LIT value='A'
126:	LOAD_INT_VAR: id=3; local=true
127:	GTR_EQL_INT
128:	JMP: index=133, conditional=true
129:	LOAD_INT_LIT: value=0
130:	STOR_INT_VAR: id=0; local=true
131:	JMP: index=138
132:	LBL
133:	LOAD_CHAR_LIT value='F'
134:	LOAD_INT_VAR: id=3; local=true
135:	LES_EQL_INT
136:	STOR_INT_VAR: id=0; local=true
137:	LBL
138:	LOAD_INT_VAR: id=0; local=true
139:	STOR_INT_VAR: id=6; local=true
140:	LBL
141:	LOAD_INT_LIT: value=1
142:	LOAD_INT_VAR: id=4; local=true
143:	NEQL_INT
144:	JMP: index=149, conditional=true
145:	LOAD_INT_LIT: value=0
146:	STOR_INT_VAR: id=0; local=true
147:	JMP: index=163
148:	LBL
149:	LOAD_INT_LIT: value=1
150:	LOAD_INT_VAR: id=5; local=true
151:	NEQL_INT
152:	JMP: index=157, conditional=true
153:	LOAD_INT_LIT: value=0
154:	STOR_INT_VAR: id=0; local=true
155:	JMP: index=162
156:	LBL
157:	LOAD_INT_LIT: value=1
158:	LOAD_INT_VAR: id=6; local=true
159:	NEQL_INT
160:	STOR_INT_VAR: id=0; local=true
161:	LBL
162:	LBL
163:	LOAD_INT_VAR: id=0; local=true
164:	JMP: index=168, conditional=false
165:	LOAD_INT_LIT: value=0
166:	RTRN
167:	LBL
168:	LBL
169:	LOAD_INT_LIT: value=1
170:	LOAD_INT_VAR: id=2; local=true
171:	ADD_INT
172:	STOR_INT_VAR: id=2; local=true
173:	JMP: index=86
174:	LBL
175:	LOAD_INT_LIT: value=1
176:	RTRN
177:	JMP: index=225
178:	LBL
179:	LOAD_INT_VAR: id=2; local=true
180:	LOAD_INT_VAR: id=1; local=true
181:	LOAD_INT_VAR: id=2; local=false
182:	GTR_INT
183:	JMP: index=225, conditional=false
184:	LBL
185:	LOAD_INT_VAR: id=1; local=true
186:	LOAD_INT_VAR: id=2; local=false
187:	LOAD_INT_VAR: id=2; local=true
188:	LES_INT
189:	JMP: index=222, conditional=false
190:	LOAD_INT_VAR: id=2; local=true
191:	LOAD_INT_VAR: id=1; local=true
192:	MTHD_CALL: method='System.String:Get:i,'; native=true
193:	STOR_INT_VAR: id=7; local=true
194:	LBL
195:	LOAD_INT_LIT: value=1
196:	LOAD_CHAR_LIT value='0'
197:	LOAD_INT_VAR: id=7; local=true
198:	GTR_EQL_INT
199:	JMP: index=204, conditional=true
200:	LOAD_INT_LIT: value=0
201:	STOR_INT_VAR: id=0; local=true
202:	JMP: index=209
203:	LBL
204:	LOAD_CHAR_LIT value='9'
205:	LOAD_INT_VAR: id=7; local=true
206:	LES_EQL_INT
207:	STOR_INT_VAR: id=0; local=true
208:	LBL
209:	LOAD_INT_VAR: id=0; local=true
210:	NEQL_INT
211:	JMP: index=215, conditional=false
212:	LOAD_INT_LIT: value=0
213:	RTRN
214:	LBL
215:	LBL
216:	LOAD_INT_LIT: value=1
217:	LOAD_INT_VAR: id=2; local=true
218:	ADD_INT
219:	STOR_INT_VAR: id=2; local=true
220:	JMP: index=185
221:	LBL
222:	LOAD_INT_LIT: value=1
223:	RTRN
224:	LBL
225:	LBL
226:	LOAD_INT_LIT: value=0
227:	RTRN
--
---------------------------------------------------------
Method: id=15,57; name='System.String:Last:'; return='c';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LBL
1:	LOAD_INT_LIT: value=0
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=2; local=false
4:	GTR_INT
5:	JMP: index=15, conditional=false
6:	LOAD_INT_LIT: value=1
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=2; local=false
9:	SUB_INT
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=0; local=false
12:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
13:	RTRN
14:	LBL
15:	LOAD_CHAR_LIT value='?'
16:	RTRN
--
---------------------------------------------------------
Method: id=15,70; name='System.String:Lines:'; return='o.System.String*';
  blocks=1; is_function=false; num_params=0; mem_size=80
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: OBJ_PARM
  4: OBJ_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_PARM
  8: OBJ_ARY_PARM
  9: INT_PARM
  10: INT_PARM
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	STOR_INT_VAR: id=5; local=true
2:	LOAD_INT_LIT: value=0
3:	STOR_INT_VAR: id=6; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=7; local=true
6:	LOAD_INT_LIT: value=0
7:	STOR_INT_VAR: id=1; local=true
8:	LBL
9:	LOAD_INST_MEM
10:	LOAD_INT_VAR: id=2; local=false
11:	LOAD_INST_MEM
12:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
13:	LOAD_INT_VAR: id=1; local=true
14:	LES_INT
15:	JMP: index=109, conditional=false
16:	LBL
17:	LOAD_INT_VAR: id=7; local=true
18:	JMP: index=23, conditional=false
19:	LOAD_INT_LIT: value=0
20:	STOR_INT_VAR: id=7; local=true
21:	JMP: index=102
22:	LBL
23:	LBL
24:	LOAD_CHAR_LIT value='?'
25:	LOAD_INT_VAR: id=1; local=true
26:	LOAD_INST_MEM
27:	LOAD_INT_VAR: id=0; local=false
28:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
29:	EQL_INT
30:	JMP: index=35, conditional=true
31:	LOAD_INT_LIT: value=0
32:	STOR_INT_VAR: id=0; local=true
33:	JMP: index=57
34:	LBL
35:	LOAD_INST_MEM
36:	LOAD_INT_VAR: id=2; local=false
37:	LOAD_INT_LIT: value=1
38:	LOAD_INT_VAR: id=1; local=true
39:	ADD_INT
40:	LES_INT
41:	JMP: index=46, conditional=true
42:	LOAD_INT_LIT: value=0
43:	STOR_INT_VAR: id=0; local=true
44:	JMP: index=56
45:	LBL
46:	LOAD_CHAR_LIT value='?'
47:	LOAD_INT_LIT: value=1
48:	LOAD_INT_VAR: id=1; local=true
49:	ADD_INT
50:	LOAD_INST_MEM
51:	LOAD_INT_VAR: id=0; local=false
52:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
53:	EQL_INT
54:	STOR_INT_VAR: id=0; local=true
55:	LBL
56:	LBL
57:	LOAD_INT_VAR: id=0; local=true
58:	JMP: index=71, conditional=false
59:	LOAD_INT_LIT: value=1
60:	LOAD_INT_VAR: id=5; local=true
61:	ADD_INT
62:	STOR_INT_VAR: id=5; local=true
63:	LOAD_INT_LIT: value=2
64:	LOAD_INT_VAR: id=1; local=true
65:	ADD_INT
66:	STOR_INT_VAR: id=6; local=true
67:	LOAD_INT_LIT: value=1
68:	STOR_INT_VAR: id=7; local=true
69:	JMP: index=101
70:	LBL
71:	LOAD_CHAR_LIT value='?'
72:	LOAD_INT_VAR: id=1; local=true
73:	LOAD_INST_MEM
74:	LOAD_INT_VAR: id=0; local=false
75:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
76:	EQL_INT
77:	JMP: index=82, conditional=false
78:	LOAD_INT_LIT: value=1
79:	STOR_INT_VAR: id=0; local=true
80:	JMP: index=90
81:	LBL
82:	LOAD_CHAR_LIT value='?'
83:	LOAD_INT_VAR: id=1; local=true
84:	LOAD_INST_MEM
85:	LOAD_INT_VAR: id=0; local=false
86:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
87:	EQL_INT
88:	STOR_INT_VAR: id=0; local=true
89:	LBL
90:	LOAD_INT_VAR: id=0; local=true
91:	JMP: index=101, conditional=false
92:	LOAD_INT_LIT: value=1
93:	LOAD_INT_VAR: id=5; local=true
94:	ADD_INT
95:	STOR_INT_VAR: id=5; local=true
96:	LOAD_INT_LIT: value=1
97:	LOAD_INT_VAR: id=1; local=true
98:	ADD_INT
99:	STOR_INT_VAR: id=6; local=true
100:	LBL
101:	LBL
102:	LBL
103:	LOAD_INT_LIT: value=1
104:	LOAD_INT_VAR: id=1; local=true
105:	ADD_INT
106:	STOR_INT_VAR: id=1; local=true
107:	JMP: index=9
108:	LBL
109:	LOAD_INT_VAR: id=5; local=true
110:	NEW_INT_ARY: dimension=1
111:	STOR_INT_VAR: id=8; local=true
112:	LOAD_INT_LIT: value=0
113:	STOR_INT_VAR: id=5; local=true
114:	LOAD_INT_LIT: value=0
115:	STOR_INT_VAR: id=6; local=true
116:	LOAD_INT_LIT: value=0
117:	STOR_INT_VAR: id=7; local=true
118:	LOAD_INT_LIT: value=0
119:	STOR_INT_VAR: id=2; local=true
120:	LBL
121:	LOAD_INST_MEM
122:	LOAD_INT_VAR: id=2; local=false
123:	LOAD_INST_MEM
124:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
125:	LOAD_INT_VAR: id=2; local=true
126:	LES_INT
127:	JMP: index=277, conditional=false
128:	LBL
129:	LOAD_INT_VAR: id=7; local=true
130:	JMP: index=135, conditional=false
131:	LOAD_INT_LIT: value=0
132:	STOR_INT_VAR: id=7; local=true
133:	JMP: index=270
134:	LBL
135:	LBL
136:	LOAD_CHAR_LIT value='?'
137:	LOAD_INT_VAR: id=2; local=true
138:	LOAD_INST_MEM
139:	LOAD_INT_VAR: id=0; local=false
140:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
141:	EQL_INT
142:	JMP: index=147, conditional=true
143:	LOAD_INT_LIT: value=0
144:	STOR_INT_VAR: id=0; local=true
145:	JMP: index=169
146:	LBL
147:	LOAD_INST_MEM
148:	LOAD_INT_VAR: id=2; local=false
149:	LOAD_INT_LIT: value=1
150:	LOAD_INT_VAR: id=2; local=true
151:	ADD_INT
152:	LES_INT
153:	JMP: index=158, conditional=true
154:	LOAD_INT_LIT: value=0
155:	STOR_INT_VAR: id=0; local=true
156:	JMP: index=168
157:	LBL
158:	LOAD_CHAR_LIT value='?'
159:	LOAD_INT_LIT: value=1
160:	LOAD_INT_VAR: id=2; local=true
161:	ADD_INT
162:	LOAD_INST_MEM
163:	LOAD_INT_VAR: id=0; local=false
164:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
165:	EQL_INT
166:	STOR_INT_VAR: id=0; local=true
167:	LBL
168:	LBL
169:	LOAD_INT_VAR: id=0; local=true
170:	JMP: index=211, conditional=false
171:	LOAD_INT_VAR: id=6; local=true
172:	LOAD_INT_VAR: id=2; local=true
173:	SUB_INT
174:	STOR_INT_VAR: id=9; local=true
175:	LBL
176:	LOAD_INT_LIT: value=0
177:	LOAD_INT_VAR: id=9; local=true
178:	GTR_INT
179:	JMP: index=193, conditional=false
180:	LOAD_INT_VAR: id=6; local=true
181:	LOAD_INT_VAR: id=9; local=true
182:	LOAD_INST_MEM
183:	MTHD_CALL: method='System.String:SubString:i,i,'; native=false
184:	LOAD_INT_VAR: id=5; local=true
185:	LOAD_INT_VAR: id=8; local=true
186:	STOR_INT_ARY_ELM: dimension=1; local=true
187:	LOAD_INT_LIT: value=1
188:	LOAD_INT_VAR: id=5; local=true
189:	ADD_INT
190:	STOR_INT_VAR: id=5; local=true
191:	JMP: index=203
192:	LBL
193:	NEW_OBJ_INST: class='System.String'
194:	MTHD_CALL: method='System.String:New:'; native=false
195:	LOAD_INT_VAR: id=5; local=true
196:	LOAD_INT_VAR: id=8; local=true
197:	STOR_INT_ARY_ELM: dimension=1; local=true
198:	LOAD_INT_LIT: value=1
199:	LOAD_INT_VAR: id=5; local=true
200:	ADD_INT
201:	STOR_INT_VAR: id=5; local=true
202:	LBL
203:	LOAD_INT_LIT: value=2
204:	LOAD_INT_VAR: id=2; local=true
205:	ADD_INT
206:	STOR_INT_VAR: id=6; local=true
207:	LOAD_INT_LIT: value=1
208:	STOR_INT_VAR: id=7; local=true
209:	JMP: index=269
210:	LBL
211:	LOAD_CHAR_LIT value='?'
212:	LOAD_INT_VAR: id=2; local=true
213:	LOAD_INST_MEM
214:	LOAD_INT_VAR: id=0; local=false
215:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
216:	EQL_INT
217:	JMP: index=222, conditional=false
218:	LOAD_INT_LIT: value=1
219:	STOR_INT_VAR: id=0; local=true
220:	JMP: index=230
221:	LBL
222:	LOAD_CHAR_LIT value='?'
223:	LOAD_INT_VAR: id=2; local=true
224:	LOAD_INST_MEM
225:	LOAD_INT_VAR: id=0; local=false
226:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
227:	EQL_INT
228:	STOR_INT_VAR: id=0; local=true
229:	LBL
230:	LOAD_INT_VAR: id=0; local=true
231:	JMP: index=269, conditional=false
232:	LOAD_INT_VAR: id=6; local=true
233:	LOAD_INT_VAR: id=2; local=true
234:	SUB_INT
235:	STOR_INT_VAR: id=10; local=true
236:	LBL
237:	LOAD_INT_LIT: value=0
238:	LOAD_INT_VAR: id=10; local=true
239:	GTR_INT
240:	JMP: index=254, conditional=false
241:	LOAD_INT_VAR: id=6; local=true
242:	LOAD_INT_VAR: id=10; local=true
243:	LOAD_INST_MEM
244:	MTHD_CALL: method='System.String:SubString:i,i,'; native=false
245:	LOAD_INT_VAR: id=5; local=true
246:	LOAD_INT_VAR: id=8; local=true
247:	STOR_INT_ARY_ELM: dimension=1; local=true
248:	LOAD_INT_LIT: value=1
249:	LOAD_INT_VAR: id=5; local=true
250:	ADD_INT
251:	STOR_INT_VAR: id=5; local=true
252:	JMP: index=264
253:	LBL
254:	NEW_OBJ_INST: class='System.String'
255:	MTHD_CALL: method='System.String:New:'; native=false
256:	LOAD_INT_VAR: id=5; local=true
257:	LOAD_INT_VAR: id=8; local=true
258:	STOR_INT_ARY_ELM: dimension=1; local=true
259:	LOAD_INT_LIT: value=1
260:	LOAD_INT_VAR: id=5; local=true
261:	ADD_INT
262:	STOR_INT_VAR: id=5; local=true
263:	LBL
264:	LOAD_INT_LIT: value=1
265:	LOAD_INT_VAR: id=2; local=true
266:	ADD_INT
267:	STOR_INT_VAR: id=6; local=true
268:	LBL
269:	LBL
270:	LBL
271:	LOAD_INT_LIT: value=1
272:	LOAD_INT_VAR: id=2; local=true
273:	ADD_INT
274:	STOR_INT_VAR: id=2; local=true
275:	JMP: index=121
276:	LBL
277:	LOAD_INT_VAR: id=8; local=true
278:	RTRN
--
---------------------------------------------------------
Method: id=15,0; name='System.String:New:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	MTHD_CALL: method='System.Base:New:'; native=false
2:	POP_INT
3:	LOAD_INT_LIT: value=5
4:	LOAD_INST_MEM
5:	STOR_INT_VAR: id=1; local=false
6:	LOAD_INST_MEM
7:	LOAD_INT_VAR: id=1; local=false
8:	NEW_CHAR_ARY: dimension=1
9:	LOAD_INST_MEM
10:	STOR_INT_VAR: id=0; local=false
11:	LOAD_INT_LIT: value=0
12:	LOAD_INST_MEM
13:	STOR_INT_VAR: id=2; local=false
14:	LOAD_INST_MEM
15:	RTRN
--
---------------------------------------------------------
Method: id=15,5; name='System.String:New:b*,'; return='o.System.String';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	MTHD_CALL: method='System.Base:New:'; native=false
3:	POP_INT
4:	LOAD_INT_LIT: value=5
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=1; local=false
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=1; local=false
9:	NEW_CHAR_ARY: dimension=1
10:	LOAD_INST_MEM
11:	STOR_INT_VAR: id=0; local=false
12:	LOAD_INT_LIT: value=0
13:	LOAD_INST_MEM
14:	STOR_INT_VAR: id=2; local=false
15:	LOAD_INT_VAR: id=0; local=true
16:	LOAD_INST_MEM
17:	MTHD_CALL: method='System.$Byte:ToUnicode:b*,'; native=false
18:	LOAD_INST_MEM
19:	MTHD_CALL: method='System.String:Append:c*,'; native=false
20:	LOAD_INST_MEM
21:	RTRN
--
---------------------------------------------------------
Method: id=15,6; name='System.String:New:b*,i,i,'; return='o.System.String';
  blocks=1; is_function=false; num_params=3; mem_size=24
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
  1: INT_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.Base:New:'; native=false
5:	POP_INT
6:	LOAD_INT_LIT: value=5
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=1; local=false
9:	LOAD_INST_MEM
10:	LOAD_INT_VAR: id=1; local=false
11:	NEW_CHAR_ARY: dimension=1
12:	LOAD_INST_MEM
13:	STOR_INT_VAR: id=0; local=false
14:	LOAD_INT_LIT: value=0
15:	LOAD_INST_MEM
16:	STOR_INT_VAR: id=2; local=false
17:	LOAD_INT_VAR: id=0; local=true
18:	LOAD_INST_MEM
19:	MTHD_CALL: method='System.$Byte:ToUnicode:b*,'; native=false
20:	LOAD_INT_VAR: id=1; local=true
21:	LOAD_INT_VAR: id=2; local=true
22:	LOAD_INST_MEM
23:	MTHD_CALL: method='System.String:Append:c*,i,i,'; native=true
24:	LOAD_INST_MEM
25:	RTRN
--
---------------------------------------------------------
Method: id=15,2; name='System.String:New:c*,'; return='o.System.String';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	MTHD_CALL: method='System.Base:New:'; native=false
3:	POP_INT
4:	LOAD_INT_LIT: value=5
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=1; local=false
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=1; local=false
9:	NEW_CHAR_ARY: dimension=1
10:	LOAD_INST_MEM
11:	STOR_INT_VAR: id=0; local=false
12:	LOAD_INT_LIT: value=0
13:	LOAD_INST_MEM
14:	STOR_INT_VAR: id=2; local=false
15:	LOAD_INT_VAR: id=0; local=true
16:	LOAD_INST_MEM
17:	MTHD_CALL: method='System.String:Append:c*,'; native=false
18:	LOAD_INST_MEM
19:	RTRN
--
---------------------------------------------------------
Method: id=15,4; name='System.String:New:c*,i,i,'; return='o.System.String';
  blocks=1; is_function=false; num_params=3; mem_size=24
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: INT_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.Base:New:'; native=false
5:	POP_INT
6:	LOAD_INT_LIT: value=5
7:	LOAD_INST_MEM
8:	STOR_INT_VAR: id=1; local=false
9:	LOAD_INST_MEM
10:	LOAD_INT_VAR: id=1; local=false
11:	NEW_CHAR_ARY: dimension=1
12:	LOAD_INST_MEM
13:	STOR_INT_VAR: id=0; local=false
14:	LOAD_INT_LIT: value=0
15:	LOAD_INST_MEM
16:	STOR_INT_VAR: id=2; local=false
17:	LOAD_INT_VAR: id=0; local=true
18:	LOAD_INT_VAR: id=1; local=true
19:	LOAD_INT_VAR: id=2; local=true
20:	LOAD_INST_MEM
21:	MTHD_CALL: method='System.String:Append:c*,i,i,'; native=true
22:	LOAD_INST_MEM
23:	RTRN
--
---------------------------------------------------------
Method: id=15,3; name='System.String:New:c*,l,'; return='o.System.String';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.Base:New:'; native=false
4:	POP_INT
5:	LBL
6:	LOAD_INT_VAR: id=1; local=true
7:	JMP: index=21, conditional=false
8:	LOAD_INT_LIT: value=5
9:	LOAD_INST_MEM
10:	STOR_INT_VAR: id=1; local=false
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=1; local=false
13:	NEW_CHAR_ARY: dimension=1
14:	LOAD_INST_MEM
15:	STOR_INT_VAR: id=0; local=false
16:	LOAD_INT_LIT: value=0
17:	LOAD_INST_MEM
18:	STOR_INT_VAR: id=2; local=false
19:	JMP: index=36
20:	LBL
21:	LOAD_INT_VAR: id=0; local=true
22:	LOAD_INST_MEM
23:	STOR_INT_VAR: id=2; local=true
24:	STOR_INT_VAR: id=3; local=true
25:	LOAD_INT_VAR: id=3; local=true
26:	LOAD_ARY_SIZE
27:	LOAD_INST_MEM
28:	STOR_INT_VAR: id=1; local=false
29:	LOAD_INT_VAR: id=0; local=true
30:	LOAD_INST_MEM
31:	STOR_INT_VAR: id=0; local=false
32:	LOAD_INT_LIT: value=0
33:	LOAD_INST_MEM
34:	STOR_INT_VAR: id=2; local=false
35:	LBL
36:	LOAD_INT_VAR: id=0; local=true
37:	LOAD_INST_MEM
38:	MTHD_CALL: method='System.String:Append:c*,'; native=false
39:	LOAD_INST_MEM
40:	RTRN
--
---------------------------------------------------------
Method: id=15,1; name='System.String:New:o.System.String,'; return='o.System.String';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	MTHD_CALL: method='System.Base:New:'; native=false
3:	POP_INT
4:	LOAD_INT_LIT: value=5
5:	LOAD_INST_MEM
6:	STOR_INT_VAR: id=1; local=false
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=1; local=false
9:	NEW_CHAR_ARY: dimension=1
10:	LOAD_INST_MEM
11:	STOR_INT_VAR: id=0; local=false
12:	LOAD_INT_LIT: value=0
13:	LOAD_INST_MEM
14:	STOR_INT_VAR: id=2; local=false
15:	LBL
16:	LOAD_INT_LIT: value=0
17:	LOAD_INT_VAR: id=0; local=true
18:	NEQL_INT
19:	JMP: index=25, conditional=false
20:	LOAD_INT_VAR: id=0; local=true
21:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
22:	LOAD_INST_MEM
23:	MTHD_CALL: method='System.String:Append:c*,'; native=false
24:	LBL
25:	LOAD_INST_MEM
26:	RTRN
--
---------------------------------------------------------
Method: id=15,59; name='System.String:Pop:'; return='c';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_PARM
---------------------------------------------------------
0:	LBL
1:	LOAD_INT_LIT: value=0
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=2; local=false
4:	GTR_INT
5:	JMP: index=27, conditional=false
6:	LOAD_INT_LIT: value=1
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=2; local=false
9:	SUB_INT
10:	LOAD_INST_MEM
11:	STOR_INT_VAR: id=2; local=false
12:	LOAD_INST_MEM
13:	LOAD_INT_VAR: id=2; local=false
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=0; local=false
16:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
17:	STOR_INT_VAR: id=0; local=true
18:	LOAD_CHAR_LIT value='?'
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=2; local=false
21:	LOAD_INST_MEM
22:	LOAD_INT_VAR: id=0; local=false
23:	STOR_CHAR_ARY_ELM: dimension=1; local=false
24:	LOAD_INT_VAR: id=0; local=true
25:	RTRN
26:	LBL
27:	LOAD_CHAR_LIT value='?'
28:	RTRN
--
---------------------------------------------------------
Method: id=15,82; name='System.String:Print:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Char:Print:c*,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=15,83; name='System.String:PrintLine:'; return='n';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.$Char:PrintLine:c*,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=15,45; name='System.String:Remove:c,'; return='o.System.String';
  blocks=1; is_function=false; num_params=1; mem_size=32
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: OBJ_PARM
  2: INT_PARM
  3: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	NEW_OBJ_INST: class='System.String'
2:	MTHD_CALL: method='System.String:New:'; native=false
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=2; local=true
6:	LBL
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_INT_VAR: id=2; local=true
10:	LES_INT
11:	JMP: index=33, conditional=false
12:	LOAD_INT_VAR: id=2; local=true
13:	LOAD_INST_MEM
14:	LOAD_INT_VAR: id=0; local=false
15:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
16:	STOR_INT_VAR: id=3; local=true
17:	LBL
18:	LOAD_INT_VAR: id=0; local=true
19:	LOAD_INT_VAR: id=3; local=true
20:	NEQL_INT
21:	JMP: index=26, conditional=false
22:	LOAD_INT_VAR: id=3; local=true
23:	LOAD_INT_VAR: id=1; local=true
24:	MTHD_CALL: method='System.String:Append:c,'; native=false
25:	LBL
26:	LBL
27:	LOAD_INT_LIT: value=1
28:	LOAD_INT_VAR: id=2; local=true
29:	ADD_INT
30:	STOR_INT_VAR: id=2; local=true
31:	JMP: index=7
32:	LBL
33:	LOAD_INT_VAR: id=1; local=true
34:	RTRN
--
---------------------------------------------------------
Method: id=15,44; name='System.String:Remove:o.System.String,'; return='o.System.String';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=0
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.String:Replace:o.System.String,o.System.String,'; native=false
5:	RTRN
--
---------------------------------------------------------
Method: id=15,41; name='System.String:RemoveAll:c,'; return='o.System.String';
  blocks=1; is_function=false; num_params=1; mem_size=32
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: OBJ_PARM
  2: INT_PARM
  3: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	NEW_OBJ_INST: class='System.String'
2:	MTHD_CALL: method='System.String:New:'; native=false
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=2; local=true
6:	LBL
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_INT_VAR: id=2; local=true
10:	LES_INT
11:	JMP: index=33, conditional=false
12:	LOAD_INT_VAR: id=2; local=true
13:	LOAD_INST_MEM
14:	LOAD_INT_VAR: id=0; local=false
15:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
16:	STOR_INT_VAR: id=3; local=true
17:	LBL
18:	LOAD_INT_VAR: id=0; local=true
19:	LOAD_INT_VAR: id=3; local=true
20:	NEQL_INT
21:	JMP: index=26, conditional=false
22:	LOAD_INT_VAR: id=3; local=true
23:	LOAD_INT_VAR: id=1; local=true
24:	MTHD_CALL: method='System.String:Append:c,'; native=false
25:	LBL
26:	LBL
27:	LOAD_INT_LIT: value=1
28:	LOAD_INT_VAR: id=2; local=true
29:	ADD_INT
30:	STOR_INT_VAR: id=2; local=true
31:	JMP: index=7
32:	LBL
33:	LOAD_INT_VAR: id=1; local=true
34:	RTRN
--
---------------------------------------------------------
Method: id=15,40; name='System.String:RemoveAll:o.System.String,'; return='o.System.String';
  blocks=1; is_function=false; num_params=1; mem_size=48
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: OBJ_PARM
  3: OBJ_PARM
  4: OBJ_PARM
  5: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=0
3:	LOAD_INST_MEM
4:	STOR_INT_VAR: id=1; local=true
5:	STOR_INT_VAR: id=3; local=true
6:	STOR_INT_VAR: id=2; local=true
7:	LOAD_INT_VAR: id=1; local=true
8:	STOR_INT_VAR: id=4; local=true
9:	LOAD_INT_VAR: id=2; local=true
10:	LOAD_INT_VAR: id=3; local=true
11:	LOAD_INT_VAR: id=4; local=true
12:	MTHD_CALL: method='System.String:Replace:o.System.String,o.System.String,'; native=false
13:	STOR_INT_VAR: id=5; local=true
14:	LBL
15:	LOAD_INT_VAR: id=4; local=true
16:	LOAD_INT_VAR: id=5; local=true
17:	NEQL_INT
18:	JMP: index=28, conditional=false
19:	LOAD_INT_VAR: id=5; local=true
20:	STOR_INT_VAR: id=4; local=true
21:	LOAD_INT_VAR: id=2; local=true
22:	LOAD_INT_VAR: id=3; local=true
23:	LOAD_INT_VAR: id=4; local=true
24:	MTHD_CALL: method='System.String:Replace:o.System.String,o.System.String,'; native=false
25:	STOR_INT_VAR: id=5; local=true
26:	JMP: index=15
27:	LBL
28:	LOAD_INT_VAR: id=5; local=true
29:	RTRN
--
---------------------------------------------------------
Method: id=15,43; name='System.String:Replace:o.System.String,o.System.String,'; return='o.System.String';
  blocks=1; is_function=false; num_params=2; mem_size=88
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: OBJ_PARM
  3: INT_PARM
  4: OBJ_PARM
  5: OBJ_PARM
  6: INT_PARM
  7: OBJ_PARM
  8: OBJ_PARM
  9: OBJ_PARM
  10: OBJ_PARM
  11: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LOAD_INT_VAR: id=1; local=true
3:	LOAD_INST_MEM
4:	STOR_INT_VAR: id=8; local=true
5:	STOR_INT_VAR: id=9; local=true
6:	LOAD_INT_LIT: value=0
7:	LOAD_INT_VAR: id=9; local=true
8:	LOAD_INT_VAR: id=8; local=true
9:	MTHD_CALL: method='System.String:Find:i,o.System.String,'; native=true
10:	STOR_INT_VAR: id=3; local=true
11:	LBL
12:	LOAD_INT_LIT: value=0
13:	LOAD_INT_VAR: id=3; local=true
14:	LES_INT
15:	JMP: index=19, conditional=false
16:	LOAD_INST_MEM
17:	RTRN
18:	LBL
19:	LOAD_INT_LIT: value=0
20:	LOAD_INT_VAR: id=3; local=true
21:	LOAD_INST_MEM
22:	MTHD_CALL: method='System.String:SubString:i,i,'; native=false
23:	STOR_INT_VAR: id=4; local=true
24:	LOAD_INT_LIT: value=0
25:	LOAD_INT_VAR: id=4; local=true
26:	EQL_INT
27:	JMP: index=33, conditional=false
28:	NEW_OBJ_INST: class='System.String'
29:	MTHD_CALL: method='System.String:New:'; native=false
30:	STOR_INT_VAR: id=0; local=true
31:	JMP: index=38
32:	LBL
33:	LOAD_INT_VAR: id=4; local=true
34:	NEW_OBJ_INST: class='System.String'
35:	MTHD_CALL: method='System.String:New:o.System.String,'; native=false
36:	STOR_INT_VAR: id=0; local=true
37:	LBL
38:	LOAD_INT_VAR: id=0; local=true
39:	STOR_INT_VAR: id=5; local=true
40:	LOAD_INT_VAR: id=1; local=true
41:	LOAD_INT_VAR: id=2; local=false
42:	LOAD_INT_VAR: id=3; local=true
43:	ADD_INT
44:	COPY_INT_VAR: id=3; local=true
45:	LOAD_INST_MEM
46:	LOAD_INT_VAR: id=2; local=false
47:	SUB_INT
48:	STOR_INT_VAR: id=6; local=true
49:	LBL
50:	LOAD_INT_LIT: value=0
51:	LOAD_INT_VAR: id=6; local=true
52:	EQL_INT
53:	JMP: index=70, conditional=false
54:	LBL
55:	LOAD_INT_LIT: value=0
56:	LOAD_INT_VAR: id=2; local=true
57:	NEQL_INT
58:	JMP: index=68, conditional=false
59:	LOAD_INT_VAR: id=2; local=true
60:	LOAD_INT_VAR: id=5; local=true
61:	STOR_INT_VAR: id=10; local=true
62:	STOR_INT_VAR: id=11; local=true
63:	LOAD_INT_VAR: id=11; local=true
64:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
65:	LOAD_INT_VAR: id=10; local=true
66:	MTHD_CALL: method='System.String:Append:c*,'; native=false
67:	LBL
68:	JMP: index=96
69:	LBL
70:	LOAD_INT_VAR: id=3; local=true
71:	LOAD_INT_VAR: id=6; local=true
72:	LOAD_INST_MEM
73:	MTHD_CALL: method='System.String:SubString:i,i,'; native=false
74:	STOR_INT_VAR: id=7; local=true
75:	LBL
76:	LOAD_INT_LIT: value=0
77:	LOAD_INT_VAR: id=7; local=true
78:	EQL_INT
79:	JMP: index=83, conditional=false
80:	LOAD_INST_MEM
81:	RTRN
82:	LBL
83:	LBL
84:	LOAD_INT_LIT: value=0
85:	LOAD_INT_VAR: id=2; local=true
86:	NEQL_INT
87:	JMP: index=92, conditional=false
88:	LOAD_INT_VAR: id=2; local=true
89:	LOAD_INT_VAR: id=5; local=true
90:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
91:	LBL
92:	LOAD_INT_VAR: id=7; local=true
93:	LOAD_INT_VAR: id=5; local=true
94:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
95:	LBL
96:	LOAD_INT_VAR: id=5; local=true
97:	RTRN
--
---------------------------------------------------------
Method: id=15,42; name='System.String:ReplaceAll:c,c,'; return='o.System.String';
  blocks=1; is_function=false; num_params=2; mem_size=40
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: CHAR_PARM
  2: OBJ_PARM
  3: INT_PARM
  4: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	NEW_OBJ_INST: class='System.String'
3:	MTHD_CALL: method='System.String:New:'; native=false
4:	STOR_INT_VAR: id=2; local=true
5:	LOAD_INT_LIT: value=0
6:	STOR_INT_VAR: id=3; local=true
7:	LBL
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=2; local=false
10:	LOAD_INT_VAR: id=3; local=true
11:	LES_INT
12:	JMP: index=39, conditional=false
13:	LOAD_INT_VAR: id=3; local=true
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=0; local=false
16:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
17:	STOR_INT_VAR: id=4; local=true
18:	LBL
19:	LOAD_INT_VAR: id=0; local=true
20:	LOAD_INT_VAR: id=4; local=true
21:	EQL_INT
22:	JMP: index=28, conditional=false
23:	LOAD_INT_VAR: id=1; local=true
24:	LOAD_INT_VAR: id=2; local=true
25:	MTHD_CALL: method='System.String:Append:c,'; native=false
26:	JMP: index=32
27:	LBL
28:	LOAD_INT_VAR: id=4; local=true
29:	LOAD_INT_VAR: id=2; local=true
30:	MTHD_CALL: method='System.String:Append:c,'; native=false
31:	LBL
32:	LBL
33:	LOAD_INT_LIT: value=1
34:	LOAD_INT_VAR: id=3; local=true
35:	ADD_INT
36:	STOR_INT_VAR: id=3; local=true
37:	JMP: index=8
38:	LBL
39:	LOAD_INT_VAR: id=2; local=true
40:	RTRN
--
---------------------------------------------------------
Method: id=15,39; name='System.String:ReplaceAll:o.System.String,o.System.String,'; return='o.System.String';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: OBJ_PARM
  3: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	STOR_INT_VAR: id=2; local=true
4:	LOAD_INT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=1; local=true
6:	LOAD_INT_VAR: id=2; local=true
7:	MTHD_CALL: method='System.String:Replace:o.System.String,o.System.String,'; native=false
8:	STOR_INT_VAR: id=3; local=true
9:	LBL
10:	LOAD_INT_VAR: id=2; local=true
11:	LOAD_INT_VAR: id=3; local=true
12:	NEQL_INT
13:	JMP: index=23, conditional=false
14:	LOAD_INT_VAR: id=3; local=true
15:	STOR_INT_VAR: id=2; local=true
16:	LOAD_INT_VAR: id=0; local=true
17:	LOAD_INT_VAR: id=1; local=true
18:	LOAD_INT_VAR: id=2; local=true
19:	MTHD_CALL: method='System.String:Replace:o.System.String,o.System.String,'; native=false
20:	STOR_INT_VAR: id=3; local=true
21:	JMP: index=10
22:	LBL
23:	LOAD_INT_VAR: id=3; local=true
24:	RTRN
--
---------------------------------------------------------
Method: id=15,68; name='System.String:Reverse:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=24
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: INT_PARM
  2: INT_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=0; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=1; local=true
6:	LOAD_INT_LIT: value=1
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=2; local=false
9:	SUB_INT
10:	STOR_INT_VAR: id=2; local=true
11:	LBL
12:	LOAD_INT_LIT: value=-1
13:	LOAD_INT_VAR: id=2; local=true
14:	GTR_INT
15:	JMP: index=33, conditional=false
16:	LOAD_INT_VAR: id=2; local=true
17:	LOAD_INST_MEM
18:	LOAD_INT_VAR: id=0; local=false
19:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
20:	LOAD_INT_VAR: id=1; local=true
21:	LOAD_INT_VAR: id=0; local=true
22:	STOR_CHAR_ARY_ELM: dimension=1; local=true
23:	LOAD_INT_LIT: value=1
24:	LOAD_INT_VAR: id=2; local=true
25:	SUB_INT
26:	STOR_INT_VAR: id=2; local=true
27:	LOAD_INT_LIT: value=1
28:	LOAD_INT_VAR: id=1; local=true
29:	ADD_INT
30:	STOR_INT_VAR: id=1; local=true
31:	JMP: index=12
32:	LBL
33:	LOAD_INT_VAR: id=0; local=true
34:	LOAD_INT_LIT: value=0
35:	NEW_OBJ_INST: class='System.String'
36:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
37:	RTRN
--
---------------------------------------------------------
Method: id=15,58; name='System.String:Set:c,i,'; return='l';
  blocks=1; is_function=false; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INT_LIT: value=-1
4:	LOAD_INT_VAR: id=2; local=true
5:	GTR_INT
6:	JMP: index=11, conditional=true
7:	LOAD_INT_LIT: value=0
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=17
10:	LBL
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=2; local=false
13:	LOAD_INT_VAR: id=2; local=true
14:	LES_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=25, conditional=false
19:	LOAD_INT_VAR: id=1; local=true
20:	LOAD_INT_VAR: id=2; local=true
21:	LOAD_INST_MEM
22:	LOAD_INT_VAR: id=0; local=false
23:	STOR_CHAR_ARY_ELM: dimension=1; local=false
24:	LBL
25:	LOAD_INT_LIT: value=0
26:	RTRN
--
---------------------------------------------------------
Method: id=15,9; name='System.String:SetFloatFormat:o.System.Number#Format,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LBL
4:	LOAD_INT_LIT: value=-18
5:	LOAD_INT_VAR: id=0; local=true
6:	LES_INT
7:	JMP: index=10, conditional=true
8:	JMP: index=28
9:	LBL
10:	LOAD_INT_LIT: value=-19
11:	LOAD_INT_VAR: id=0; local=true
12:	LES_INT
13:	JMP: index=16, conditional=true
14:	JMP: index=22
15:	LBL
16:	LOAD_INT_LIT: value=-20
17:	LOAD_INT_VAR: id=0; local=true
18:	EQL_INT
19:	JMP: index=46, conditional=true
20:	JMP: index=117
21:	LBL
22:	LOAD_INT_LIT: value=-19
23:	LOAD_INT_VAR: id=0; local=true
24:	EQL_INT
25:	JMP: index=64, conditional=true
26:	JMP: index=117
27:	LBL
28:	LOAD_INT_LIT: value=-15
29:	LOAD_INT_VAR: id=0; local=true
30:	LES_INT
31:	JMP: index=34, conditional=true
32:	JMP: index=40
33:	LBL
34:	LOAD_INT_LIT: value=-18
35:	LOAD_INT_VAR: id=0; local=true
36:	EQL_INT
37:	JMP: index=82, conditional=true
38:	JMP: index=117
39:	LBL
40:	LOAD_INT_LIT: value=-15
41:	LOAD_INT_VAR: id=0; local=true
42:	EQL_INT
43:	JMP: index=100, conditional=true
44:	JMP: index=117
45:	LBL
46:	LOAD_INT_LIT: value=19
47:	NEW_CHAR_ARY: dimension=1
48:	LOAD_INT_LIT: value=16
49:	LOAD_INT_LIT: value=-3994
50:	TRAP_RTRN: args=3
51:	NEW_OBJ_INST: class='System.String'
52:	MTHD_CALL: method='System.String:New:c*,'; native=false
53:	LOAD_INT_LIT: value=5
54:	NEW_CHAR_ARY: dimension=1
55:	LOAD_INT_LIT: value=17
56:	LOAD_INT_LIT: value=-3994
57:	TRAP_RTRN: args=3
58:	NEW_OBJ_INST: class='System.String'
59:	MTHD_CALL: method='System.String:New:c*,'; native=false
60:	LOAD_INST_MEM
61:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
62:	JMP: index=117
63:	LBL
64:	LOAD_INT_LIT: value=19
65:	NEW_CHAR_ARY: dimension=1
66:	LOAD_INT_LIT: value=16
67:	LOAD_INT_LIT: value=-3994
68:	TRAP_RTRN: args=3
69:	NEW_OBJ_INST: class='System.String'
70:	MTHD_CALL: method='System.String:New:c*,'; native=false
71:	LOAD_INT_LIT: value=10
72:	NEW_CHAR_ARY: dimension=1
73:	LOAD_INT_LIT: value=18
74:	LOAD_INT_LIT: value=-3994
75:	TRAP_RTRN: args=3
76:	NEW_OBJ_INST: class='System.String'
77:	MTHD_CALL: method='System.String:New:c*,'; native=false
78:	LOAD_INST_MEM
79:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
80:	JMP: index=117
81:	LBL
82:	LOAD_INT_LIT: value=19
83:	NEW_CHAR_ARY: dimension=1
84:	LOAD_INT_LIT: value=16
85:	LOAD_INT_LIT: value=-3994
86:	TRAP_RTRN: args=3
87:	NEW_OBJ_INST: class='System.String'
88:	MTHD_CALL: method='System.String:New:c*,'; native=false
89:	LOAD_INT_LIT: value=3
90:	NEW_CHAR_ARY: dimension=1
91:	LOAD_INT_LIT: value=15
92:	LOAD_INT_LIT: value=-3994
93:	TRAP_RTRN: args=3
94:	NEW_OBJ_INST: class='System.String'
95:	MTHD_CALL: method='System.String:New:c*,'; native=false
96:	LOAD_INST_MEM
97:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
98:	JMP: index=117
99:	LBL
100:	LOAD_INT_LIT: value=19
101:	NEW_CHAR_ARY: dimension=1
102:	LOAD_INT_LIT: value=16
103:	LOAD_INT_LIT: value=-3994
104:	TRAP_RTRN: args=3
105:	NEW_OBJ_INST: class='System.String'
106:	MTHD_CALL: method='System.String:New:c*,'; native=false
107:	LOAD_INT_LIT: value=5
108:	NEW_CHAR_ARY: dimension=1
109:	LOAD_INT_LIT: value=17
110:	LOAD_INT_LIT: value=-3994
111:	TRAP_RTRN: args=3
112:	NEW_OBJ_INST: class='System.String'
113:	MTHD_CALL: method='System.String:New:c*,'; native=false
114:	LOAD_INST_MEM
115:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
116:	LBL
117:	RTRN
--
---------------------------------------------------------
Method: id=15,10; name='System.String:SetFloatPrecision:i,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_LIT: value=-1
3:	LOAD_INT_VAR: id=0; local=true
4:	GTR_INT
5:	JMP: index=19, conditional=false
6:	LOAD_INT_LIT: value=22
7:	NEW_CHAR_ARY: dimension=1
8:	LOAD_INT_LIT: value=19
9:	LOAD_INT_LIT: value=-3994
10:	TRAP_RTRN: args=3
11:	NEW_OBJ_INST: class='System.String'
12:	MTHD_CALL: method='System.String:New:c*,'; native=false
13:	LOAD_INT_VAR: id=0; local=true
14:	LOAD_INST_MEM
15:	MTHD_CALL: method='System.$Int:ToString:i,'; native=false
16:	LOAD_INST_MEM
17:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
18:	LBL
19:	RTRN
--
---------------------------------------------------------
Method: id=15,8; name='System.String:SetIntFormat:o.System.Number#Format,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_INT_VAR: id=1; local=true
2:	STOR_INT_VAR: id=0; local=true
3:	LBL
4:	LOAD_INT_LIT: value=-16
5:	LOAD_INT_VAR: id=0; local=true
6:	LES_INT
7:	JMP: index=10, conditional=true
8:	JMP: index=28
9:	LBL
10:	LOAD_INT_LIT: value=-17
11:	LOAD_INT_VAR: id=0; local=true
12:	LES_INT
13:	JMP: index=16, conditional=true
14:	JMP: index=22
15:	LBL
16:	LOAD_INT_LIT: value=-18
17:	LOAD_INT_VAR: id=0; local=true
18:	EQL_INT
19:	JMP: index=46, conditional=true
20:	JMP: index=117
21:	LBL
22:	LOAD_INT_LIT: value=-17
23:	LOAD_INT_VAR: id=0; local=true
24:	EQL_INT
25:	JMP: index=64, conditional=true
26:	JMP: index=117
27:	LBL
28:	LOAD_INT_LIT: value=-15
29:	LOAD_INT_VAR: id=0; local=true
30:	LES_INT
31:	JMP: index=34, conditional=true
32:	JMP: index=40
33:	LBL
34:	LOAD_INT_LIT: value=-16
35:	LOAD_INT_VAR: id=0; local=true
36:	EQL_INT
37:	JMP: index=82, conditional=true
38:	JMP: index=117
39:	LBL
40:	LOAD_INT_LIT: value=-15
41:	LOAD_INT_VAR: id=0; local=true
42:	EQL_INT
43:	JMP: index=100, conditional=true
44:	JMP: index=117
45:	LBL
46:	LOAD_INT_LIT: value=17
47:	NEW_CHAR_ARY: dimension=1
48:	LOAD_INT_LIT: value=12
49:	LOAD_INT_LIT: value=-3994
50:	TRAP_RTRN: args=3
51:	NEW_OBJ_INST: class='System.String'
52:	MTHD_CALL: method='System.String:New:c*,'; native=false
53:	LOAD_INT_LIT: value=3
54:	NEW_CHAR_ARY: dimension=1
55:	LOAD_INT_LIT: value=15
56:	LOAD_INT_LIT: value=-3994
57:	TRAP_RTRN: args=3
58:	NEW_OBJ_INST: class='System.String'
59:	MTHD_CALL: method='System.String:New:c*,'; native=false
60:	LOAD_INST_MEM
61:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
62:	JMP: index=117
63:	LBL
64:	LOAD_INT_LIT: value=17
65:	NEW_CHAR_ARY: dimension=1
66:	LOAD_INT_LIT: value=12
67:	LOAD_INT_LIT: value=-3994
68:	TRAP_RTRN: args=3
69:	NEW_OBJ_INST: class='System.String'
70:	MTHD_CALL: method='System.String:New:c*,'; native=false
71:	LOAD_INT_LIT: value=3
72:	NEW_CHAR_ARY: dimension=1
73:	LOAD_INT_LIT: value=13
74:	LOAD_INT_LIT: value=-3994
75:	TRAP_RTRN: args=3
76:	NEW_OBJ_INST: class='System.String'
77:	MTHD_CALL: method='System.String:New:c*,'; native=false
78:	LOAD_INST_MEM
79:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
80:	JMP: index=117
81:	LBL
82:	LOAD_INT_LIT: value=17
83:	NEW_CHAR_ARY: dimension=1
84:	LOAD_INT_LIT: value=12
85:	LOAD_INT_LIT: value=-3994
86:	TRAP_RTRN: args=3
87:	NEW_OBJ_INST: class='System.String'
88:	MTHD_CALL: method='System.String:New:c*,'; native=false
89:	LOAD_INT_LIT: value=3
90:	NEW_CHAR_ARY: dimension=1
91:	LOAD_INT_LIT: value=14
92:	LOAD_INT_LIT: value=-3994
93:	TRAP_RTRN: args=3
94:	NEW_OBJ_INST: class='System.String'
95:	MTHD_CALL: method='System.String:New:c*,'; native=false
96:	LOAD_INST_MEM
97:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
98:	JMP: index=117
99:	LBL
100:	LOAD_INT_LIT: value=17
101:	NEW_CHAR_ARY: dimension=1
102:	LOAD_INT_LIT: value=12
103:	LOAD_INT_LIT: value=-3994
104:	TRAP_RTRN: args=3
105:	NEW_OBJ_INST: class='System.String'
106:	MTHD_CALL: method='System.String:New:c*,'; native=false
107:	LOAD_INT_LIT: value=3
108:	NEW_CHAR_ARY: dimension=1
109:	LOAD_INT_LIT: value=13
110:	LOAD_INT_LIT: value=-3994
111:	TRAP_RTRN: args=3
112:	NEW_OBJ_INST: class='System.String'
113:	MTHD_CALL: method='System.String:New:c*,'; native=false
114:	LOAD_INST_MEM
115:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
116:	LBL
117:	RTRN
--
---------------------------------------------------------
Method: id=15,54; name='System.String:Size:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=15,72; name='System.String:Split:c,'; return='o.System.String*';
  blocks=1; is_function=false; num_params=1; mem_size=72
---------------------------------------------------------
memory types:
  0: CHAR_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: OBJ_ARY_PARM
  5: INT_PARM
  6: CHAR_PARM
  7: OBJ_PARM
  8: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	STOR_INT_VAR: id=3; local=true
3:	LOAD_INT_LIT: value=0
4:	STOR_INT_VAR: id=1; local=true
5:	LBL
6:	LOAD_INST_MEM
7:	LOAD_INT_VAR: id=2; local=false
8:	LOAD_INST_MEM
9:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
10:	LOAD_INT_VAR: id=1; local=true
11:	LES_INT
12:	JMP: index=33, conditional=false
13:	LBL
14:	LOAD_INT_VAR: id=0; local=true
15:	LOAD_INT_VAR: id=1; local=true
16:	LOAD_INST_MEM
17:	LOAD_INT_VAR: id=0; local=false
18:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
19:	EQL_INT
20:	JMP: index=26, conditional=false
21:	LOAD_INT_LIT: value=1
22:	LOAD_INT_VAR: id=3; local=true
23:	ADD_INT
24:	STOR_INT_VAR: id=3; local=true
25:	LBL
26:	LBL
27:	LOAD_INT_LIT: value=1
28:	LOAD_INT_VAR: id=1; local=true
29:	ADD_INT
30:	STOR_INT_VAR: id=1; local=true
31:	JMP: index=6
32:	LBL
33:	LBL
34:	LOAD_INT_LIT: value=0
35:	LOAD_INT_VAR: id=3; local=true
36:	NEQL_INT
37:	JMP: index=43, conditional=false
38:	LOAD_INT_LIT: value=1
39:	LOAD_INT_VAR: id=3; local=true
40:	ADD_INT
41:	STOR_INT_VAR: id=3; local=true
42:	LBL
43:	LOAD_INT_VAR: id=3; local=true
44:	NEW_INT_ARY: dimension=1
45:	STOR_INT_VAR: id=4; local=true
46:	LOAD_INT_LIT: value=0
47:	COPY_INT_VAR: id=3; local=true
48:	STOR_INT_VAR: id=5; local=true
49:	LOAD_INT_LIT: value=0
50:	STOR_INT_VAR: id=2; local=true
51:	LBL
52:	LOAD_INST_MEM
53:	LOAD_INT_VAR: id=2; local=false
54:	LOAD_INST_MEM
55:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
56:	LOAD_INT_VAR: id=2; local=true
57:	LES_INT
58:	JMP: index=96, conditional=false
59:	LOAD_INT_VAR: id=2; local=true
60:	LOAD_INST_MEM
61:	LOAD_INT_VAR: id=0; local=false
62:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
63:	STOR_INT_VAR: id=6; local=true
64:	LBL
65:	LOAD_INT_VAR: id=0; local=true
66:	LOAD_INT_VAR: id=6; local=true
67:	EQL_INT
68:	JMP: index=89, conditional=false
69:	LOAD_INST_MEM
70:	LOAD_INT_VAR: id=0; local=false
71:	LOAD_INT_VAR: id=5; local=true
72:	LOAD_INT_VAR: id=5; local=true
73:	LOAD_INT_VAR: id=2; local=true
74:	SUB_INT
75:	NEW_OBJ_INST: class='System.String'
76:	MTHD_CALL: method='System.String:New:c*,i,i,'; native=false
77:	LOAD_INT_VAR: id=3; local=true
78:	LOAD_INT_VAR: id=4; local=true
79:	STOR_INT_ARY_ELM: dimension=1; local=true
80:	LOAD_INT_LIT: value=1
81:	LOAD_INT_VAR: id=3; local=true
82:	ADD_INT
83:	STOR_INT_VAR: id=3; local=true
84:	LOAD_INT_LIT: value=1
85:	LOAD_INT_VAR: id=2; local=true
86:	ADD_INT
87:	STOR_INT_VAR: id=5; local=true
88:	LBL
89:	LBL
90:	LOAD_INT_LIT: value=1
91:	LOAD_INT_VAR: id=2; local=true
92:	ADD_INT
93:	STOR_INT_VAR: id=2; local=true
94:	JMP: index=52
95:	LBL
96:	LBL
97:	LOAD_INT_LIT: value=0
98:	LOAD_INT_VAR: id=5; local=true
99:	NEQL_INT
100:	JMP: index=123, conditional=false
101:	LOAD_INST_MEM
102:	LOAD_INT_VAR: id=0; local=false
103:	LOAD_INT_VAR: id=5; local=true
104:	LOAD_INT_VAR: id=5; local=true
105:	LOAD_INST_MEM
106:	LOAD_INT_VAR: id=0; local=false
107:	LOAD_INST_MEM
108:	STOR_INT_VAR: id=7; local=true
109:	STOR_INT_VAR: id=8; local=true
110:	LOAD_INT_VAR: id=8; local=true
111:	LOAD_ARY_SIZE
112:	SUB_INT
113:	NEW_OBJ_INST: class='System.String'
114:	MTHD_CALL: method='System.String:New:c*,i,i,'; native=false
115:	LOAD_INT_VAR: id=3; local=true
116:	LOAD_INT_VAR: id=4; local=true
117:	STOR_INT_ARY_ELM: dimension=1; local=true
118:	LOAD_INT_LIT: value=1
119:	LOAD_INT_VAR: id=3; local=true
120:	ADD_INT
121:	STOR_INT_VAR: id=3; local=true
122:	LBL
123:	LOAD_INT_VAR: id=4; local=true
124:	RTRN
--
---------------------------------------------------------
Method: id=15,71; name='System.String:Split:o.System.String,'; return='o.System.String*';
  blocks=1; is_function=false; num_params=1; mem_size=72
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: INT_PARM
  3: OBJ_ARY_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_PARM
  8: INT_PARM
  9: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_INT_VAR: id=1; local=true
2:	LOAD_INT_VAR: id=2; local=false
3:	STOR_INT_VAR: id=5; local=true
4:	LBL
5:	LOAD_INT_LIT: value=0
6:	LOAD_INT_VAR: id=5; local=true
7:	EQL_INT
8:	JMP: index=13, conditional=false
9:	LOAD_INT_LIT: value=1
10:	STOR_INT_VAR: id=0; local=true
11:	JMP: index=19
12:	LBL
13:	LOAD_INT_LIT: value=0
14:	LOAD_INST_MEM
15:	LOAD_INT_VAR: id=2; local=false
16:	EQL_INT
17:	STOR_INT_VAR: id=0; local=true
18:	LBL
19:	LOAD_INT_VAR: id=0; local=true
20:	JMP: index=24, conditional=false
21:	LOAD_INT_LIT: value=0
22:	RTRN
23:	LBL
24:	LOAD_INT_LIT: value=0
25:	STOR_INT_VAR: id=6; local=true
26:	LOAD_INT_LIT: value=0
27:	STOR_INT_VAR: id=7; local=true
28:	LOAD_INT_LIT: value=-1
29:	STOR_INT_VAR: id=8; local=true
30:	LOAD_INT_LIT: value=0
31:	STOR_INT_VAR: id=9; local=true
32:	LOAD_INT_LIT: value=0
33:	STOR_INT_VAR: id=2; local=true
34:	LBL
35:	LOAD_INST_MEM
36:	LOAD_INT_VAR: id=2; local=false
37:	LOAD_INST_MEM
38:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
39:	LOAD_INT_VAR: id=2; local=true
40:	LES_INT
41:	JMP: index=129, conditional=false
42:	LBL
43:	LOAD_INT_LIT: value=-1
44:	LOAD_INT_VAR: id=8; local=true
45:	EQL_INT
46:	JMP: index=51, conditional=true
47:	LOAD_INT_LIT: value=0
48:	STOR_INT_VAR: id=0; local=true
49:	JMP: index=61
50:	LBL
51:	LOAD_INT_VAR: id=2; local=true
52:	LOAD_INST_MEM
53:	LOAD_INT_VAR: id=0; local=false
54:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
55:	LOAD_INT_LIT: value=0
56:	LOAD_INT_VAR: id=1; local=true
57:	MTHD_CALL: method='System.String:Get:i,'; native=true
58:	EQL_INT
59:	STOR_INT_VAR: id=0; local=true
60:	LBL
61:	LOAD_INT_VAR: id=0; local=true
62:	JMP: index=66, conditional=false
63:	LOAD_INT_VAR: id=2; local=true
64:	STOR_INT_VAR: id=8; local=true
65:	LBL
66:	LBL
67:	LOAD_INT_LIT: value=-1
68:	LOAD_INT_VAR: id=8; local=true
69:	GTR_INT
70:	JMP: index=122, conditional=false
71:	LBL
72:	LOAD_INT_VAR: id=5; local=true
73:	LOAD_INT_VAR: id=9; local=true
74:	LES_INT
75:	JMP: index=80, conditional=true
76:	LOAD_INT_LIT: value=0
77:	STOR_INT_VAR: id=0; local=true
78:	JMP: index=90
79:	LBL
80:	LOAD_INT_VAR: id=2; local=true
81:	LOAD_INST_MEM
82:	LOAD_INT_VAR: id=0; local=false
83:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
84:	LOAD_INT_VAR: id=9; local=true
85:	LOAD_INT_VAR: id=1; local=true
86:	MTHD_CALL: method='System.String:Get:i,'; native=true
87:	EQL_INT
88:	STOR_INT_VAR: id=0; local=true
89:	LBL
90:	LOAD_INT_VAR: id=0; local=true
91:	JMP: index=98, conditional=false
92:	LOAD_INT_LIT: value=1
93:	LOAD_INT_VAR: id=9; local=true
94:	ADD_INT
95:	STOR_INT_VAR: id=9; local=true
96:	JMP: index=121
97:	LBL
98:	LOAD_INT_VAR: id=5; local=true
99:	LOAD_INT_VAR: id=9; local=true
100:	EQL_INT
101:	JMP: index=116, conditional=false
102:	LOAD_INT_LIT: value=1
103:	LOAD_INT_VAR: id=6; local=true
104:	ADD_INT
105:	STOR_INT_VAR: id=6; local=true
106:	LOAD_INT_VAR: id=5; local=true
107:	LOAD_INT_VAR: id=8; local=true
108:	ADD_INT
109:	STOR_INT_VAR: id=7; local=true
110:	LOAD_INT_LIT: value=-1
111:	STOR_INT_VAR: id=8; local=true
112:	LOAD_INT_LIT: value=0
113:	STOR_INT_VAR: id=9; local=true
114:	JMP: index=121
115:	LBL
116:	LOAD_INT_LIT: value=-1
117:	STOR_INT_VAR: id=8; local=true
118:	LOAD_INT_LIT: value=0
119:	STOR_INT_VAR: id=9; local=true
120:	LBL
121:	LBL
122:	LBL
123:	LOAD_INT_LIT: value=1
124:	LOAD_INT_VAR: id=2; local=true
125:	ADD_INT
126:	STOR_INT_VAR: id=2; local=true
127:	JMP: index=35
128:	LBL
129:	LBL
130:	LOAD_INT_LIT: value=0
131:	LOAD_INT_VAR: id=7; local=true
132:	NEQL_INT
133:	JMP: index=139, conditional=false
134:	LOAD_INT_LIT: value=1
135:	LOAD_INT_VAR: id=6; local=true
136:	ADD_INT
137:	STOR_INT_VAR: id=6; local=true
138:	LBL
139:	LOAD_INT_VAR: id=6; local=true
140:	NEW_INT_ARY: dimension=1
141:	STOR_INT_VAR: id=3; local=true
142:	LOAD_INT_LIT: value=0
143:	STOR_INT_VAR: id=6; local=true
144:	LOAD_INT_LIT: value=0
145:	STOR_INT_VAR: id=7; local=true
146:	LOAD_INT_LIT: value=-1
147:	STOR_INT_VAR: id=8; local=true
148:	LOAD_INT_LIT: value=0
149:	STOR_INT_VAR: id=9; local=true
150:	LOAD_INT_LIT: value=0
151:	STOR_INT_VAR: id=4; local=true
152:	LBL
153:	LOAD_INST_MEM
154:	LOAD_INT_VAR: id=2; local=false
155:	LOAD_INST_MEM
156:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
157:	LOAD_INT_VAR: id=4; local=true
158:	LES_INT
159:	JMP: index=256, conditional=false
160:	LBL
161:	LOAD_INT_LIT: value=-1
162:	LOAD_INT_VAR: id=8; local=true
163:	EQL_INT
164:	JMP: index=169, conditional=true
165:	LOAD_INT_LIT: value=0
166:	STOR_INT_VAR: id=0; local=true
167:	JMP: index=179
168:	LBL
169:	LOAD_INT_VAR: id=4; local=true
170:	LOAD_INST_MEM
171:	LOAD_INT_VAR: id=0; local=false
172:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
173:	LOAD_INT_LIT: value=0
174:	LOAD_INT_VAR: id=1; local=true
175:	MTHD_CALL: method='System.String:Get:i,'; native=true
176:	EQL_INT
177:	STOR_INT_VAR: id=0; local=true
178:	LBL
179:	LOAD_INT_VAR: id=0; local=true
180:	JMP: index=184, conditional=false
181:	LOAD_INT_VAR: id=4; local=true
182:	STOR_INT_VAR: id=8; local=true
183:	LBL
184:	LBL
185:	LOAD_INT_LIT: value=-1
186:	LOAD_INT_VAR: id=8; local=true
187:	GTR_INT
188:	JMP: index=249, conditional=false
189:	LBL
190:	LOAD_INT_VAR: id=5; local=true
191:	LOAD_INT_VAR: id=9; local=true
192:	LES_INT
193:	JMP: index=198, conditional=true
194:	LOAD_INT_LIT: value=0
195:	STOR_INT_VAR: id=0; local=true
196:	JMP: index=208
197:	LBL
198:	LOAD_INT_VAR: id=4; local=true
199:	LOAD_INST_MEM
200:	LOAD_INT_VAR: id=0; local=false
201:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
202:	LOAD_INT_VAR: id=9; local=true
203:	LOAD_INT_VAR: id=1; local=true
204:	MTHD_CALL: method='System.String:Get:i,'; native=true
205:	EQL_INT
206:	STOR_INT_VAR: id=0; local=true
207:	LBL
208:	LOAD_INT_VAR: id=0; local=true
209:	JMP: index=216, conditional=false
210:	LOAD_INT_LIT: value=1
211:	LOAD_INT_VAR: id=9; local=true
212:	ADD_INT
213:	STOR_INT_VAR: id=9; local=true
214:	JMP: index=248
215:	LBL
216:	LOAD_INT_VAR: id=5; local=true
217:	LOAD_INT_VAR: id=9; local=true
218:	EQL_INT
219:	JMP: index=243, conditional=false
220:	LOAD_INT_VAR: id=7; local=true
221:	LOAD_INT_VAR: id=7; local=true
222:	LOAD_INT_VAR: id=8; local=true
223:	SUB_INT
224:	LOAD_INST_MEM
225:	MTHD_CALL: method='System.String:SubString:i,i,'; native=false
226:	LOAD_INT_VAR: id=6; local=true
227:	LOAD_INT_VAR: id=3; local=true
228:	STOR_INT_ARY_ELM: dimension=1; local=true
229:	LOAD_INT_LIT: value=1
230:	LOAD_INT_VAR: id=6; local=true
231:	ADD_INT
232:	STOR_INT_VAR: id=6; local=true
233:	LOAD_INT_VAR: id=5; local=true
234:	LOAD_INT_VAR: id=8; local=true
235:	ADD_INT
236:	STOR_INT_VAR: id=7; local=true
237:	LOAD_INT_LIT: value=-1
238:	STOR_INT_VAR: id=8; local=true
239:	LOAD_INT_LIT: value=0
240:	STOR_INT_VAR: id=9; local=true
241:	JMP: index=248
242:	LBL
243:	LOAD_INT_LIT: value=-1
244:	STOR_INT_VAR: id=8; local=true
245:	LOAD_INT_LIT: value=0
246:	STOR_INT_VAR: id=9; local=true
247:	LBL
248:	LBL
249:	LBL
250:	LOAD_INT_LIT: value=1
251:	LOAD_INT_VAR: id=4; local=true
252:	ADD_INT
253:	STOR_INT_VAR: id=4; local=true
254:	JMP: index=153
255:	LBL
256:	LBL
257:	LOAD_INT_LIT: value=0
258:	LOAD_INT_VAR: id=7; local=true
259:	NEQL_INT
260:	JMP: index=276, conditional=false
261:	LOAD_INT_VAR: id=7; local=true
262:	LOAD_INT_VAR: id=7; local=true
263:	LOAD_INST_MEM
264:	LOAD_INT_VAR: id=2; local=false
265:	SUB_INT
266:	LOAD_INST_MEM
267:	MTHD_CALL: method='System.String:SubString:i,i,'; native=false
268:	LOAD_INT_VAR: id=6; local=true
269:	LOAD_INT_VAR: id=3; local=true
270:	STOR_INT_ARY_ELM: dimension=1; local=true
271:	LOAD_INT_LIT: value=1
272:	LOAD_INT_VAR: id=6; local=true
273:	ADD_INT
274:	STOR_INT_VAR: id=6; local=true
275:	LBL
276:	LOAD_INT_VAR: id=3; local=true
277:	RTRN
--
---------------------------------------------------------
Method: id=15,64; name='System.String:StartsWith:c,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: CHAR_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_CHAR_LIT value='?'
2:	LOAD_INT_VAR: id=1; local=true
3:	NEQL_INT
4:	JMP: index=9, conditional=true
5:	LOAD_INT_LIT: value=0
6:	STOR_INT_VAR: id=0; local=true
7:	JMP: index=16
8:	LBL
9:	LOAD_INT_VAR: id=1; local=true
10:	LOAD_INT_LIT: value=0
11:	LOAD_INST_MEM
12:	MTHD_CALL: method='System.String:Get:i,'; native=true
13:	EQL_INT
14:	STOR_INT_VAR: id=0; local=true
15:	LBL
16:	LOAD_INT_VAR: id=0; local=true
17:	RTRN
--
---------------------------------------------------------
Method: id=15,66; name='System.String:StartsWith:o.System.String,'; return='l';
  blocks=1; is_function=false; num_params=1; mem_size=24
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: INT_PARM
  2: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=2; local=false
3:	STOR_INT_VAR: id=1; local=true
4:	LBL
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=2; local=false
7:	LOAD_INT_VAR: id=1; local=true
8:	LES_EQL_INT
9:	JMP: index=40, conditional=false
10:	LOAD_INT_LIT: value=0
11:	STOR_INT_VAR: id=2; local=true
12:	LBL
13:	LOAD_INT_VAR: id=1; local=true
14:	LOAD_INT_VAR: id=2; local=true
15:	LES_INT
16:	JMP: index=37, conditional=false
17:	LBL
18:	LOAD_INT_VAR: id=2; local=true
19:	LOAD_INST_MEM
20:	LOAD_INT_VAR: id=0; local=false
21:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
22:	LOAD_INT_VAR: id=2; local=true
23:	LOAD_INT_VAR: id=0; local=true
24:	MTHD_CALL: method='System.String:Get:i,'; native=true
25:	NEQL_INT
26:	JMP: index=30, conditional=false
27:	LOAD_INT_LIT: value=0
28:	RTRN
29:	LBL
30:	LBL
31:	LOAD_INT_LIT: value=1
32:	LOAD_INT_VAR: id=2; local=true
33:	ADD_INT
34:	STOR_INT_VAR: id=2; local=true
35:	JMP: index=13
36:	LBL
37:	LOAD_INT_LIT: value=1
38:	RTRN
39:	LBL
40:	LOAD_INT_LIT: value=0
41:	RTRN
--
---------------------------------------------------------
Method: id=15,75; name='System.String:SubString:i,'; return='o.System.String';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=0
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.String:SubString:i,i,'; native=false
5:	RTRN
--
---------------------------------------------------------
Method: id=15,76; name='System.String:SubString:i,i,'; return='o.System.String';
  blocks=1; is_function=false; num_params=2; mem_size=32
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: CHAR_ARY_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=2; local=true
1:	STOR_INT_VAR: id=1; local=true
2:	LBL
3:	LOAD_INT_LIT: value=0
4:	LOAD_INT_VAR: id=1; local=true
5:	LES_INT
6:	JMP: index=11, conditional=false
7:	LOAD_INT_LIT: value=1
8:	STOR_INT_VAR: id=0; local=true
9:	JMP: index=17
10:	LBL
11:	LOAD_INST_MEM
12:	LOAD_INT_VAR: id=2; local=false
13:	LOAD_INT_VAR: id=1; local=true
14:	GTR_INT
15:	STOR_INT_VAR: id=0; local=true
16:	LBL
17:	LOAD_INT_VAR: id=0; local=true
18:	JMP: index=22, conditional=false
19:	LOAD_INT_LIT: value=0
20:	RTRN
21:	LBL
22:	LOAD_INT_VAR: id=1; local=true
23:	LOAD_INT_VAR: id=2; local=true
24:	ADD_INT
25:	STOR_INT_VAR: id=3; local=true
26:	LBL
27:	LOAD_INT_LIT: value=0
28:	LOAD_INT_VAR: id=3; local=true
29:	LES_INT
30:	JMP: index=35, conditional=false
31:	LOAD_INT_LIT: value=1
32:	STOR_INT_VAR: id=0; local=true
33:	JMP: index=41
34:	LBL
35:	LOAD_INST_MEM
36:	LOAD_INT_VAR: id=2; local=false
37:	LOAD_INT_VAR: id=3; local=true
38:	GTR_INT
39:	STOR_INT_VAR: id=0; local=true
40:	LBL
41:	LOAD_INT_VAR: id=0; local=true
42:	JMP: index=46, conditional=false
43:	LOAD_INT_LIT: value=0
44:	RTRN
45:	LBL
46:	LOAD_INT_VAR: id=2; local=true
47:	NEW_CHAR_ARY: dimension=1
48:	STOR_INT_VAR: id=4; local=true
49:	LBL
50:	LOAD_INT_LIT: value=1
51:	LOAD_INT_VAR: id=4; local=true
52:	LOAD_INT_LIT: value=0
53:	LOAD_INST_MEM
54:	LOAD_INT_VAR: id=0; local=false
55:	LOAD_INT_VAR: id=1; local=true
56:	LOAD_INT_VAR: id=2; local=true
57:	LOAD_INST_MEM
58:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
59:	NEQL_INT
60:	JMP: index=64, conditional=false
61:	LOAD_INT_LIT: value=0
62:	RTRN
63:	LBL
64:	LOAD_INT_VAR: id=4; local=true
65:	LOAD_INT_LIT: value=0
66:	NEW_OBJ_INST: class='System.String'
67:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
68:	RTRN
--
---------------------------------------------------------
Method: id=15,63; name='System.String:ToBool:'; return='l';
  blocks=1; is_function=false; num_params=0; mem_size=48
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_ARY_PARM
  3: CHAR_ARY_PARM
  4: OBJ_PARM
  5: CHAR_ARY_PARM
---------------------------------------------------------
0:	LBL
1:	LOAD_CHAR_LIT value='t'
2:	LOAD_INT_LIT: value=0
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.String:Get:i,'; native=true
5:	EQL_INT
6:	JMP: index=50, conditional=false
7:	LOAD_INT_LIT: value=3
8:	NEW_CHAR_ARY: dimension=1
9:	LOAD_INT_LIT: value=21
10:	LOAD_INT_LIT: value=-3994
11:	TRAP_RTRN: args=3
12:	STOR_INT_VAR: id=2; local=true
13:	LOAD_INT_LIT: value=0
14:	STOR_INT_VAR: id=0; local=true
15:	LBL
16:	LOAD_INT_VAR: id=2; local=true
17:	LOAD_INST_MEM
18:	STOR_INT_VAR: id=4; local=true
19:	STOR_INT_VAR: id=5; local=true
20:	LOAD_INT_VAR: id=5; local=true
21:	LOAD_ARY_SIZE
22:	LOAD_INT_VAR: id=0; local=true
23:	LES_INT
24:	JMP: index=46, conditional=false
25:	LBL
26:	LOAD_INT_VAR: id=0; local=true
27:	LOAD_INT_VAR: id=2; local=true
28:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
29:	LOAD_INT_LIT: value=1
30:	LOAD_INT_VAR: id=0; local=true
31:	ADD_INT
32:	LOAD_INST_MEM
33:	MTHD_CALL: method='System.String:Get:i,'; native=true
34:	NEQL_INT
35:	JMP: index=39, conditional=false
36:	LOAD_INT_LIT: value=0
37:	RTRN
38:	LBL
39:	LBL
40:	LOAD_INT_LIT: value=1
41:	LOAD_INT_VAR: id=0; local=true
42:	ADD_INT
43:	STOR_INT_VAR: id=0; local=true
44:	JMP: index=16
45:	LBL
46:	LOAD_INT_LIT: value=1
47:	RTRN
48:	JMP: index=95
49:	LBL
50:	LOAD_CHAR_LIT value='T'
51:	LOAD_INT_LIT: value=0
52:	LOAD_INST_MEM
53:	MTHD_CALL: method='System.String:Get:i,'; native=true
54:	EQL_INT
55:	JMP: index=95, conditional=false
56:	LOAD_INT_LIT: value=3
57:	NEW_CHAR_ARY: dimension=1
58:	LOAD_INT_LIT: value=22
59:	LOAD_INT_LIT: value=-3994
60:	TRAP_RTRN: args=3
61:	STOR_INT_VAR: id=3; local=true
62:	LOAD_INT_LIT: value=0
63:	STOR_INT_VAR: id=1; local=true
64:	LBL
65:	LOAD_INT_VAR: id=3; local=true
66:	LOAD_INST_MEM
67:	MTHD_CALL: method='System.$Char:Size:c*,'; native=false
68:	LOAD_INT_VAR: id=1; local=true
69:	LES_INT
70:	JMP: index=92, conditional=false
71:	LBL
72:	LOAD_INT_VAR: id=1; local=true
73:	LOAD_INT_VAR: id=3; local=true
74:	LOAD_CHAR_ARY_ELM: dimension=1; local=true
75:	LOAD_INT_LIT: value=1
76:	LOAD_INT_VAR: id=1; local=true
77:	ADD_INT
78:	LOAD_INST_MEM
79:	MTHD_CALL: method='System.String:Get:i,'; native=true
80:	NEQL_INT
81:	JMP: index=85, conditional=false
82:	LOAD_INT_LIT: value=0
83:	RTRN
84:	LBL
85:	LBL
86:	LOAD_INT_LIT: value=1
87:	LOAD_INT_VAR: id=1; local=true
88:	ADD_INT
89:	STOR_INT_VAR: id=1; local=true
90:	JMP: index=65
91:	LBL
92:	LOAD_INT_LIT: value=1
93:	RTRN
94:	LBL
95:	LOAD_INT_LIT: value=0
96:	RTRN
--
---------------------------------------------------------
Method: id=15,12; name='System.String:ToByteArray:'; return='b*';
  blocks=1; is_function=false; num_params=0; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: BYTE_ARY_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	NEW_BYTE_ARY: dimension=1
3:	STOR_INT_VAR: id=1; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=0; local=true
6:	LBL
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_INST_MEM
10:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
11:	LOAD_INT_VAR: id=0; local=true
12:	LES_INT
13:	JMP: index=28, conditional=false
14:	LOAD_INT_VAR: id=0; local=true
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=0; local=false
17:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
18:	LOAD_INT_VAR: id=0; local=true
19:	LOAD_INT_VAR: id=1; local=true
20:	STOR_BYTE_ARY_ELM: dimension=1; local=true
21:	LBL
22:	LOAD_INT_LIT: value=1
23:	LOAD_INT_VAR: id=0; local=true
24:	ADD_INT
25:	STOR_INT_VAR: id=0; local=true
26:	JMP: index=7
27:	LBL
28:	LOAD_INT_VAR: id=1; local=true
29:	RTRN
--
---------------------------------------------------------
Method: id=15,11; name='System.String:ToCharArray:'; return='c*';
  blocks=1; is_function=false; num_params=0; mem_size=8
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	NEW_CHAR_ARY: dimension=1
3:	COPY_INT_VAR: id=0; local=true
4:	LOAD_INT_LIT: value=0
5:	LOAD_INST_MEM
6:	LOAD_INT_VAR: id=0; local=false
7:	LOAD_INT_LIT: value=0
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=2; local=false
10:	LOAD_INST_MEM
11:	MTHD_CALL: method='System.Runtime:Copy:c*,i,c*,i,i,'; native=false
12:	POP_INT
13:	LOAD_INT_VAR: id=0; local=true
14:	RTRN
--
---------------------------------------------------------
Method: id=15,62; name='System.String:ToFloat:'; return='f';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	S2F
3:	RTRN
--
---------------------------------------------------------
Method: id=15,60; name='System.String:ToInt:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=10
1:	LOAD_INST_MEM
2:	MTHD_CALL: method='System.String:ToInt:i,'; native=false
3:	RTRN
--
---------------------------------------------------------
Method: id=15,61; name='System.String:ToInt:i,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=0; local=false
4:	S2I
5:	RTRN
--
---------------------------------------------------------
Method: id=15,74; name='System.String:ToLower:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_ARY_PARM
  3: CHAR_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=2; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=1; local=true
6:	LBL
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_INST_MEM
10:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
11:	LOAD_INT_VAR: id=1; local=true
12:	LES_INT
13:	JMP: index=51, conditional=false
14:	LOAD_INT_VAR: id=1; local=true
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=0; local=false
17:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
18:	STOR_INT_VAR: id=3; local=true
19:	LBL
20:	LOAD_INT_LIT: value=64
21:	LOAD_INT_VAR: id=3; local=true
22:	GTR_INT
23:	JMP: index=28, conditional=true
24:	LOAD_INT_LIT: value=0
25:	STOR_INT_VAR: id=0; local=true
26:	JMP: index=33
27:	LBL
28:	LOAD_INT_LIT: value=91
29:	LOAD_INT_VAR: id=3; local=true
30:	LES_INT
31:	STOR_INT_VAR: id=0; local=true
32:	LBL
33:	LOAD_INT_VAR: id=0; local=true
34:	JMP: index=40, conditional=false
35:	LOAD_INT_LIT: value=32
36:	LOAD_INT_VAR: id=3; local=true
37:	ADD_INT
38:	STOR_INT_VAR: id=3; local=true
39:	LBL
40:	LOAD_INT_VAR: id=3; local=true
41:	LOAD_INT_VAR: id=1; local=true
42:	LOAD_INT_VAR: id=2; local=true
43:	STOR_CHAR_ARY_ELM: dimension=1; local=true
44:	LBL
45:	LOAD_INT_LIT: value=1
46:	LOAD_INT_VAR: id=1; local=true
47:	ADD_INT
48:	STOR_INT_VAR: id=1; local=true
49:	JMP: index=7
50:	LBL
51:	LOAD_INT_VAR: id=2; local=true
52:	LOAD_INT_LIT: value=0
53:	NEW_OBJ_INST: class='System.String'
54:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
55:	RTRN
--
---------------------------------------------------------
Method: id=15,7; name='System.String:ToString:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	RTRN
--
---------------------------------------------------------
Method: id=15,73; name='System.String:ToUpper:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_ARY_PARM
  3: CHAR_PARM
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	NEW_CHAR_ARY: dimension=1
3:	STOR_INT_VAR: id=2; local=true
4:	LOAD_INT_LIT: value=0
5:	STOR_INT_VAR: id=1; local=true
6:	LBL
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=2; local=false
9:	LOAD_INST_MEM
10:	MTHD_CALL: method='System.$Int:Size:i,'; native=false
11:	LOAD_INT_VAR: id=1; local=true
12:	LES_INT
13:	JMP: index=51, conditional=false
14:	LOAD_INT_VAR: id=1; local=true
15:	LOAD_INST_MEM
16:	LOAD_INT_VAR: id=0; local=false
17:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
18:	STOR_INT_VAR: id=3; local=true
19:	LBL
20:	LOAD_INT_LIT: value=96
21:	LOAD_INT_VAR: id=3; local=true
22:	GTR_INT
23:	JMP: index=28, conditional=true
24:	LOAD_INT_LIT: value=0
25:	STOR_INT_VAR: id=0; local=true
26:	JMP: index=33
27:	LBL
28:	LOAD_INT_LIT: value=123
29:	LOAD_INT_VAR: id=3; local=true
30:	LES_INT
31:	STOR_INT_VAR: id=0; local=true
32:	LBL
33:	LOAD_INT_VAR: id=0; local=true
34:	JMP: index=40, conditional=false
35:	LOAD_INT_LIT: value=32
36:	LOAD_INT_VAR: id=3; local=true
37:	SUB_INT
38:	STOR_INT_VAR: id=3; local=true
39:	LBL
40:	LOAD_INT_VAR: id=3; local=true
41:	LOAD_INT_VAR: id=1; local=true
42:	LOAD_INT_VAR: id=2; local=true
43:	STOR_CHAR_ARY_ELM: dimension=1; local=true
44:	LBL
45:	LOAD_INT_LIT: value=1
46:	LOAD_INT_VAR: id=1; local=true
47:	ADD_INT
48:	STOR_INT_VAR: id=1; local=true
49:	JMP: index=7
50:	LBL
51:	LOAD_INT_VAR: id=2; local=true
52:	LOAD_INT_LIT: value=0
53:	NEW_OBJ_INST: class='System.String'
54:	MTHD_CALL: method='System.String:New:c*,l,'; native=false
55:	RTRN
--
---------------------------------------------------------
Method: id=15,69; name='System.String:Trim:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: CHAR_PARM
  3: INT_PARM
---------------------------------------------------------
0:	LBL
1:	LOAD_INT_LIT: value=0
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=2; local=false
4:	EQL_INT
5:	JMP: index=10, conditional=false
6:	NEW_OBJ_INST: class='System.String'
7:	MTHD_CALL: method='System.String:New:'; native=false
8:	RTRN
9:	LBL
10:	LOAD_INT_LIT: value=0
11:	COPY_INT_VAR: id=1; local=true
12:	LOAD_INST_MEM
13:	LOAD_INT_VAR: id=0; local=false
14:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
15:	STOR_INT_VAR: id=2; local=true
16:	LBL
17:	LOAD_INST_MEM
18:	LOAD_INT_VAR: id=2; local=false
19:	LOAD_INT_VAR: id=1; local=true
20:	LES_INT
21:	JMP: index=26, conditional=true
22:	LOAD_INT_LIT: value=0
23:	STOR_INT_VAR: id=0; local=true
24:	JMP: index=157
25:	LBL
26:	LOAD_CHAR_LIT value=' '
27:	LOAD_INT_VAR: id=2; local=true
28:	EQL_INT
29:	JMP: index=34, conditional=false
30:	LOAD_INT_LIT: value=1
31:	STOR_INT_VAR: id=0; local=true
32:	JMP: index=156
33:	LBL
34:	LOAD_CHAR_LIT value='?'
35:	LOAD_INT_VAR: id=2; local=true
36:	EQL_INT
37:	JMP: index=42, conditional=false
38:	LOAD_INT_LIT: value=1
39:	STOR_INT_VAR: id=0; local=true
40:	JMP: index=155
41:	LBL
42:	LOAD_CHAR_LIT value='?'
43:	LOAD_INT_VAR: id=2; local=true
44:	EQL_INT
45:	JMP: index=50, conditional=false
46:	LOAD_INT_LIT: value=1
47:	STOR_INT_VAR: id=0; local=true
48:	JMP: index=154
49:	LBL
50:	LOAD_CHAR_LIT value='?'
51:	LOAD_INT_VAR: id=2; local=true
52:	EQL_INT
53:	JMP: index=58, conditional=false
54:	LOAD_INT_LIT: value=1
55:	STOR_INT_VAR: id=0; local=true
56:	JMP: index=153
57:	LBL
58:	LOAD_INT_LIT: value=160
59:	LOAD_INT_VAR: id=2; local=true
60:	EQL_INT
61:	JMP: index=66, conditional=false
62:	LOAD_INT_LIT: value=1
63:	STOR_INT_VAR: id=0; local=true
64:	JMP: index=152
65:	LBL
66:	LOAD_INT_LIT: value=5760
67:	LOAD_INT_VAR: id=2; local=true
68:	EQL_INT
69:	JMP: index=74, conditional=false
70:	LOAD_INT_LIT: value=1
71:	STOR_INT_VAR: id=0; local=true
72:	JMP: index=151
73:	LBL
74:	LOAD_INT_LIT: value=8192
75:	LOAD_INT_VAR: id=2; local=true
76:	GTR_EQL_INT
77:	JMP: index=82, conditional=true
78:	LOAD_INT_LIT: value=0
79:	STOR_INT_VAR: id=0; local=true
80:	JMP: index=150
81:	LBL
82:	LOAD_INT_LIT: value=8202
83:	LOAD_INT_VAR: id=2; local=true
84:	LES_EQL_INT
85:	JMP: index=90, conditional=false
86:	LOAD_INT_LIT: value=1
87:	STOR_INT_VAR: id=0; local=true
88:	JMP: index=149
89:	LBL
90:	LOAD_INT_LIT: value=10
91:	LOAD_INT_VAR: id=2; local=true
92:	GTR_EQL_INT
93:	JMP: index=98, conditional=true
94:	LOAD_INT_LIT: value=0
95:	STOR_INT_VAR: id=0; local=true
96:	JMP: index=148
97:	LBL
98:	LOAD_INT_LIT: value=13
99:	LOAD_INT_VAR: id=2; local=true
100:	LES_EQL_INT
101:	JMP: index=106, conditional=false
102:	LOAD_INT_LIT: value=1
103:	STOR_INT_VAR: id=0; local=true
104:	JMP: index=147
105:	LBL
106:	LOAD_INT_LIT: value=8239
107:	LOAD_INT_VAR: id=2; local=true
108:	EQL_INT
109:	JMP: index=114, conditional=false
110:	LOAD_INT_LIT: value=1
111:	STOR_INT_VAR: id=0; local=true
112:	JMP: index=146
113:	LBL
114:	LOAD_INT_LIT: value=8287
115:	LOAD_INT_VAR: id=2; local=true
116:	EQL_INT
117:	JMP: index=122, conditional=false
118:	LOAD_INT_LIT: value=1
119:	STOR_INT_VAR: id=0; local=true
120:	JMP: index=145
121:	LBL
122:	LOAD_INT_LIT: value=12288
123:	LOAD_INT_VAR: id=2; local=true
124:	EQL_INT
125:	JMP: index=130, conditional=false
126:	LOAD_INT_LIT: value=1
127:	STOR_INT_VAR: id=0; local=true
128:	JMP: index=144
129:	LBL
130:	LOAD_INT_LIT: value=133
131:	LOAD_INT_VAR: id=2; local=true
132:	EQL_INT
133:	JMP: index=138, conditional=false
134:	LOAD_INT_LIT: value=1
135:	STOR_INT_VAR: id=0; local=true
136:	JMP: index=143
137:	LBL
138:	LOAD_INT_LIT: value=8233
139:	LOAD_INT_VAR: id=2; local=true
140:	EQL_INT
141:	STOR_INT_VAR: id=0; local=true
142:	LBL
143:	LBL
144:	LBL
145:	LBL
146:	LBL
147:	LBL
148:	LBL
149:	LBL
150:	LBL
151:	LBL
152:	LBL
153:	LBL
154:	LBL
155:	LBL
156:	LBL
157:	LOAD_INT_VAR: id=0; local=true
158:	JMP: index=169, conditional=false
159:	LOAD_INT_LIT: value=1
160:	LOAD_INT_VAR: id=1; local=true
161:	ADD_INT
162:	COPY_INT_VAR: id=1; local=true
163:	LOAD_INST_MEM
164:	LOAD_INT_VAR: id=0; local=false
165:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
166:	STOR_INT_VAR: id=2; local=true
167:	JMP: index=17
168:	LBL
169:	LOAD_INST_MEM
170:	LOAD_INT_VAR: id=2; local=false
171:	STOR_INT_VAR: id=3; local=true
172:	LBL
173:	LOAD_INT_LIT: value=1
174:	LOAD_INT_VAR: id=3; local=true
175:	SUB_INT
176:	STOR_INT_VAR: id=3; local=true
177:	LBL
178:	LOAD_INT_LIT: value=-1
179:	LOAD_INT_VAR: id=3; local=true
180:	GTR_INT
181:	JMP: index=186, conditional=true
182:	LOAD_INT_LIT: value=0
183:	STOR_INT_VAR: id=0; local=true
184:	JMP: index=362
185:	LBL
186:	LOAD_CHAR_LIT value=' '
187:	LOAD_INT_VAR: id=3; local=true
188:	LOAD_INST_MEM
189:	LOAD_INT_VAR: id=0; local=false
190:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
191:	EQL_INT
192:	JMP: index=197, conditional=false
193:	LOAD_INT_LIT: value=1
194:	STOR_INT_VAR: id=0; local=true
195:	JMP: index=361
196:	LBL
197:	LOAD_CHAR_LIT value='?'
198:	LOAD_INT_VAR: id=3; local=true
199:	LOAD_INST_MEM
200:	LOAD_INT_VAR: id=0; local=false
201:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
202:	EQL_INT
203:	JMP: index=208, conditional=false
204:	LOAD_INT_LIT: value=1
205:	STOR_INT_VAR: id=0; local=true
206:	JMP: index=360
207:	LBL
208:	LOAD_CHAR_LIT value='?'
209:	LOAD_INT_VAR: id=3; local=true
210:	LOAD_INST_MEM
211:	LOAD_INT_VAR: id=0; local=false
212:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
213:	EQL_INT
214:	JMP: index=219, conditional=false
215:	LOAD_INT_LIT: value=1
216:	STOR_INT_VAR: id=0; local=true
217:	JMP: index=359
218:	LBL
219:	LOAD_CHAR_LIT value='?'
220:	LOAD_INT_VAR: id=3; local=true
221:	LOAD_INST_MEM
222:	LOAD_INT_VAR: id=0; local=false
223:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
224:	EQL_INT
225:	JMP: index=230, conditional=false
226:	LOAD_INT_LIT: value=1
227:	STOR_INT_VAR: id=0; local=true
228:	JMP: index=358
229:	LBL
230:	LOAD_INT_LIT: value=160
231:	LOAD_INT_VAR: id=3; local=true
232:	LOAD_INST_MEM
233:	LOAD_INT_VAR: id=0; local=false
234:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
235:	EQL_INT
236:	JMP: index=241, conditional=false
237:	LOAD_INT_LIT: value=1
238:	STOR_INT_VAR: id=0; local=true
239:	JMP: index=357
240:	LBL
241:	LOAD_INT_LIT: value=5760
242:	LOAD_INT_VAR: id=3; local=true
243:	LOAD_INST_MEM
244:	LOAD_INT_VAR: id=0; local=false
245:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
246:	EQL_INT
247:	JMP: index=252, conditional=false
248:	LOAD_INT_LIT: value=1
249:	STOR_INT_VAR: id=0; local=true
250:	JMP: index=356
251:	LBL
252:	LOAD_INT_LIT: value=8192
253:	LOAD_INT_VAR: id=3; local=true
254:	LOAD_INST_MEM
255:	LOAD_INT_VAR: id=0; local=false
256:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
257:	GTR_EQL_INT
258:	JMP: index=263, conditional=true
259:	LOAD_INT_LIT: value=0
260:	STOR_INT_VAR: id=0; local=true
261:	JMP: index=355
262:	LBL
263:	LOAD_INT_LIT: value=8202
264:	LOAD_INT_VAR: id=3; local=true
265:	LOAD_INST_MEM
266:	LOAD_INT_VAR: id=0; local=false
267:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
268:	LES_EQL_INT
269:	JMP: index=274, conditional=false
270:	LOAD_INT_LIT: value=1
271:	STOR_INT_VAR: id=0; local=true
272:	JMP: index=354
273:	LBL
274:	LOAD_INT_LIT: value=10
275:	LOAD_INT_VAR: id=3; local=true
276:	LOAD_INST_MEM
277:	LOAD_INT_VAR: id=0; local=false
278:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
279:	GTR_EQL_INT
280:	JMP: index=285, conditional=true
281:	LOAD_INT_LIT: value=0
282:	STOR_INT_VAR: id=0; local=true
283:	JMP: index=353
284:	LBL
285:	LOAD_INT_LIT: value=13
286:	LOAD_INT_VAR: id=3; local=true
287:	LOAD_INST_MEM
288:	LOAD_INT_VAR: id=0; local=false
289:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
290:	LES_EQL_INT
291:	JMP: index=296, conditional=false
292:	LOAD_INT_LIT: value=1
293:	STOR_INT_VAR: id=0; local=true
294:	JMP: index=352
295:	LBL
296:	LOAD_INT_LIT: value=8239
297:	LOAD_INT_VAR: id=3; local=true
298:	LOAD_INST_MEM
299:	LOAD_INT_VAR: id=0; local=false
300:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
301:	EQL_INT
302:	JMP: index=307, conditional=false
303:	LOAD_INT_LIT: value=1
304:	STOR_INT_VAR: id=0; local=true
305:	JMP: index=351
306:	LBL
307:	LOAD_INT_LIT: value=8287
308:	LOAD_INT_VAR: id=3; local=true
309:	LOAD_INST_MEM
310:	LOAD_INT_VAR: id=0; local=false
311:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
312:	EQL_INT
313:	JMP: index=318, conditional=false
314:	LOAD_INT_LIT: value=1
315:	STOR_INT_VAR: id=0; local=true
316:	JMP: index=350
317:	LBL
318:	LOAD_INT_LIT: value=12288
319:	LOAD_INT_VAR: id=3; local=true
320:	LOAD_INST_MEM
321:	LOAD_INT_VAR: id=0; local=false
322:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
323:	EQL_INT
324:	JMP: index=329, conditional=false
325:	LOAD_INT_LIT: value=1
326:	STOR_INT_VAR: id=0; local=true
327:	JMP: index=349
328:	LBL
329:	LOAD_INT_LIT: value=133
330:	LOAD_INT_VAR: id=3; local=true
331:	LOAD_INST_MEM
332:	LOAD_INT_VAR: id=0; local=false
333:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
334:	EQL_INT
335:	JMP: index=340, conditional=false
336:	LOAD_INT_LIT: value=1
337:	STOR_INT_VAR: id=0; local=true
338:	JMP: index=348
339:	LBL
340:	LOAD_INT_LIT: value=8233
341:	LOAD_INT_VAR: id=3; local=true
342:	LOAD_INST_MEM
343:	LOAD_INT_VAR: id=0; local=false
344:	LOAD_CHAR_ARY_ELM: dimension=1; local=false
345:	EQL_INT
346:	STOR_INT_VAR: id=0; local=true
347:	LBL
348:	LBL
349:	LBL
350:	LBL
351:	LBL
352:	LBL
353:	LBL
354:	LBL
355:	LBL
356:	LBL
357:	LBL
358:	LBL
359:	LBL
360:	LBL
361:	LBL
362:	LOAD_INT_VAR: id=0; local=true
363:	JMP: index=173, conditional=true
364:	LBL
365:	LBL
366:	LOAD_INT_VAR: id=1; local=true
367:	LOAD_INT_VAR: id=3; local=true
368:	LES_INT
369:	JMP: index=374, conditional=false
370:	NEW_OBJ_INST: class='System.String'
371:	MTHD_CALL: method='System.String:New:'; native=false
372:	RTRN
373:	LBL
374:	LOAD_INST_MEM
375:	LOAD_INT_VAR: id=0; local=false
376:	LOAD_INT_VAR: id=1; local=true
377:	LOAD_INT_LIT: value=1
378:	LOAD_INT_VAR: id=1; local=true
379:	LOAD_INT_VAR: id=3; local=true
380:	SUB_INT
381:	ADD_INT
382:	NEW_OBJ_INST: class='System.String'
383:	MTHD_CALL: method='System.String:New:c*,i,i,'; native=false
384:	RTRN
--
=========================================================
Class: id=16; name='System.Runtime'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=22; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=16,6; name='System.Runtime:Assert:l,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3847
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=16,4; name='System.Runtime:Command:o.System.String,'; return='i';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3849
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=16,5; name='System.Runtime:CommandOutput:o.System.String,'; return='o.System.String*';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3848
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=16,16; name='System.Runtime:Copy:b*,i,b*,i,i,'; return='l';
  blocks=1; is_function=true; num_params=5; mem_size=40
---------------------------------------------------------
memory types:
  0: BYTE_ARY_PARM
  1: INT_PARM
  2: BYTE_ARY_PARM
  3: INT_PARM
  4: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=4; local=true
1:	STOR_INT_VAR: id=3; local=true
2:	STOR_INT_VAR: id=2; local=true
3:	STOR_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INT_VAR: id=2; local=true
8:	LOAD_INT_VAR: id=3; local=true
9:	LOAD_INT_VAR: id=4; local=true
10:	CPY_BYTE_ARY
11:	RTRN
--
---------------------------------------------------------
Method: id=16,17; name='System.Runtime:Copy:c*,i,c*,i,i,'; return='l';
  blocks=1; is_function=true; num_params=5; mem_size=40
---------------------------------------------------------
memory types:
  0: CHAR_ARY_PARM
  1: INT_PARM
  2: CHAR_ARY_PARM
  3: INT_PARM
  4: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=4; local=true
1:	STOR_INT_VAR: id=3; local=true
2:	STOR_INT_VAR: id=2; local=true
3:	STOR_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INT_VAR: id=2; local=true
8:	LOAD_INT_VAR: id=3; local=true
9:	LOAD_INT_VAR: id=4; local=true
10:	CPY_CHAR_ARY
11:	RTRN
--
---------------------------------------------------------
Method: id=16,21; name='System.Runtime:Copy:f*,i,f*,i,i,'; return='l';
  blocks=1; is_function=true; num_params=5; mem_size=40
---------------------------------------------------------
memory types:
  0: FLOAT_ARY_PARM
  1: INT_PARM
  2: FLOAT_ARY_PARM
  3: INT_PARM
  4: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=4; local=true
1:	STOR_INT_VAR: id=3; local=true
2:	STOR_INT_VAR: id=2; local=true
3:	STOR_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INT_VAR: id=2; local=true
8:	LOAD_INT_VAR: id=3; local=true
9:	LOAD_INT_VAR: id=4; local=true
10:	CPY_FLOAT_ARY
11:	RTRN
--
---------------------------------------------------------
Method: id=16,18; name='System.Runtime:Copy:i*,i,i*,i,i,'; return='l';
  blocks=1; is_function=true; num_params=5; mem_size=40
---------------------------------------------------------
memory types:
  0: INT_ARY_PARM
  1: INT_PARM
  2: INT_ARY_PARM
  3: INT_PARM
  4: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=4; local=true
1:	STOR_INT_VAR: id=3; local=true
2:	STOR_INT_VAR: id=2; local=true
3:	STOR_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INT_VAR: id=2; local=true
8:	LOAD_INT_VAR: id=3; local=true
9:	LOAD_INT_VAR: id=4; local=true
10:	CPY_INT_ARY
11:	RTRN
--
---------------------------------------------------------
Method: id=16,19; name='System.Runtime:Copy:o.System.Base*,i,o.System.Base*,i,i,'; return='l';
  blocks=1; is_function=true; num_params=5; mem_size=40
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: INT_PARM
  2: OBJ_ARY_PARM
  3: INT_PARM
  4: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=4; local=true
1:	STOR_INT_VAR: id=3; local=true
2:	STOR_INT_VAR: id=2; local=true
3:	STOR_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INT_VAR: id=2; local=true
8:	LOAD_INT_VAR: id=3; local=true
9:	LOAD_INT_VAR: id=4; local=true
10:	CPY_INT_ARY
11:	RTRN
--
---------------------------------------------------------
Method: id=16,20; name='System.Runtime:Copy:o.System.Compare*,i,o.System.Compare*,i,i,'; return='l';
  blocks=1; is_function=true; num_params=5; mem_size=40
---------------------------------------------------------
memory types:
  0: OBJ_ARY_PARM
  1: INT_PARM
  2: OBJ_ARY_PARM
  3: INT_PARM
  4: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=4; local=true
1:	STOR_INT_VAR: id=3; local=true
2:	STOR_INT_VAR: id=2; local=true
3:	STOR_INT_VAR: id=1; local=true
4:	STOR_INT_VAR: id=0; local=true
5:	LOAD_INT_VAR: id=0; local=true
6:	LOAD_INT_VAR: id=1; local=true
7:	LOAD_INT_VAR: id=2; local=true
8:	LOAD_INT_VAR: id=3; local=true
9:	LOAD_INT_VAR: id=4; local=true
10:	CPY_INT_ARY
11:	RTRN
--
---------------------------------------------------------
Method: id=16,3; name='System.Runtime:Exit:i,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3846
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=16,11; name='System.Runtime:GetInstallDir:'; return='o.System.String';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=11
1:	NEW_CHAR_ARY: dimension=1
2:	LOAD_INT_LIT: value=26
3:	LOAD_INT_LIT: value=-3994
4:	TRAP_RTRN: args=3
5:	NEW_OBJ_INST: class='System.String'
6:	MTHD_CALL: method='System.String:New:c*,'; native=false
7:	LOAD_INST_MEM
8:	MTHD_CALL: method='System.Runtime:GetProperty:o.System.String,'; native=false
9:	RTRN
--
---------------------------------------------------------
Method: id=16,7; name='System.Runtime:GetPlatform:'; return='o.System.String';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=-3853
1:	TRAP: args=1
2:	RTRN
--
---------------------------------------------------------
Method: id=16,12; name='System.Runtime:GetProperty:o.System.String,'; return='o.System.String';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3851
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=16,9; name='System.Runtime:GetTempDir:'; return='o.System.String';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=7
1:	NEW_CHAR_ARY: dimension=1
2:	LOAD_INT_LIT: value=24
3:	LOAD_INT_LIT: value=-3994
4:	TRAP_RTRN: args=3
5:	NEW_OBJ_INST: class='System.String'
6:	MTHD_CALL: method='System.String:New:c*,'; native=false
7:	LOAD_INST_MEM
8:	MTHD_CALL: method='System.Runtime:GetProperty:o.System.String,'; native=false
9:	RTRN
--
---------------------------------------------------------
Method: id=16,15; name='System.Runtime:GetTime:l,'; return='o.System.Time.Date';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	NEW_OBJ_INST: class='System.Time.Date'
3:	MTHD_CALL: method='System.Time.Date:New:l,'; native=false
4:	RTRN
--
---------------------------------------------------------
Method: id=16,10; name='System.Runtime:GetUserDir:'; return='o.System.String';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=8
1:	NEW_CHAR_ARY: dimension=1
2:	LOAD_INT_LIT: value=25
3:	LOAD_INT_LIT: value=-3994
4:	TRAP_RTRN: args=3
5:	NEW_OBJ_INST: class='System.String'
6:	MTHD_CALL: method='System.String:New:c*,'; native=false
7:	LOAD_INST_MEM
8:	MTHD_CALL: method='System.Runtime:GetProperty:o.System.String,'; native=false
9:	RTRN
--
---------------------------------------------------------
Method: id=16,8; name='System.Runtime:GetVersion:'; return='o.System.String';
  blocks=1; is_function=true; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=-3852
1:	TRAP: args=1
2:	RTRN
--
---------------------------------------------------------
Method: id=16,13; name='System.Runtime:HasProperty:o.System.String,'; return='l';
  blocks=1; is_function=true; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	LOAD_INT_VAR: id=1; local=true
2:	LOAD_INST_MEM
3:	MTHD_CALL: method='System.Runtime:GetProperty:o.System.String,'; native=false
4:	STOR_INT_VAR: id=2; local=true
5:	LOAD_INT_LIT: value=0
6:	LOAD_INT_VAR: id=2; local=true
7:	NEQL_INT
8:	JMP: index=13, conditional=true
9:	LOAD_INT_LIT: value=0
10:	STOR_INT_VAR: id=0; local=true
11:	JMP: index=19
12:	LBL
13:	LOAD_INT_LIT: value=1
14:	LOAD_INT_VAR: id=2; local=true
15:	MTHD_CALL: method='System.String:IsEmpty:'; native=false
16:	NEQL_INT
17:	STOR_INT_VAR: id=0; local=true
18:	LBL
19:	LOAD_INT_VAR: id=0; local=true
20:	RTRN
--
---------------------------------------------------------
Method: id=16,2; name='System.Runtime:RaiseSignal:o.System.Runtime#Signal,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=102
3:	TRAP: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=16,0; name='System.Runtime:SetLocale:o.System.String,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_LIT: value=6
2:	NEW_CHAR_ARY: dimension=1
3:	LOAD_INT_LIT: value=23
4:	LOAD_INT_LIT: value=-3994
5:	TRAP_RTRN: args=3
6:	NEW_OBJ_INST: class='System.String'
7:	MTHD_CALL: method='System.String:New:c*,'; native=false
8:	LOAD_INT_VAR: id=0; local=true
9:	LOAD_INST_MEM
10:	MTHD_CALL: method='System.Runtime:SetProperty:o.System.String,o.System.String,'; native=false
11:	RTRN
--
---------------------------------------------------------
Method: id=16,14; name='System.Runtime:SetProperty:o.System.String,o.System.String,'; return='n';
  blocks=1; is_function=true; num_params=2; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_VAR: id=1; local=true
4:	LOAD_INT_LIT: value=-3850
5:	TRAP: args=3
6:	RTRN
--
---------------------------------------------------------
Method: id=16,1; name='System.Runtime:SetSignal:o.System.Runtime#Signal,m.(i,)~n,'; return='n';
  blocks=1; is_function=true; num_params=3; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: FUNC_PARM
---------------------------------------------------------
0:	STOR_FUNC_VAR: id=1; local=true
1:	COPY_INT_VAR: id=0; local=true
2:	LOAD_INT_VAR: id=1; local=true
3:	LOAD_INT_LIT: value=101
4:	TRAP: args=3
5:	RTRN
--
=========================================================
Class: id=17; name='System.Time.Date'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=22; class_mem_size=0;
 instance_mem_size=72; is_debug=false

Interfaces:
	System.Compare
	System.Clone
	System.Stringify
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
  7: INT_PARM
  8: INT_PARM
=========================================================
---------------------------------------------------------
Method: id=17,16; name='System.Time.Date:AddDays:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_LIT: value=-3977
4:	TRAP: args=3
5:	RTRN
--
---------------------------------------------------------
Method: id=17,17; name='System.Time.Date:AddHours:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_LIT: value=-3976
4:	TRAP: args=3
5:	RTRN
--
---------------------------------------------------------
Method: id=17,18; name='System.Time.Date:AddMinutes:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_LIT: value=-3975
4:	TRAP: args=3
5:	RTRN
--
---------------------------------------------------------
Method: id=17,19; name='System.Time.Date:AddSeconds:i,'; return='n';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=0; local=true
3:	LOAD_INT_LIT: value=-3974
4:	TRAP: args=3
5:	RTRN
--
---------------------------------------------------------
Method: id=17,4; name='System.Time.Date:Clone:'; return='o.System.Compare';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=1; local=false
4:	LOAD_INST_MEM
5:	LOAD_INT_VAR: id=2; local=false
6:	LOAD_INST_MEM
7:	LOAD_INT_VAR: id=3; local=false
8:	LOAD_INST_MEM
9:	LOAD_INT_VAR: id=4; local=false
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=5; local=false
12:	LOAD_INST_MEM
13:	LOAD_INT_VAR: id=8; local=false
14:	NEW_OBJ_INST: class='System.Time.Date'
15:	MTHD_CALL: method='System.Time.Date:New:i,i,i,i,i,i,l,'; native=false
16:	OBJ_INST_CAST: to='System.Compare', id=13
17:	RTRN
--
---------------------------------------------------------
Method: id=17,3; name='System.Time.Date:Compare:o.System.Compare,'; return='i';
  blocks=1; is_function=false; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LBL
2:	LOAD_INT_VAR: id=0; local=true
3:	MTHD_CALL: method='System.Base:GetClassID:'; native=false
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='System.Base:GetClassID:'; native=false
6:	NEQL_INT
7:	JMP: index=11, conditional=false
8:	LOAD_INT_LIT: value=-1
9:	RTRN
10:	LBL
11:	LOAD_INT_VAR: id=0; local=true
12:	OBJ_INST_CAST: to='System.Time.Date', id=17
13:	STOR_INT_VAR: id=1; local=true
14:	LBL
15:	LOAD_INT_VAR: id=1; local=true
16:	LOAD_INT_VAR: id=2; local=false
17:	LOAD_INST_MEM
18:	LOAD_INT_VAR: id=2; local=false
19:	GTR_INT
20:	JMP: index=25, conditional=false
21:	LOAD_INT_LIT: value=1
22:	RTRN
23:	JMP: index=134
24:	LBL
25:	LOAD_INT_VAR: id=1; local=true
26:	LOAD_INT_VAR: id=2; local=false
27:	LOAD_INST_MEM
28:	LOAD_INT_VAR: id=2; local=false
29:	LES_INT
30:	JMP: index=35, conditional=false
31:	LOAD_INT_LIT: value=-1
32:	RTRN
33:	JMP: index=134
34:	LBL
35:	LOAD_INT_VAR: id=1; local=true
36:	LOAD_INT_VAR: id=1; local=false
37:	LOAD_INST_MEM
38:	LOAD_INT_VAR: id=1; local=false
39:	GTR_INT
40:	JMP: index=45, conditional=false
41:	LOAD_INT_LIT: value=1
42:	RTRN
43:	JMP: index=134
44:	LBL
45:	LOAD_INT_VAR: id=1; local=true
46:	LOAD_INT_VAR: id=1; local=false
47:	LOAD_INST_MEM
48:	LOAD_INT_VAR: id=1; local=false
49:	LES_INT
50:	JMP: index=55, conditional=false
51:	LOAD_INT_LIT: value=-1
52:	RTRN
53:	JMP: index=134
54:	LBL
55:	LOAD_INT_VAR: id=1; local=true
56:	LOAD_INT_VAR: id=0; local=false
57:	LOAD_INST_MEM
58:	LOAD_INT_VAR: id=0; local=false
59:	GTR_INT
60:	JMP: index=65, conditional=false
61:	LOAD_INT_LIT: value=1
62:	RTRN
63:	JMP: index=134
64:	LBL
65:	LOAD_INT_VAR: id=1; local=true
66:	LOAD_INT_VAR: id=0; local=false
67:	LOAD_INST_MEM
68:	LOAD_INT_VAR: id=0; local=false
69:	LES_INT
70:	JMP: index=75, conditional=false
71:	LOAD_INT_LIT: value=-1
72:	RTRN
73:	JMP: index=134
74:	LBL
75:	LOAD_INT_VAR: id=1; local=true
76:	LOAD_INT_VAR: id=3; local=false
77:	LOAD_INST_MEM
78:	LOAD_INT_VAR: id=3; local=false
79:	GTR_INT
80:	JMP: index=85, conditional=false
81:	LOAD_INT_LIT: value=1
82:	RTRN
83:	JMP: index=134
84:	LBL
85:	LOAD_INT_VAR: id=1; local=true
86:	LOAD_INT_VAR: id=3; local=false
87:	LOAD_INST_MEM
88:	LOAD_INT_VAR: id=3; local=false
89:	LES_INT
90:	JMP: index=95, conditional=false
91:	LOAD_INT_LIT: value=-1
92:	RTRN
93:	JMP: index=134
94:	LBL
95:	LOAD_INT_VAR: id=1; local=true
96:	LOAD_INT_VAR: id=4; local=false
97:	LOAD_INST_MEM
98:	LOAD_INT_VAR: id=4; local=false
99:	GTR_INT
100:	JMP: index=105, conditional=false
101:	LOAD_INT_LIT: value=1
102:	RTRN
103:	JMP: index=134
104:	LBL
105:	LOAD_INT_VAR: id=1; local=true
106:	LOAD_INT_VAR: id=4; local=false
107:	LOAD_INST_MEM
108:	LOAD_INT_VAR: id=4; local=false
109:	LES_INT
110:	JMP: index=115, conditional=false
111:	LOAD_INT_LIT: value=-1
112:	RTRN
113:	JMP: index=134
114:	LBL
115:	LOAD_INT_VAR: id=1; local=true
116:	LOAD_INT_VAR: id=5; local=false
117:	LOAD_INST_MEM
118:	LOAD_INT_VAR: id=5; local=false
119:	GTR_INT
120:	JMP: index=125, conditional=false
121:	LOAD_INT_LIT: value=1
122:	RTRN
123:	JMP: index=134
124:	LBL
125:	LOAD_INT_VAR: id=1; local=true
126:	LOAD_INT_VAR: id=5; local=false
127:	LOAD_INST_MEM
128:	LOAD_INT_VAR: id=5; local=false
129:	LES_INT
130:	JMP: index=134, conditional=false
131:	LOAD_INT_LIT: value=-1
132:	RTRN
133:	LBL
134:	LOAD_INT_LIT: value=0
135:	RTRN
--
---------------------------------------------------------
Method: id=17,7; name='System.Time.Date:GetDay:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=17,13; name='System.Time.Date:GetHours:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=3; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=17,14; name='System.Time.Date:GetMinutes:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=4; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=17,10; name='System.Time.Date:GetMonth:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=17,11; name='System.Time.Date:GetMonthName:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_ARY_PARM
  2: OBJ_PARM
  3: OBJ_ARY_PARM
---------------------------------------------------------
0:	LOAD_INT_LIT: value=8
1:	NEW_CHAR_ARY: dimension=1
2:	LOAD_INT_LIT: value=45
3:	LOAD_INT_LIT: value=-3994
4:	TRAP_RTRN: args=3
5:	NEW_OBJ_INST: class='System.String'
6:	MTHD_CALL: method='System.String:New:c*,'; native=false
7:	LOAD_INT_LIT: value=8
8:	NEW_CHAR_ARY: dimension=1
9:	LOAD_INT_LIT: value=44
10:	LOAD_INT_LIT: value=-3994
11:	TRAP_RTRN: args=3
12:	NEW_OBJ_INST: class='System.String'
13:	MTHD_CALL: method='System.String:New:c*,'; native=false
14:	LOAD_INT_LIT: value=7
15:	NEW_CHAR_ARY: dimension=1
16:	LOAD_INT_LIT: value=43
17:	LOAD_INT_LIT: value=-3994
18:	TRAP_RTRN: args=3
19:	NEW_OBJ_INST: class='System.String'
20:	MTHD_CALL: method='System.String:New:c*,'; native=false
21:	LOAD_INT_LIT: value=9
22:	NEW_CHAR_ARY: dimension=1
23:	LOAD_INT_LIT: value=42
24:	LOAD_INT_LIT: value=-3994
25:	TRAP_RTRN: args=3
26:	NEW_OBJ_INST: class='System.String'
27:	MTHD_CALL: method='System.String:New:c*,'; native=false
28:	LOAD_INT_LIT: value=6
29:	NEW_CHAR_ARY: dimension=1
30:	LOAD_INT_LIT: value=41
31:	LOAD_INT_LIT: value=-3994
32:	TRAP_RTRN: args=3
33:	NEW_OBJ_INST: class='System.String'
34:	MTHD_CALL: method='System.String:New:c*,'; native=false
35:	LOAD_INT_LIT: value=4
36:	NEW_CHAR_ARY: dimension=1
37:	LOAD_INT_LIT: value=40
38:	LOAD_INT_LIT: value=-3994
39:	TRAP_RTRN: args=3
40:	NEW_OBJ_INST: class='System.String'
41:	MTHD_CALL: method='System.String:New:c*,'; native=false
42:	LOAD_INT_LIT: value=4
43:	NEW_CHAR_ARY: dimension=1
44:	LOAD_INT_LIT: value=39
45:	LOAD_INT_LIT: value=-3994
46:	TRAP_RTRN: args=3
47:	NEW_OBJ_INST: class='System.String'
48:	MTHD_CALL: method='System.String:New:c*,'; native=false
49:	LOAD_INT_LIT: value=3
50:	NEW_CHAR_ARY: dimension=1
51:	LOAD_INT_LIT: value=38
52:	LOAD_INT_LIT: value=-3994
53:	TRAP_RTRN: args=3
54:	NEW_OBJ_INST: class='System.String'
55:	MTHD_CALL: method='System.String:New:c*,'; native=false
56:	LOAD_INT_LIT: value=5
57:	NEW_CHAR_ARY: dimension=1
58:	LOAD_INT_LIT: value=37
59:	LOAD_INT_LIT: value=-3994
60:	TRAP_RTRN: args=3
61:	NEW_OBJ_INST: class='System.String'
62:	MTHD_CALL: method='System.String:New:c*,'; native=false
63:	LOAD_INT_LIT: value=5
64:	NEW_CHAR_ARY: dimension=1
65:	LOAD_INT_LIT: value=36
66:	LOAD_INT_LIT: value=-3994
67:	TRAP_RTRN: args=3
68:	NEW_OBJ_INST: class='System.String'
69:	MTHD_CALL: method='System.String:New:c*,'; native=false
70:	LOAD_INT_LIT: value=8
71:	NEW_CHAR_ARY: dimension=1
72:	LOAD_INT_LIT: value=35
73:	LOAD_INT_LIT: value=-3994
74:	TRAP_RTRN: args=3
75:	NEW_OBJ_INST: class='System.String'
76:	MTHD_CALL: method='System.String:New:c*,'; native=false
77:	LOAD_INT_LIT: value=7
78:	NEW_CHAR_ARY: dimension=1
79:	LOAD_INT_LIT: value=34
80:	LOAD_INT_LIT: value=-3994
81:	TRAP_RTRN: args=3
82:	NEW_OBJ_INST: class='System.String'
83:	MTHD_CALL: method='System.String:New:c*,'; native=false
84:	LOAD_INT_LIT: value=12
85:	NEW_INT_ARY: dimension=1
86:	LOAD_INT_LIT: value=-3993
87:	TRAP_RTRN: args=14
88:	STOR_INT_VAR: id=1; local=true
89:	LBL
90:	LOAD_INT_LIT: value=-1
91:	LOAD_INST_MEM
92:	LOAD_INT_VAR: id=1; local=false
93:	GTR_INT
94:	JMP: index=99, conditional=true
95:	LOAD_INT_LIT: value=0
96:	STOR_INT_VAR: id=0; local=true
97:	JMP: index=112
98:	LBL
99:	LOAD_INT_VAR: id=1; local=true
100:	LOAD_INST_MEM
101:	STOR_INT_VAR: id=2; local=true
102:	STOR_INT_VAR: id=3; local=true
103:	LOAD_INT_VAR: id=3; local=true
104:	LOAD_ARY_SIZE
105:	LOAD_INT_LIT: value=1
106:	LOAD_INST_MEM
107:	LOAD_INT_VAR: id=1; local=false
108:	SUB_INT
109:	LES_INT
110:	STOR_INT_VAR: id=0; local=true
111:	LBL
112:	LOAD_INT_VAR: id=0; local=true
113:	JMP: index=122, conditional=false
114:	LOAD_INT_LIT: value=1
115:	LOAD_INST_MEM
116:	LOAD_INT_VAR: id=1; local=false
117:	SUB_INT
118:	LOAD_INT_VAR: id=1; local=true
119:	LOAD_INT_ARY_ELM: dimension=1; local=true
120:	RTRN
121:	LBL
122:	NEW_OBJ_INST: class='System.String'
123:	MTHD_CALL: method='System.String:New:'; native=false
124:	RTRN
--
---------------------------------------------------------
Method: id=17,15; name='System.Time.Date:GetSeconds:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=5; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=17,9; name='System.Time.Date:GetWeekDay:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=7; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=17,8; name='System.Time.Date:GetWeekDayName:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=24
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_ARY_PARM
  2: OBJ_PARM
  3: OBJ_ARY_PARM
---------------------------------------------------------
0:	LOAD_INT_LIT: value=8
1:	NEW_CHAR_ARY: dimension=1
2:	LOAD_INT_LIT: value=33
3:	LOAD_INT_LIT: value=-3994
4:	TRAP_RTRN: args=3
5:	NEW_OBJ_INST: class='System.String'
6:	MTHD_CALL: method='System.String:New:c*,'; native=false
7:	LOAD_INT_LIT: value=6
8:	NEW_CHAR_ARY: dimension=1
9:	LOAD_INT_LIT: value=32
10:	LOAD_INT_LIT: value=-3994
11:	TRAP_RTRN: args=3
12:	NEW_OBJ_INST: class='System.String'
13:	MTHD_CALL: method='System.String:New:c*,'; native=false
14:	LOAD_INT_LIT: value=8
15:	NEW_CHAR_ARY: dimension=1
16:	LOAD_INT_LIT: value=31
17:	LOAD_INT_LIT: value=-3994
18:	TRAP_RTRN: args=3
19:	NEW_OBJ_INST: class='System.String'
20:	MTHD_CALL: method='System.String:New:c*,'; native=false
21:	LOAD_INT_LIT: value=9
22:	NEW_CHAR_ARY: dimension=1
23:	LOAD_INT_LIT: value=30
24:	LOAD_INT_LIT: value=-3994
25:	TRAP_RTRN: args=3
26:	NEW_OBJ_INST: class='System.String'
27:	MTHD_CALL: method='System.String:New:c*,'; native=false
28:	LOAD_INT_LIT: value=7
29:	NEW_CHAR_ARY: dimension=1
30:	LOAD_INT_LIT: value=29
31:	LOAD_INT_LIT: value=-3994
32:	TRAP_RTRN: args=3
33:	NEW_OBJ_INST: class='System.String'
34:	MTHD_CALL: method='System.String:New:c*,'; native=false
35:	LOAD_INT_LIT: value=6
36:	NEW_CHAR_ARY: dimension=1
37:	LOAD_INT_LIT: value=28
38:	LOAD_INT_LIT: value=-3994
39:	TRAP_RTRN: args=3
40:	NEW_OBJ_INST: class='System.String'
41:	MTHD_CALL: method='System.String:New:c*,'; native=false
42:	LOAD_INT_LIT: value=6
43:	NEW_CHAR_ARY: dimension=1
44:	LOAD_INT_LIT: value=27
45:	LOAD_INT_LIT: value=-3994
46:	TRAP_RTRN: args=3
47:	NEW_OBJ_INST: class='System.String'
48:	MTHD_CALL: method='System.String:New:c*,'; native=false
49:	LOAD_INT_LIT: value=7
50:	NEW_INT_ARY: dimension=1
51:	LOAD_INT_LIT: value=-3993
52:	TRAP_RTRN: args=9
53:	STOR_INT_VAR: id=1; local=true
54:	LBL
55:	LOAD_INT_LIT: value=-1
56:	LOAD_INST_MEM
57:	LOAD_INT_VAR: id=7; local=false
58:	GTR_INT
59:	JMP: index=64, conditional=true
60:	LOAD_INT_LIT: value=0
61:	STOR_INT_VAR: id=0; local=true
62:	JMP: index=75
63:	LBL
64:	LOAD_INT_VAR: id=1; local=true
65:	LOAD_INST_MEM
66:	STOR_INT_VAR: id=2; local=true
67:	STOR_INT_VAR: id=3; local=true
68:	LOAD_INT_VAR: id=3; local=true
69:	LOAD_ARY_SIZE
70:	LOAD_INST_MEM
71:	LOAD_INT_VAR: id=7; local=false
72:	LES_INT
73:	STOR_INT_VAR: id=0; local=true
74:	LBL
75:	LOAD_INT_VAR: id=0; local=true
76:	JMP: index=83, conditional=false
77:	LOAD_INST_MEM
78:	LOAD_INT_VAR: id=7; local=false
79:	LOAD_INT_VAR: id=1; local=true
80:	LOAD_INT_ARY_ELM: dimension=1; local=true
81:	RTRN
82:	LBL
83:	NEW_OBJ_INST: class='System.String'
84:	MTHD_CALL: method='System.String:New:'; native=false
85:	RTRN
--
---------------------------------------------------------
Method: id=17,12; name='System.Time.Date:GetYear:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=17,5; name='System.Time.Date:HashID:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	MTHD_CALL: method='System.Time.Date:ToString:'; native=false
2:	MTHD_CALL: method='System.String:HashID:'; native=true
3:	RTRN
--
---------------------------------------------------------
Method: id=17,0; name='System.Time.Date:New:'; return='o.System.Time.Date';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	MTHD_CALL: method='System.Base:New:'; native=false
2:	POP_INT
3:	LOAD_INT_LIT: value=-3988
4:	TRAP: args=1
5:	LOAD_INST_MEM
6:	RTRN
--
---------------------------------------------------------
Method: id=17,6; name='System.Time.Date:New:i,i,i,i,i,i,l,'; return='o.System.Time.Date';
  blocks=1; is_function=false; num_params=7; mem_size=56
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
  4: INT_PARM
  5: INT_PARM
  6: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=6; local=true
1:	STOR_INT_VAR: id=5; local=true
2:	STOR_INT_VAR: id=4; local=true
3:	STOR_INT_VAR: id=3; local=true
4:	STOR_INT_VAR: id=2; local=true
5:	STOR_INT_VAR: id=1; local=true
6:	STOR_INT_VAR: id=0; local=true
7:	LOAD_INST_MEM
8:	MTHD_CALL: method='System.Base:New:'; native=false
9:	POP_INT
10:	LOAD_INST_MEM
11:	LOAD_INT_VAR: id=0; local=true
12:	LOAD_INT_VAR: id=1; local=true
13:	LOAD_INT_VAR: id=2; local=true
14:	LOAD_INT_VAR: id=3; local=true
15:	LOAD_INT_VAR: id=4; local=true
16:	LOAD_INT_VAR: id=5; local=true
17:	LOAD_INT_VAR: id=6; local=true
18:	LOAD_INT_LIT: value=-3979
19:	TRAP: args=9
20:	LOAD_INST_MEM
21:	RTRN
--
---------------------------------------------------------
Method: id=17,2; name='System.Time.Date:New:i,i,i,l,'; return='o.System.Time.Date';
  blocks=1; is_function=false; num_params=4; mem_size=32
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: INT_PARM
  2: INT_PARM
  3: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=3; local=true
1:	STOR_INT_VAR: id=2; local=true
2:	STOR_INT_VAR: id=1; local=true
3:	STOR_INT_VAR: id=0; local=true
4:	LOAD_INST_MEM
5:	MTHD_CALL: method='System.Base:New:'; native=false
6:	POP_INT
7:	LOAD_INST_MEM
8:	LOAD_INT_VAR: id=0; local=true
9:	LOAD_INT_VAR: id=1; local=true
10:	LOAD_INT_VAR: id=2; local=true
11:	LOAD_INT_VAR: id=3; local=true
12:	LOAD_INT_LIT: value=-3980
13:	TRAP: args=6
14:	LOAD_INST_MEM
15:	RTRN
--
---------------------------------------------------------
Method: id=17,1; name='System.Time.Date:New:l,'; return='o.System.Time.Date';
  blocks=1; is_function=false; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: INT_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INST_MEM
2:	MTHD_CALL: method='System.Base:New:'; native=false
3:	POP_INT
4:	LBL
5:	LOAD_INT_VAR: id=0; local=true
6:	JMP: index=11, conditional=false
7:	LOAD_INT_LIT: value=-3987
8:	TRAP: args=1
9:	JMP: index=14
10:	LBL
11:	LOAD_INT_LIT: value=-3988
12:	TRAP: args=1
13:	LBL
14:	LOAD_INST_MEM
15:	RTRN
--
---------------------------------------------------------
Method: id=17,21; name='System.Time.Date:ToShortString:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=48
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: INT_PARM
  4: OBJ_PARM
  5: OBJ_PARM
---------------------------------------------------------
0:	NEW_OBJ_INST: class='System.String'
1:	MTHD_CALL: method='System.String:New:'; native=false
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	LOAD_INT_VAR: id=1; local=false
5:	LOAD_INT_VAR: id=0; local=true
6:	STOR_INT_VAR: id=2; local=true
7:	STOR_INT_VAR: id=3; local=true
8:	LOAD_INT_VAR: id=3; local=true
9:	LOAD_INT_VAR: id=2; local=true
10:	MTHD_CALL: method='System.$Int:ToString:i,'; native=false
11:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
12:	LOAD_INT_VAR: id=2; local=true
13:	MTHD_CALL: method='System.String:Append:c*,'; native=false
14:	LOAD_CHAR_LIT value='/'
15:	LOAD_INT_VAR: id=0; local=true
16:	MTHD_CALL: method='System.String:Append:c,'; native=false
17:	LOAD_INST_MEM
18:	LOAD_INT_VAR: id=0; local=false
19:	LOAD_INT_VAR: id=0; local=true
20:	MTHD_CALL: method='System.String:Append:i,'; native=false
21:	LOAD_CHAR_LIT value='/'
22:	LOAD_INT_VAR: id=0; local=true
23:	MTHD_CALL: method='System.String:Append:c,'; native=false
24:	LOAD_INST_MEM
25:	LOAD_INT_VAR: id=2; local=false
26:	LOAD_INT_VAR: id=0; local=true
27:	MTHD_CALL: method='System.String:Append:i,'; native=false
28:	LOAD_INT_LIT: value=1
29:	NEW_CHAR_ARY: dimension=1
30:	LOAD_INT_LIT: value=46
31:	LOAD_INT_LIT: value=-3994
32:	TRAP_RTRN: args=3
33:	NEW_OBJ_INST: class='System.String'
34:	MTHD_CALL: method='System.String:New:c*,'; native=false
35:	LOAD_INT_VAR: id=0; local=true
36:	STOR_INT_VAR: id=4; local=true
37:	STOR_INT_VAR: id=5; local=true
38:	LOAD_INT_VAR: id=5; local=true
39:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
40:	LOAD_INT_VAR: id=4; local=true
41:	MTHD_CALL: method='System.String:Append:c*,'; native=false
42:	LOAD_INT_LIT: value=1
43:	STOR_INT_VAR: id=1; local=true
44:	LBL
45:	LOAD_INT_LIT: value=0
46:	LOAD_INST_MEM
47:	LOAD_INT_VAR: id=3; local=false
48:	EQL_INT
49:	JMP: index=55, conditional=false
50:	LOAD_INT_LIT: value=12
51:	LOAD_INT_VAR: id=0; local=true
52:	MTHD_CALL: method='System.String:Append:i,'; native=false
53:	JMP: index=87
54:	LBL
55:	LOAD_INT_LIT: value=12
56:	LOAD_INST_MEM
57:	LOAD_INT_VAR: id=3; local=false
58:	EQL_INT
59:	JMP: index=67, conditional=false
60:	LOAD_INT_LIT: value=12
61:	LOAD_INT_VAR: id=0; local=true
62:	MTHD_CALL: method='System.String:Append:i,'; native=false
63:	LOAD_INT_LIT: value=0
64:	STOR_INT_VAR: id=1; local=true
65:	JMP: index=87
66:	LBL
67:	LOAD_INT_LIT: value=12
68:	LOAD_INST_MEM
69:	LOAD_INT_VAR: id=3; local=false
70:	GTR_INT
71:	JMP: index=82, conditional=false
72:	LOAD_INT_LIT: value=12
73:	LOAD_INST_MEM
74:	LOAD_INT_VAR: id=3; local=false
75:	SUB_INT
76:	LOAD_INT_VAR: id=0; local=true
77:	MTHD_CALL: method='System.String:Append:i,'; native=false
78:	LOAD_INT_LIT: value=0
79:	STOR_INT_VAR: id=1; local=true
80:	JMP: index=87
81:	LBL
82:	LOAD_INST_MEM
83:	LOAD_INT_VAR: id=3; local=false
84:	LOAD_INT_VAR: id=0; local=true
85:	MTHD_CALL: method='System.String:Append:i,'; native=false
86:	LBL
87:	LOAD_INT_LIT: value=1
88:	NEW_CHAR_ARY: dimension=1
89:	LOAD_INT_LIT: value=47
90:	LOAD_INT_LIT: value=-3994
91:	TRAP_RTRN: args=3
92:	NEW_OBJ_INST: class='System.String'
93:	MTHD_CALL: method='System.String:New:c*,'; native=false
94:	LOAD_INT_VAR: id=0; local=true
95:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
96:	LBL
97:	LOAD_INT_LIT: value=10
98:	LOAD_INST_MEM
99:	LOAD_INT_VAR: id=4; local=false
100:	LES_INT
101:	JMP: index=106, conditional=false
102:	LOAD_CHAR_LIT value='0'
103:	LOAD_INT_VAR: id=0; local=true
104:	MTHD_CALL: method='System.String:Append:c,'; native=false
105:	LBL
106:	LOAD_INST_MEM
107:	LOAD_INT_VAR: id=4; local=false
108:	LOAD_INT_VAR: id=0; local=true
109:	MTHD_CALL: method='System.String:Append:i,'; native=false
110:	LOAD_INT_LIT: value=1
111:	NEW_CHAR_ARY: dimension=1
112:	LOAD_INT_LIT: value=47
113:	LOAD_INT_LIT: value=-3994
114:	TRAP_RTRN: args=3
115:	NEW_OBJ_INST: class='System.String'
116:	MTHD_CALL: method='System.String:New:c*,'; native=false
117:	LOAD_INT_VAR: id=0; local=true
118:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
119:	LBL
120:	LOAD_INT_LIT: value=10
121:	LOAD_INST_MEM
122:	LOAD_INT_VAR: id=5; local=false
123:	LES_INT
124:	JMP: index=129, conditional=false
125:	LOAD_CHAR_LIT value='0'
126:	LOAD_INT_VAR: id=0; local=true
127:	MTHD_CALL: method='System.String:Append:c,'; native=false
128:	LBL
129:	LOAD_INST_MEM
130:	LOAD_INT_VAR: id=5; local=false
131:	LOAD_INT_VAR: id=0; local=true
132:	MTHD_CALL: method='System.String:Append:i,'; native=false
133:	LBL
134:	LOAD_INT_VAR: id=1; local=true
135:	JMP: index=147, conditional=false
136:	LOAD_INT_LIT: value=3
137:	NEW_CHAR_ARY: dimension=1
138:	LOAD_INT_LIT: value=48
139:	LOAD_INT_LIT: value=-3994
140:	TRAP_RTRN: args=3
141:	NEW_OBJ_INST: class='System.String'
142:	MTHD_CALL: method='System.String:New:c*,'; native=false
143:	LOAD_INT_VAR: id=0; local=true
144:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
145:	JMP: index=157
146:	LBL
147:	LOAD_INT_LIT: value=3
148:	NEW_CHAR_ARY: dimension=1
149:	LOAD_INT_LIT: value=49
150:	LOAD_INT_LIT: value=-3994
151:	TRAP_RTRN: args=3
152:	NEW_OBJ_INST: class='System.String'
153:	MTHD_CALL: method='System.String:New:c*,'; native=false
154:	LOAD_INT_VAR: id=0; local=true
155:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
156:	LBL
157:	LOAD_INT_VAR: id=0; local=true
158:	RTRN
--
---------------------------------------------------------
Method: id=17,20; name='System.Time.Date:ToString:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=48
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: INT_PARM
  2: OBJ_PARM
  3: OBJ_PARM
  4: OBJ_PARM
  5: INT_PARM
---------------------------------------------------------
0:	NEW_OBJ_INST: class='System.String'
1:	MTHD_CALL: method='System.String:New:'; native=false
2:	STOR_INT_VAR: id=0; local=true
3:	LOAD_INST_MEM
4:	MTHD_CALL: method='System.Time.Date:GetWeekDayName:'; native=false
5:	LOAD_INT_VAR: id=0; local=true
6:	STOR_INT_VAR: id=2; local=true
7:	STOR_INT_VAR: id=3; local=true
8:	LOAD_INT_VAR: id=3; local=true
9:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
10:	LOAD_INT_VAR: id=2; local=true
11:	MTHD_CALL: method='System.String:Append:c*,'; native=false
12:	LOAD_INT_LIT: value=2
13:	NEW_CHAR_ARY: dimension=1
14:	LOAD_INT_LIT: value=10
15:	LOAD_INT_LIT: value=-3994
16:	TRAP_RTRN: args=3
17:	NEW_OBJ_INST: class='System.String'
18:	MTHD_CALL: method='System.String:New:c*,'; native=false
19:	LOAD_INT_VAR: id=0; local=true
20:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
21:	LOAD_INST_MEM
22:	MTHD_CALL: method='System.Time.Date:GetMonthName:'; native=false
23:	LOAD_INT_VAR: id=0; local=true
24:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
25:	LOAD_INT_LIT: value=1
26:	NEW_CHAR_ARY: dimension=1
27:	LOAD_INT_LIT: value=46
28:	LOAD_INT_LIT: value=-3994
29:	TRAP_RTRN: args=3
30:	NEW_OBJ_INST: class='System.String'
31:	MTHD_CALL: method='System.String:New:c*,'; native=false
32:	LOAD_INT_VAR: id=0; local=true
33:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
34:	LOAD_INST_MEM
35:	LOAD_INT_VAR: id=0; local=false
36:	LOAD_INT_VAR: id=0; local=true
37:	STOR_INT_VAR: id=4; local=true
38:	STOR_INT_VAR: id=5; local=true
39:	LOAD_INT_VAR: id=5; local=true
40:	LOAD_INT_VAR: id=4; local=true
41:	MTHD_CALL: method='System.$Int:ToString:i,'; native=false
42:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
43:	LOAD_INT_VAR: id=4; local=true
44:	MTHD_CALL: method='System.String:Append:c*,'; native=false
45:	LOAD_INT_LIT: value=2
46:	NEW_CHAR_ARY: dimension=1
47:	LOAD_INT_LIT: value=10
48:	LOAD_INT_LIT: value=-3994
49:	TRAP_RTRN: args=3
50:	NEW_OBJ_INST: class='System.String'
51:	MTHD_CALL: method='System.String:New:c*,'; native=false
52:	LOAD_INT_VAR: id=0; local=true
53:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
54:	LOAD_INST_MEM
55:	LOAD_INT_VAR: id=2; local=false
56:	LOAD_INT_VAR: id=0; local=true
57:	MTHD_CALL: method='System.String:Append:i,'; native=false
58:	LOAD_INT_LIT: value=1
59:	NEW_CHAR_ARY: dimension=1
60:	LOAD_INT_LIT: value=46
61:	LOAD_INT_LIT: value=-3994
62:	TRAP_RTRN: args=3
63:	NEW_OBJ_INST: class='System.String'
64:	MTHD_CALL: method='System.String:New:c*,'; native=false
65:	LOAD_INT_VAR: id=0; local=true
66:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
67:	LOAD_INT_LIT: value=1
68:	STOR_INT_VAR: id=1; local=true
69:	LBL
70:	LOAD_INT_LIT: value=0
71:	LOAD_INST_MEM
72:	LOAD_INT_VAR: id=3; local=false
73:	EQL_INT
74:	JMP: index=80, conditional=false
75:	LOAD_INT_LIT: value=12
76:	LOAD_INT_VAR: id=0; local=true
77:	MTHD_CALL: method='System.String:Append:i,'; native=false
78:	JMP: index=112
79:	LBL
80:	LOAD_INT_LIT: value=12
81:	LOAD_INST_MEM
82:	LOAD_INT_VAR: id=3; local=false
83:	EQL_INT
84:	JMP: index=92, conditional=false
85:	LOAD_INT_LIT: value=12
86:	LOAD_INT_VAR: id=0; local=true
87:	MTHD_CALL: method='System.String:Append:i,'; native=false
88:	LOAD_INT_LIT: value=0
89:	STOR_INT_VAR: id=1; local=true
90:	JMP: index=112
91:	LBL
92:	LOAD_INT_LIT: value=12
93:	LOAD_INST_MEM
94:	LOAD_INT_VAR: id=3; local=false
95:	GTR_INT
96:	JMP: index=107, conditional=false
97:	LOAD_INT_LIT: value=12
98:	LOAD_INST_MEM
99:	LOAD_INT_VAR: id=3; local=false
100:	SUB_INT
101:	LOAD_INT_VAR: id=0; local=true
102:	MTHD_CALL: method='System.String:Append:i,'; native=false
103:	LOAD_INT_LIT: value=0
104:	STOR_INT_VAR: id=1; local=true
105:	JMP: index=112
106:	LBL
107:	LOAD_INST_MEM
108:	LOAD_INT_VAR: id=3; local=false
109:	LOAD_INT_VAR: id=0; local=true
110:	MTHD_CALL: method='System.String:Append:i,'; native=false
111:	LBL
112:	LOAD_INT_LIT: value=1
113:	NEW_CHAR_ARY: dimension=1
114:	LOAD_INT_LIT: value=47
115:	LOAD_INT_LIT: value=-3994
116:	TRAP_RTRN: args=3
117:	NEW_OBJ_INST: class='System.String'
118:	MTHD_CALL: method='System.String:New:c*,'; native=false
119:	LOAD_INT_VAR: id=0; local=true
120:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
121:	LBL
122:	LOAD_INT_LIT: value=10
123:	LOAD_INST_MEM
124:	LOAD_INT_VAR: id=4; local=false
125:	LES_INT
126:	JMP: index=131, conditional=false
127:	LOAD_CHAR_LIT value='0'
128:	LOAD_INT_VAR: id=0; local=true
129:	MTHD_CALL: method='System.String:Append:c,'; native=false
130:	LBL
131:	LOAD_INST_MEM
132:	LOAD_INT_VAR: id=4; local=false
133:	LOAD_INT_VAR: id=0; local=true
134:	MTHD_CALL: method='System.String:Append:i,'; native=false
135:	LOAD_INT_LIT: value=1
136:	NEW_CHAR_ARY: dimension=1
137:	LOAD_INT_LIT: value=47
138:	LOAD_INT_LIT: value=-3994
139:	TRAP_RTRN: args=3
140:	NEW_OBJ_INST: class='System.String'
141:	MTHD_CALL: method='System.String:New:c*,'; native=false
142:	LOAD_INT_VAR: id=0; local=true
143:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
144:	LBL
145:	LOAD_INT_LIT: value=10
146:	LOAD_INST_MEM
147:	LOAD_INT_VAR: id=5; local=false
148:	LES_INT
149:	JMP: index=154, conditional=false
150:	LOAD_CHAR_LIT value='0'
151:	LOAD_INT_VAR: id=0; local=true
152:	MTHD_CALL: method='System.String:Append:c,'; native=false
153:	LBL
154:	LOAD_INST_MEM
155:	LOAD_INT_VAR: id=5; local=false
156:	LOAD_INT_VAR: id=0; local=true
157:	MTHD_CALL: method='System.String:Append:i,'; native=false
158:	LBL
159:	LOAD_INT_VAR: id=1; local=true
160:	JMP: index=172, conditional=false
161:	LOAD_INT_LIT: value=3
162:	NEW_CHAR_ARY: dimension=1
163:	LOAD_INT_LIT: value=48
164:	LOAD_INT_LIT: value=-3994
165:	TRAP_RTRN: args=3
166:	NEW_OBJ_INST: class='System.String'
167:	MTHD_CALL: method='System.String:New:c*,'; native=false
168:	LOAD_INT_VAR: id=0; local=true
169:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
170:	JMP: index=182
171:	LBL
172:	LOAD_INT_LIT: value=3
173:	NEW_CHAR_ARY: dimension=1
174:	LOAD_INT_LIT: value=49
175:	LOAD_INT_LIT: value=-3994
176:	TRAP_RTRN: args=3
177:	NEW_OBJ_INST: class='System.String'
178:	MTHD_CALL: method='System.String:New:c*,'; native=false
179:	LOAD_INT_VAR: id=0; local=true
180:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
181:	LBL
182:	LOAD_INT_VAR: id=0; local=true
183:	RTRN
--
=========================================================
Class: id=18; name='System.Introspection.Class'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=5; class_mem_size=0;
 instance_mem_size=16; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_ARY_PARM
=========================================================
---------------------------------------------------------
Method: id=18,4; name='System.Introspection.Class:GetMethodNumber:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=16
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_ARY_PARM
---------------------------------------------------------
0:	LBL
1:	LOAD_INT_LIT: value=0
2:	LOAD_INST_MEM
3:	LOAD_INT_VAR: id=1; local=false
4:	NEQL_INT
5:	JMP: index=15, conditional=false
6:	LOAD_INST_MEM
7:	LOAD_INT_VAR: id=1; local=false
8:	LOAD_INST_MEM
9:	STOR_INT_VAR: id=0; local=true
10:	STOR_INT_VAR: id=1; local=true
11:	LOAD_INT_VAR: id=1; local=true
12:	LOAD_ARY_SIZE
13:	RTRN
14:	LBL
15:	LOAD_INT_LIT: value=0
16:	RTRN
--
---------------------------------------------------------
Method: id=18,3; name='System.Introspection.Class:GetMethods:'; return='o.System.Introspection.Method*';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=18,2; name='System.Introspection.Class:GetName:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=18,0; name='System.Introspection.Class:Instance:o.System.String,'; return='o.System.Base';
  blocks=1; is_function=true; num_params=1; mem_size=8
---------------------------------------------------------
memory types:
  0: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=0; local=true
1:	LOAD_INT_VAR: id=0; local=true
2:	LOAD_INT_LIT: value=-3997
3:	TRAP_RTRN: args=2
4:	RTRN
--
---------------------------------------------------------
Method: id=18,1; name='System.Introspection.Class:IsLoaded:'; return='l';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INT_LIT: value=0
1:	LOAD_INST_MEM
2:	LOAD_INT_VAR: id=1; local=false
3:	NEQL_INT
4:	RTRN
--
=========================================================
Class: id=19; name='System.Introspection.Method'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=4; class_mem_size=0;
 instance_mem_size=40; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: OBJ_PARM
  3: OBJ_ARY_PARM
  4: OBJ_PARM
=========================================================
---------------------------------------------------------
Method: id=19,0; name='System.Introspection.Method:GetClass:'; return='o.System.Introspection.Class';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=19,1; name='System.Introspection.Method:GetName:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=19,2; name='System.Introspection.Method:GetParameters:'; return='o.System.Introspection.DataType*';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=3; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=19,3; name='System.Introspection.Method:GetReturn:'; return='o.System.Introspection.DataType';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=4; local=false
2:	RTRN
--
=========================================================
Class: id=20; name='System.Introspection.DataType'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=3; class_mem_size=0;
 instance_mem_size=24; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_PARM
  2: INT_PARM
=========================================================
---------------------------------------------------------
Method: id=20,2; name='System.Introspection.DataType:GetClassName:'; return='o.System.String';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=1; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=20,1; name='System.Introspection.DataType:GetDimension:'; return='i';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=2; local=false
2:	RTRN
--
---------------------------------------------------------
Method: id=20,0; name='System.Introspection.DataType:GetType:'; return='o.System.Introspection.DataType#TypeId';
  blocks=1; is_function=false; num_params=0; mem_size=0
---------------------------------------------------------
memory types: none
---------------------------------------------------------
0:	LOAD_INST_MEM
1:	LOAD_INT_VAR: id=0; local=false
2:	RTRN
--
=========================================================
Class: id=21; name='Test'; parent='System.Base'; pid=12;
 interface=false; virtual=0; num_generics=0; num_methods=2; class_mem_size=0;
 instance_mem_size=0; is_debug=false

Interfaces:
=========================================================
memory types: none
---------------------------------------------------------
memory types: none
=========================================================
---------------------------------------------------------
Method: id=21,0; name='Test:Main:o.System.String*,'; return='n';
  blocks=1; is_function=true; num_params=1; mem_size=16
---------------------------------------------------------
memory types:
  0: INT_PARM
  1: OBJ_ARY_PARM
  2: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	NEW_OBJ_INST: class='Collection.Generic.Map'
2:	MTHD_CALL: method='Collection.Generic.Map:New:'; native=false
3:	STOR_INT_VAR: id=2; local=true
4:	LOAD_INT_LIT: value=1
5:	NEW_OBJ_INST: class='System.IntHolder'
6:	MTHD_CALL: method='System.IntHolder:New:i,'; native=false
7:	LOAD_INT_LIT: value=3
8:	NEW_CHAR_ARY: dimension=1
9:	LOAD_INT_LIT: value=0
10:	LOAD_INT_LIT: value=-3994
11:	TRAP_RTRN: args=3
12:	NEW_OBJ_INST: class='System.String'
13:	MTHD_CALL: method='System.String:New:c*,'; native=false
14:	LOAD_INT_VAR: id=2; local=true
15:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,'; native=false
16:	LOAD_INT_LIT: value=3
17:	NEW_OBJ_INST: class='System.IntHolder'
18:	MTHD_CALL: method='System.IntHolder:New:i,'; native=false
19:	LOAD_INT_LIT: value=5
20:	NEW_CHAR_ARY: dimension=1
21:	LOAD_INT_LIT: value=1
22:	LOAD_INT_LIT: value=-3994
23:	TRAP_RTRN: args=3
24:	NEW_OBJ_INST: class='System.String'
25:	MTHD_CALL: method='System.String:New:c*,'; native=false
26:	LOAD_INT_VAR: id=2; local=true
27:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,'; native=false
28:	LOAD_INT_LIT: value=5
29:	NEW_OBJ_INST: class='System.IntHolder'
30:	MTHD_CALL: method='System.IntHolder:New:i,'; native=false
31:	LOAD_INT_LIT: value=4
32:	NEW_CHAR_ARY: dimension=1
33:	LOAD_INT_LIT: value=2
34:	LOAD_INT_LIT: value=-3994
35:	TRAP_RTRN: args=3
36:	NEW_OBJ_INST: class='System.String'
37:	MTHD_CALL: method='System.String:New:c*,'; native=false
38:	LOAD_INT_VAR: id=2; local=true
39:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,'; native=false
40:	LOAD_INT_LIT: value=7
41:	NEW_OBJ_INST: class='System.IntHolder'
42:	MTHD_CALL: method='System.IntHolder:New:i,'; native=false
43:	LOAD_INT_LIT: value=5
44:	NEW_CHAR_ARY: dimension=1
45:	LOAD_INT_LIT: value=3
46:	LOAD_INT_LIT: value=-3994
47:	TRAP_RTRN: args=3
48:	NEW_OBJ_INST: class='System.String'
49:	MTHD_CALL: method='System.String:New:c*,'; native=false
50:	LOAD_INT_VAR: id=2; local=true
51:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,'; native=false
52:	LOAD_INT_LIT: value=9
53:	NEW_OBJ_INST: class='System.IntHolder'
54:	MTHD_CALL: method='System.IntHolder:New:i,'; native=false
55:	LOAD_INT_LIT: value=4
56:	NEW_CHAR_ARY: dimension=1
57:	LOAD_INT_LIT: value=4
58:	LOAD_INT_LIT: value=-3994
59:	TRAP_RTRN: args=3
60:	NEW_OBJ_INST: class='System.String'
61:	MTHD_CALL: method='System.String:New:c*,'; native=false
62:	LOAD_INT_VAR: id=2; local=true
63:	MTHD_CALL: method='Collection.Generic.Map:Insert:o.K,o.V,'; native=false
64:	LOAD_INT_LIT: value=0
65:	LOAD_INT_LIT: value=1376257
66:	LOAD_INT_VAR: id=2; local=true
67:	MTHD_CALL: method='Collection.Generic.Map:Each:m.(o.K,o.V,)~n,'; native=false
68:	POP_INT
69:	RTRN
--
---------------------------------------------------------
Method: id=21,1; name='Test:#{L0}#:o.System.IntHolder,o.System.String,'; return='n';
  blocks=1; is_function=true; num_params=2; mem_size=40
---------------------------------------------------------
memory types:
  0: OBJ_PARM
  1: OBJ_PARM
  2: OBJ_PARM
  3: OBJ_PARM
  4: OBJ_PARM
---------------------------------------------------------
0:	STOR_INT_VAR: id=1; local=true
1:	STOR_INT_VAR: id=0; local=true
2:	NEW_OBJ_INST: class='System.String'
3:	MTHD_CALL: method='System.String:New:'; native=false
4:	STOR_INT_VAR: id=2; local=true
5:	LOAD_INT_VAR: id=0; local=true
6:	MTHD_CALL: method='System.IntHolder:ToString:'; native=false
7:	LOAD_INT_VAR: id=2; local=true
8:	STOR_INT_VAR: id=3; local=true
9:	STOR_INT_VAR: id=4; local=true
10:	LOAD_INT_VAR: id=4; local=true
11:	MTHD_CALL: method='System.String:ToCharArray:'; native=false
12:	LOAD_INT_VAR: id=3; local=true
13:	MTHD_CALL: method='System.String:Append:c*,'; native=false
14:	LOAD_INT_LIT: value=2
15:	NEW_CHAR_ARY: dimension=1
16:	LOAD_INT_LIT: value=6
17:	LOAD_INT_LIT: value=-3994
18:	TRAP_RTRN: args=3
19:	NEW_OBJ_INST: class='System.String'
20:	MTHD_CALL: method='System.String:New:c*,'; native=false
21:	LOAD_INT_VAR: id=2; local=true
22:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
23:	LOAD_INT_VAR: id=1; local=true
24:	LOAD_INT_VAR: id=2; local=true
25:	MTHD_CALL: method='System.String:Append:o.System.String,'; native=false
26:	LOAD_INT_VAR: id=2; local=true
27:	MTHD_CALL: method='System.String:PrintLine:'; native=false
28:	RTRN
--
--- file out: compressed=20299, uncompressed=104230 ---
