use Web.HTTP, Collection;

class Test {
	function : Main(args : String[]) ~ Nil {
#~
		m1 := [
			[1., 1., 10.]
			[1., 3., 14.]
			[1., 4., 15.]
			[1., 6., 18.]
			[1., 7., 20.]];
		m2 := [
			[9.]
			[10.]
			[13.]
			[14.]
			[16.]];
~#	

		# linear regression

		m1 := [
			[1., 49.]
			[1., 69.]
			[1., 89.]
			[1., 99.]
			[1., 109.]];
		
		m2 := [
			[124.]
			[95.]
			[71.]
			[45.]
			[18.]];

		coeffs := GetCoefficients(m1, m2);
		coeffs->PrintLine()

		GetRSquared(coeffs, 0, m1, m2)->PrintLine();
	}

	function : GetRSquared(coeffs : Float[,], col : Int, m1 : Float[,], m2 : Float[,]) ~ Float {
		dim := coeffs->Size();
		coeff_rows := dim[0];

		dim := m1->Size();
		data_rows := dim[0];

		data_avg := System.ML.Matrix2D->AverageColumn(col, m2);

		total_sum := 0.0;
		each(i : data_rows) {
			result := m2[i, col] - data_avg;
			total_sum += result * result;
		};

		regress_sum := 0.0;
		each(i : data_rows) {
			term := 0.0;

			each(j : coeff_rows) {
				if(j = 0) {
					term += coeffs[j, col];
				}
				else {
					term += (m1[i,1] * coeffs[j, col]);
				}
				
			};
			result := term - data_avg;
			regress_sum += result * result;
		};
		"{$regress_sum} / {$total_sum}"->PrintLine();

		return regress_sum / total_sum;
	}

	function : GetCoefficients(m1 : Float[,], m2 : Float[,]) ~ Float[,] {
		m1_trans := System.ML.Matrix2D->Transpose(m1);
		lhs_coeffs := System.ML.Matrix2D->Inverse(System.ML.Matrix2D->DotProduct(m1_trans, m1));
		rhs_coeffs := System.ML.Matrix2D->DotProduct(m1_trans, m2);
		
		return System.ML.Matrix2D->DotProduct(lhs_coeffs, rhs_coeffs);
	}
}