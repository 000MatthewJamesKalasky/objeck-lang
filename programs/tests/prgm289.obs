class Test {
	function : Main(args : String[]) ~ Nil {
		a := 7; b := 27;

		x := 5;
		(not x)->PrintLine();

		Foo(a,b)->PrintLine();

		"---"->PrintLine();
		c := (not a - not b) + 49;
		c->ToHexString()->PrintLine();
		c->PrintLine();
#~
		Standard->Print("a&b = ")->PrintLine(a and b);
		Standard->Print("a&b = ")->PrintLine(a or b);
		Standard->Print("a&b = ")->PrintLine(a xor b);
		Standard->Print("~a = ")->PrintLine(not a);
~#		
	}

#	function : Foo(i : Int) ~ Int {
	function : native : Foo(a : Int, b : Int) ~ Int {
		(not a - not b)->PrintLine();
		(not a)->PrintLine();
		(not b)->PrintLine();

		g := (not a - not b) + 49;
		return g;
	}
}
