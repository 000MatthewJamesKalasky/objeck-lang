use System.ML;

class Foo {
	function : Main(argv : String[]) ~ Nil {
		matrix := BoolMatrixRef->New([
			[false, true, true]
			[true, true, false]
			[true, true, true]
			[false, true, false]
			[false, true, false]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[false, true, false]
			[false, true, false]
			[false, true, false]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[false, true, true]
			[true, true, true]
			[true, true, true]
			[false, true, true]
		])

		matrix->ToString()->PrintLine()
		"---"->PrintLine()
		bag := matrix->RandomBag()->Get()
		goal := bag->Columns()
		acheived := DecisionTree->Matches(0, bag)
		DecisionTree->Gini(acheived, goal)->PrintLine()
	}
}