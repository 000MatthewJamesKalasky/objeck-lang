use System.ML;

class Test {
	function : Main(args : String[]) ~ Nil {
		data := BoolMatrixRef->New([
			[true, false, true]
			[true, false, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[false, true, true]
			[false, true, true]
			[true, true, false]
			[true, true, false]
			[false, true, false]
			[false, true, false]
			[false, true, false]
			[false, true, false]
			[true, false, true]
			[true, false, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[false, true, true]
			[false, true, true]
			[true, true, false]
			[true, true, false]
			[false, true, false]
			[false, true, false]
			[false, true, false]
			[false, true, false]
			[false, false, false]
			[false, false, false]
			[false, false, false]
			[false, false, false]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[false, true, true]
			[false, true, true]
			[true, true, false]
			[true, true, false]
			[false, true, false]
			[false, true, false]
			[true, false, true]
			[true, false, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[false, false, false]
			[false, false, false]
			[false, false, false]
			[false, false, false]
			[true, true, true]
			[true, true, true]
			[true, true, true]
			[false, true, true]
			[false, true, true]
			[true, true, false]
			[true, true, false]
			[false, true, false]
			[false, true, false]
			[true, false, true]
			[true, false, true]
			[true, true, true]
			[true, true, true]
			[true, true, true]
		]);

		forest := RandomForest->New(8);
		forest->Train(0.3, data);
		result := forest->Query(data);

		possible := Bool->Rows(result)->As(Float);
		matched := DecisionTree->Matches(result->Columns() - 1, result)->As(Float);
		matched_perc := (matched / possible * 100.0)->As(Int);
		"matched {$matched_perc}%"->PrintLine();
	}
}