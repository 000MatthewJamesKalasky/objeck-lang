use System.ML;

class Foo {
	function : Main(argv : String[]) ~ Nil {
		data := Bool->New[8,48]

		dims := data->Size()
		rows := dims[0]
		cols := dims[1]

		same_perc := 0.75 # same
		test_col := 3
		each(i : rows) {
			each(j : cols) {
				if(j = test_col) {
					data[i, j] := true
				}
				else {
					data[i, j] := Float->Random() < same_perc;	
				}
			}
		}

		matrix := BoolMatrixRef->New(data)

		"---"->PrintLine()
		trials := 12
		results := 0.0
		each(i : trials) {
			bag := matrix->RandomBag()->Get()
			goal := bag->Columns()
			acheived := DecisionTree->Matches(test_col, bag)
			results += DecisionTree->Gini(acheived, goal)->As(Float)
		}
		(trials / results)->PrintLine()

		"---"->PrintLine()
		trials := 8
		results := 0.0
		each(i : trials) {
			bag := matrix->RandomBag()->Get()
			goal := bag->Columns()
			acheived := DecisionTree->Matches(7, bag)
			results += DecisionTree->Gini(acheived, goal)->As(Float)
		}
		(trials / results)->PrintLine()
	}
}