#~
	testing:
		* generics with boxing
~#

class Test {
	function : Main(args : String[]) ~ Nil {
		v : Bar<IntHolder> := Bar->New(13)<IntHolder>;
		v->Apply(Add(IntHolder) ~ IntHolder);
		v->Get()->Get()->PrintLine();
	}

	function : Add(s : IntHolder) ~ IntHolder {
#		s := 7 + s;
s->Get()->PrintLine();
		s += 7; # THIS SHOULD WORK
s->Get()->PrintLine();		
		return s;
	}
}

class Foo {
	New() {}
}

class Bar<V> {
	@v : V;
	
	New() {}

	New(v : V) {
		@v := v;
	}

	method : public : Apply(f : (V) ~ V) ~ Nil {
		@v := f(@v);
	}
	
	method : public : Set(v : V) ~ Nil {
		@v := v;
	}
	
	method : public : Get() ~ V {
		return @v;
	}
}