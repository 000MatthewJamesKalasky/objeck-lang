class Test {
	function : Main(args : String[]) ~ Nil {
		if(args->Size() = 1) {
			IsFloat(args[0])->PrintLine();
		};
	}
	
	function : IsFloat(str : String) ~ Bool {
		count := str->Count('.');
		if(count = 1) {
			halves := str->Split(".");
			if(halves->Size() = 0) {
				str->Pop();	
				return IsInt(str);
			}
			else {
				first := halves[0];
				second := halves[1];
"first='{$first}', second='{$second}'"->PrintLine();
				if(first <> Nil) {
					if(<>IsInt(first)) {
						return false;
					};
				};
"p2"->PrintLine();
				if(second <> Nil) {
					if(<>IsInt(second)) {
						return false;
					};
				};

				return true;
			};

			return false;
		}
		else {
			return IsInt(str);
		};

		return false;
	}

	function : IsInt(str : String) ~ Bool {
		if(<>str->IsEmpty()) {
			check_hex := false;
			# TODO: unicode

			start := 0;
			if(str->Get(start) = '-' | str->Get(start) = '+') {
				start += 1;
			}
			else if(str->Size() > 1 & str->Get(start) = '0') {
				start += 1;
				check_hex := true;
			};

			if(check_hex) {
				if(str->Get(start) = 'x') {
					start += 1;

					for(i := start; i < str->Size(); i += 1;) {
						if(<>(str->Get(i) >= '0' & str->Get(i) <= '9') & <>((str->Get(i) >= 'a' & str->Get(i) <= 'f') | (str->Get(i) >= 'A' & str->Get(i) <= 'F'))) {
							return false;
						};
					};

					return true;
				};
			}
			else {
				for(i := start; i < str->Size(); i += 1;) {
					if(<>str->Get(i)->IsDigit()) {
						return false;
					};
				};

				return true;
			};
		};

		return false;
	}
}