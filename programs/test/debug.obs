# what about enums, jigga?
class Foo {
	function : Main(args : String[]) ~ Nil {
#		b := Bar->New()<String>;
		b : Bar<String, IntHolder> := Bar->New(IntHolder->New(13))<String, IntHolder>;
#		b : Bar := Bar->New();
#		b : Bar := Bar->New()<IntHolder>;

		b->Set("foo bar");
		s : IntHolder := b->Get();
		s->Get()->PrintLine();
#~
		bb := Bar->New[2]<String, IntHolder>;
		bb->Size()->PrintLine();
		bb[1] := b;
		bb[0] := Bar->New(IntHolder->New(7))<String, IntHolder>;
~#		
	}
}

# TODO: use 'Compare' internally
class Bar<A : String, B> {
	@aa : A;
	@bb : B;

	New(bb : B) {
		@bb := bb;
	}
	
	method : public : Set(a : A) ~ Nil {
		@aa := a;
		x := A->New[3];
		x[0] := String->New("Hello");
#		x[0]->PrintLine();
	}
	
	method : public : Get() ~ B {
		return @bb;
	}

}
