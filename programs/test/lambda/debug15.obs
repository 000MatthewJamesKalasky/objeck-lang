class Test {
	function : Main(args : String[]) ~ Nil {
		h1 := FuncHolder->New(DoInt(IntHolder) ~ IntHolder)<IntHolder>;
		h2 := FuncHolder->New(\(IntHolder) ~ IntHolder : (i) => i * i)<IntHolder>;
		h3 := FuncHolder->New(DoString(String) ~ String)<String>;

		e2 := h1->Get()<IntHolder>;
		e2(IntHolder->New(3))->Get()->PrintLine();
	}

	function : DoInt(i : IntHolder) ~ IntHolder {
		return i * 3;
	}

	function : DoString(s : String) ~ String {
		s := String->New(s);
		s += " tacking on...";
		return s;
	}
}

class FuncHolder <T> {
	@func : (T) ~ T;

	New(func : (T) ~ T) {
		@func := func;
	}

	method : public : Get() ~ (T) ~ T {
		return @func;
	}

	method : public : Set(func : (T) ~ T) ~ Nil {
		@func := func;
	}
}