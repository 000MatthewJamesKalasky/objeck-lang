use Collection.Generic;

class AoC {
	function : Main(args : String[]) ~ Nil {
		if(args->Size() = 1) {
			inputs := ReadInput(args[0])<String>;

			index := 0;
			three_elves := String->New[3];
			each(i : inputs) {
				input := inputs->Get(i);

				if((i + 1) % 3 = 0) {
					three_elves[index] := input;
					Foo(three_elves);
					index := 0;
				}
				else {
					three_elves[index++] := input;
				};
			};
		};
	}

	function : Foo(three_elves : String[]) ~ Nil {
		first_elf := three_elves[0];

		first_elf_set := Set->New()<IntHolder>;
		each(i : first_elf) {
			elf_value := first_elf->Get(i);

			value : Int;
			if(elf_value->IsLower()) {
				value := (elf_value - 96)->ToInt();
			}
			else {
				value := (elf_value - 38)->ToInt();
			};

			first_elf_set->Insert(value);
		};

		for(i := 1; i < three_elves->Size(); i += 1;) {
			elf := three_elves[i];
			elf->PrintLine();

			each(j : elf) {
				elf_value := elf->Get(j);

				value : Int;
				if(elf_value->IsLower()) {
					value := (elf_value - 96)->ToInt();
				}
				else {
					value := (elf_value - 38)->ToInt();
				};

				if(first_elf_set->Has(value)) {
					elf_value->PrintLine();
				};
			};
		};

		"---"->PrintLine();
	}

	function : ReadInput(file : String) ~ Vector<String> {
		inputs := Vector->New()<String>;

		reader := System.IO.Filesystem.FileReader->New(file);
		leaving {
			reader->Close();
		};

		line := reader->ReadLine();
		while(line <> Nil) {
			if(<>line->IsEmpty()) {
				inputs->AddBack(line);
			};
			line := reader->ReadLine();
		};

		return inputs;
	}
}