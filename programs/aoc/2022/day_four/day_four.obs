use Collection.Generic;

class AoC {
	function : Main(args : String[]) ~ Nil {
		if(args->Size() = 1) {
			inputs := ReadInput(args[0])<String>;

			each(i : inputs) {
				input := inputs->Get(i);

				elves := input->Split(",");
			
				elf_one := elves[0];
				elf_one_range := elf_one->Split("-");
				elf_one_start := elf_one_range[0]->ToInt();
				elf_one_end := elf_one_range[1]->ToInt();
"{$elf_one_start},{$elf_one_end}"->PrintLine();

				"---"->PrintLine();
				elf_two := elves[1];
				elf_two_range := elf_two->Split("-");
				elf_two_start := elf_two_range[0]->ToInt();
				elf_two_end := elf_two_range[1]->ToInt();
"{$elf_two_start},{$elf_two_end}"->PrintLine();

				"==="->PrintLine();
			};
		};
	}

	function : ReadInput(file : String) ~ Vector<String> {
		inputs := Vector->New()<String>;

		reader := System.IO.Filesystem.FileReader->New(file);
		leaving {
			reader->Close();
		};

		line := reader->ReadLine();
		while(line <> Nil) {
			if(<>line->IsEmpty()) {
				inputs->AddBack(line);
			};
			line := reader->ReadLine();
		};

		return inputs;
	}
}