use Game.SDL2;
use Game.Framework;

class DrawPixel {
	@framework : GameFramework;
					
	function : Main(args : String[]) ~ Nil {
		DrawPixel->New()->Run();
	}

	New() {
		@framework := GameFramework->New(320, 240, "RGB");
		@framework->SetClearColor(Color->New(0, 0, 0));
	}

	method : Run() ~ Nil {
		if(@framework->IsOk()) {
			e := @framework->GetEvent();
			
			quit := false;
			while(<>quit) {
				@framework->FrameStart();
				@framework->Clear();

				# process input
				while(e->Poll() <> 0) {
					if(e->GetType() = EventType->SDL_QUIT) {
						quit := true;
					};
				};
				
				@framework->GetRenderer()->SetDrawColor(255, 0, 0, 255);
#				@framework->GetRenderer()->DrawPoint(100, 100);	
				DrawCircle(100, 100, 8);

 				@framework->Show();
				@framework->FrameEnd();
			};
		}
		else {
			"--- Error Initializing Game Environment ---"->ErrorLine();
			return;
		};

		leaving {
			@framework->Quit();
		};
	}


	method : DrawCircle(x_ : Int, y_ : Int, radius : Int) ~ Nil { 
		x := radius - 1;
		y := 0;
		tx := 1;
		ty := 1;
		err := tx - (radius << 1);

		while (x >= y) {
			@framework->GetRenderer()->DrawPoint(x_ + x, y_ - y);
			@framework->GetRenderer()->DrawPoint(x_ + x, y_ + y);
			@framework->GetRenderer()->DrawPoint(x_ - x, y_ - y);
			@framework->GetRenderer()->DrawPoint(x_ - x, y_ + y);
			@framework->GetRenderer()->DrawPoint(x_ + y, y_ - x);
			@framework->GetRenderer()->DrawPoint(x_ + y, y_ + x);
			@framework->GetRenderer()->DrawPoint(x_ - y, y_ - x);
			@framework->GetRenderer()->DrawPoint(x_ - y, y_ + x);

			if(err <= 0) {
				y++;
				err += ty;
				ty += 2;
			};

			if(err > 0)	{
				x--;
				tx += 2;
				err += tx - (radius << 1);
			};
		};
	}
}